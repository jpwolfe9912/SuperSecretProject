ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_USART1_UART_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_USART1_UART_Init:
  27              	.LFB1155:
  28              		.file 1 "Core/Src/usart.c"
   1:Core/Src/usart.c **** /* USER CODE BEGIN Header */
   2:Core/Src/usart.c **** /**
   3:Core/Src/usart.c ****  ******************************************************************************
   4:Core/Src/usart.c ****  * @file    usart.c
   5:Core/Src/usart.c ****  * @brief   This file provides code for the configuration
   6:Core/Src/usart.c ****  *          of the USART instances.
   7:Core/Src/usart.c ****  ******************************************************************************
   8:Core/Src/usart.c ****  * @attention
   9:Core/Src/usart.c ****  *
  10:Core/Src/usart.c ****  * Copyright (c) 2023 STMicroelectronics.
  11:Core/Src/usart.c ****  * All rights reserved.
  12:Core/Src/usart.c ****  *
  13:Core/Src/usart.c ****  * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/usart.c ****  * in the root directory of this software component.
  15:Core/Src/usart.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/usart.c ****  *
  17:Core/Src/usart.c ****  ******************************************************************************
  18:Core/Src/usart.c ****  */
  19:Core/Src/usart.c **** /* USER CODE END Header */
  20:Core/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/usart.c **** #include "usart.h"
  22:Core/Src/usart.c **** 
  23:Core/Src/usart.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/usart.c **** /**
  25:Core/Src/usart.c ****  * \brief           Calculate length of statically allocated array
  26:Core/Src/usart.c ****  */
  27:Core/Src/usart.c **** #define ARRAY_LEN(x) (sizeof(x) / sizeof((x)[0]))
  28:Core/Src/usart.c **** 
  29:Core/Src/usart.c **** volatile bool utx_finished = false;
  30:Core/Src/usart.c **** UsartBuffs_t Buffs;
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 2


  31:Core/Src/usart.c **** /* USER CODE END 0 */
  32:Core/Src/usart.c **** 
  33:Core/Src/usart.c **** /* USART1 init function */
  34:Core/Src/usart.c **** 
  35:Core/Src/usart.c **** void MX_USART1_UART_Init(void)
  36:Core/Src/usart.c **** {
  29              		.loc 1 36 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 64
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 10B5     		push	{r4, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 90B0     		sub	sp, sp, #64
  38              		.cfi_def_cfa_offset 72
  37:Core/Src/usart.c **** 
  38:Core/Src/usart.c ****     /* USER CODE BEGIN USART1_Init 0 */
  39:Core/Src/usart.c **** 
  40:Core/Src/usart.c ****     /* USER CODE END USART1_Init 0 */
  41:Core/Src/usart.c **** 
  42:Core/Src/usart.c ****     LL_USART_InitTypeDef USART_InitStruct = {0};
  39              		.loc 1 42 5 view .LVU1
  40              		.loc 1 42 26 is_stmt 0 view .LVU2
  41 0004 0023     		movs	r3, #0
  42 0006 0993     		str	r3, [sp, #36]
  43 0008 0A93     		str	r3, [sp, #40]
  44 000a 0B93     		str	r3, [sp, #44]
  45 000c 0C93     		str	r3, [sp, #48]
  46 000e 0D93     		str	r3, [sp, #52]
  47 0010 0E93     		str	r3, [sp, #56]
  48 0012 0F93     		str	r3, [sp, #60]
  43:Core/Src/usart.c **** 
  44:Core/Src/usart.c ****     LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
  49              		.loc 1 44 5 is_stmt 1 view .LVU3
  50              		.loc 1 44 25 is_stmt 0 view .LVU4
  51 0014 0393     		str	r3, [sp, #12]
  52 0016 0493     		str	r3, [sp, #16]
  53 0018 0593     		str	r3, [sp, #20]
  54 001a 0693     		str	r3, [sp, #24]
  55 001c 0793     		str	r3, [sp, #28]
  56 001e 0893     		str	r3, [sp, #32]
  45:Core/Src/usart.c **** 
  46:Core/Src/usart.c ****     LL_RCC_SetUSARTClockSource(LL_RCC_USART1_CLKSOURCE_PCLK2);
  57              		.loc 1 46 5 is_stmt 1 view .LVU5
  58              	.LVL0:
  59              	.LBB257:
  60              	.LBI257:
  61              		.file 2 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h"
   1:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @file    stm32l4xx_ll_rcc.h
   4:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief   Header file of RCC LL module.
   6:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   ******************************************************************************
   7:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @attention
   8:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 3


   9:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * Copyright (c) 2017 STMicroelectronics.
  10:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * All rights reserved.
  11:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *
  12:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * This software is licensed under terms that can be found in the LICENSE file in
  13:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * the root directory of this software component.
  14:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   ******************************************************************************
  16:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
  17:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
  18:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  19:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #ifndef STM32L4xx_LL_RCC_H
  20:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define STM32L4xx_LL_RCC_H
  21:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
  22:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #ifdef __cplusplus
  23:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** extern "C" {
  24:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif
  25:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
  26:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /* Includes ------------------------------------------------------------------*/
  27:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #include "stm32l4xx.h"
  28:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
  29:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @addtogroup STM32L4xx_LL_Driver
  30:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
  31:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
  32:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
  33:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC)
  34:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
  35:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL RCC
  36:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
  37:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
  38:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
  39:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /* Private types -------------------------------------------------------------*/
  40:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /* Private variables ---------------------------------------------------------*/
  41:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /* Private constants ---------------------------------------------------------*/
  42:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_Private_Constants RCC Private Constants
  43:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
  44:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
  45:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /* Defines used to perform offsets*/
  46:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /* Offset used to access to RCC_CCIPR and RCC_CCIPR2 registers */
  47:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define RCC_OFFSET_CCIPR        0U
  48:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define RCC_OFFSET_CCIPR2       0x14U
  49:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
  50:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
  51:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
  52:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
  53:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
  54:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /* Private macros ------------------------------------------------------------*/
  55:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
  56:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_Private_Macros RCC Private Macros
  57:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
  58:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
  59:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
  60:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
  61:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
  62:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /*USE_FULL_LL_DRIVER*/
  63:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
  64:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /* Exported types ------------------------------------------------------------*/
  65:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 4


  66:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Types RCC Exported Types
  67:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
  68:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
  69:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
  70:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup LL_ES_CLOCK_FREQ Clocks Frequency Structure
  71:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
  72:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
  73:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
  74:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
  75:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  RCC Clocks Frequency Structure
  76:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
  77:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** typedef struct
  78:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
  79:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   uint32_t SYSCLK_Frequency;        /*!< SYSCLK clock frequency */
  80:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   uint32_t HCLK_Frequency;          /*!< HCLK clock frequency */
  81:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   uint32_t PCLK1_Frequency;         /*!< PCLK1 clock frequency */
  82:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   uint32_t PCLK2_Frequency;         /*!< PCLK2 clock frequency */
  83:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** } LL_RCC_ClocksTypeDef;
  84:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
  85:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
  86:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
  87:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
  88:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
  89:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
  90:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
  91:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
  92:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* USE_FULL_LL_DRIVER */
  93:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
  94:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /* Exported constants --------------------------------------------------------*/
  95:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Constants RCC Exported Constants
  96:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
  97:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
  98:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
  99:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_OSC_VALUES Oscillator Values adaptation
 100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief    Defines used to adapt values of different oscillators
 101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note     These values could be modified in the user environment according to
 102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *           HW set-up.
 103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if !defined  (HSE_VALUE)
 106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define HSE_VALUE    8000000U   /*!< Value of the HSE oscillator in Hz */
 107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* HSE_VALUE */
 108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if !defined  (HSI_VALUE)
 110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define HSI_VALUE    16000000U  /*!< Value of the HSI oscillator in Hz */
 111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* HSI_VALUE */
 112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if !defined  (LSE_VALUE)
 114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LSE_VALUE    32768U     /*!< Value of the LSE oscillator in Hz */
 115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* LSE_VALUE */
 116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if !defined  (LSI_VALUE)
 118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LSI_VALUE    32000U     /*!< Value of the LSI oscillator in Hz */
 119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* LSI_VALUE */
 120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
 121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if !defined  (HSI48_VALUE)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 5


 123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define HSI48_VALUE  48000000U  /*!< Value of the HSI48 oscillator in Hz */
 124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* HSI48_VALUE */
 125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
 126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if !defined  (EXTERNAL_SAI1_CLOCK_VALUE)
 128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define EXTERNAL_SAI1_CLOCK_VALUE    48000U /*!< Value of the SAI1_EXTCLK external oscillator in Hz
 129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* EXTERNAL_SAI1_CLOCK_VALUE */
 130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if !defined  (EXTERNAL_SAI2_CLOCK_VALUE)
 132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define EXTERNAL_SAI2_CLOCK_VALUE    48000U /*!< Value of the SAI2_EXTCLK external oscillator in Hz
 133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* EXTERNAL_SAI2_CLOCK_VALUE */
 134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_CLEAR_FLAG Clear Flags Defines
 139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief    Flags defines which can be used with LL_RCC_WriteReg function
 140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CICR_LSIRDYC                RCC_CICR_LSIRDYC     /*!< LSI Ready Interrupt Clear */
 143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CICR_LSERDYC                RCC_CICR_LSERDYC     /*!< LSE Ready Interrupt Clear */
 144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CICR_MSIRDYC                RCC_CICR_MSIRDYC     /*!< MSI Ready Interrupt Clear */
 145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CICR_HSIRDYC                RCC_CICR_HSIRDYC     /*!< HSI Ready Interrupt Clear */
 146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CICR_HSERDYC                RCC_CICR_HSERDYC     /*!< HSE Ready Interrupt Clear */
 147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CICR_PLLRDYC                RCC_CICR_PLLRDYC     /*!< PLL Ready Interrupt Clear */
 148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
 149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CICR_HSI48RDYC              RCC_CICR_HSI48RDYC   /*!< HSI48 Ready Interrupt Clear */
 150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
 151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLSAI1_SUPPORT)
 152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CICR_PLLSAI1RDYC            RCC_CICR_PLLSAI1RDYC /*!< PLLSAI1 Ready Interrupt Clear 
 153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLSAI1_SUPPORT */
 154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLSAI2_SUPPORT)
 155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CICR_PLLSAI2RDYC            RCC_CICR_PLLSAI2RDYC /*!< PLLSAI2 Ready Interrupt Clear 
 156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLSAI2_SUPPORT */
 157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CICR_LSECSSC                RCC_CICR_LSECSSC     /*!< LSE Clock Security System Inte
 158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CICR_CSSC                   RCC_CICR_CSSC        /*!< Clock Security System Interrup
 159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_GET_FLAG Get Flags Defines
 164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief    Flags defines which can be used with LL_RCC_ReadReg function
 165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CIFR_LSIRDYF                RCC_CIFR_LSIRDYF     /*!< LSI Ready Interrupt flag */
 168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CIFR_LSERDYF                RCC_CIFR_LSERDYF     /*!< LSE Ready Interrupt flag */
 169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CIFR_MSIRDYF                RCC_CIFR_MSIRDYF     /*!< MSI Ready Interrupt flag */
 170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CIFR_HSIRDYF                RCC_CIFR_HSIRDYF     /*!< HSI Ready Interrupt flag */
 171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CIFR_HSERDYF                RCC_CIFR_HSERDYF     /*!< HSE Ready Interrupt flag */
 172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CIFR_PLLRDYF                RCC_CIFR_PLLRDYF     /*!< PLL Ready Interrupt flag */
 173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
 174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CIFR_HSI48RDYF              RCC_CIFR_HSI48RDYF   /*!< HSI48 Ready Interrupt flag */
 175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
 176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLSAI1_SUPPORT)
 177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CIFR_PLLSAI1RDYF            RCC_CIFR_PLLSAI1RDYF /*!< PLLSAI1 Ready Interrupt flag *
 178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLSAI1_SUPPORT */
 179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLSAI2_SUPPORT)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 6


 180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CIFR_PLLSAI2RDYF            RCC_CIFR_PLLSAI2RDYF /*!< PLLSAI2 Ready Interrupt flag *
 181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLSAI2_SUPPORT */
 182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CIFR_LSECSSF                RCC_CIFR_LSECSSF     /*!< LSE Clock Security System Inte
 183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CIFR_CSSF                   RCC_CIFR_CSSF        /*!< Clock Security System Interrup
 184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CSR_FWRSTF                  RCC_CSR_FWRSTF     /*!< Firewall reset flag */
 185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CSR_LPWRRSTF                RCC_CSR_LPWRRSTF   /*!< Low-Power reset flag */
 186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CSR_OBLRSTF                 RCC_CSR_OBLRSTF    /*!< OBL reset flag */
 187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CSR_PINRSTF                 RCC_CSR_PINRSTF    /*!< PIN reset flag */
 188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CSR_SFTRSTF                 RCC_CSR_SFTRSTF    /*!< Software Reset flag */
 189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CSR_IWDGRSTF                RCC_CSR_IWDGRSTF   /*!< Independent Watchdog reset flag 
 190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CSR_WWDGRSTF                RCC_CSR_WWDGRSTF   /*!< Window watchdog reset flag */
 191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CSR_BORRSTF                 RCC_CSR_BORRSTF    /*!< BOR reset flag */
 192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_IT IT Defines
 197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief    IT defines which can be used with LL_RCC_ReadReg and  LL_RCC_WriteReg functions
 198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CIER_LSIRDYIE               RCC_CIER_LSIRDYIE      /*!< LSI Ready Interrupt Enable *
 201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CIER_LSERDYIE               RCC_CIER_LSERDYIE      /*!< LSE Ready Interrupt Enable *
 202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CIER_MSIRDYIE               RCC_CIER_MSIRDYIE      /*!< MSI Ready Interrupt Enable *
 203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CIER_HSIRDYIE               RCC_CIER_HSIRDYIE      /*!< HSI Ready Interrupt Enable *
 204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CIER_HSERDYIE               RCC_CIER_HSERDYIE      /*!< HSE Ready Interrupt Enable *
 205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CIER_PLLRDYIE               RCC_CIER_PLLRDYIE      /*!< PLL Ready Interrupt Enable *
 206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
 207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CIER_HSI48RDYIE             RCC_CIER_HSI48RDYIE    /*!< HSI48 Ready Interrupt Enable
 208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
 209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLSAI1_SUPPORT)
 210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CIER_PLLSAI1RDYIE           RCC_CIER_PLLSAI1RDYIE  /*!< PLLSAI1 Ready Interrupt Enab
 211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLSAI1_SUPPORT */
 212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLSAI2_SUPPORT)
 213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CIER_PLLSAI2RDYIE           RCC_CIER_PLLSAI2RDYIE  /*!< PLLSAI2 Ready Interrupt Enab
 214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLSAI2_SUPPORT */
 215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_CIER_LSECSSIE               RCC_CIER_LSECSSIE      /*!< LSE CSS Interrupt Enable */
 216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LSEDRIVE  LSE oscillator drive capability
 221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_LSEDRIVE_LOW                0x00000000U             /*!< Xtal mode lower driving cap
 224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_LSEDRIVE_MEDIUMLOW          RCC_BDCR_LSEDRV_0       /*!< Xtal mode medium low drivin
 225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_LSEDRIVE_MEDIUMHIGH         RCC_BDCR_LSEDRV_1       /*!< Xtal mode medium high drivi
 226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_LSEDRIVE_HIGH               RCC_BDCR_LSEDRV         /*!< Xtal mode higher driving ca
 227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_MSIRANGE  MSI clock ranges
 232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MSIRANGE_0                  RCC_CR_MSIRANGE_0  /*!< MSI = 100 KHz  */
 235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MSIRANGE_1                  RCC_CR_MSIRANGE_1  /*!< MSI = 200 KHz  */
 236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MSIRANGE_2                  RCC_CR_MSIRANGE_2  /*!< MSI = 400 KHz  */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 7


 237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MSIRANGE_3                  RCC_CR_MSIRANGE_3  /*!< MSI = 800 KHz  */
 238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MSIRANGE_4                  RCC_CR_MSIRANGE_4  /*!< MSI = 1 MHz    */
 239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MSIRANGE_5                  RCC_CR_MSIRANGE_5  /*!< MSI = 2 MHz    */
 240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MSIRANGE_6                  RCC_CR_MSIRANGE_6  /*!< MSI = 4 MHz    */
 241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MSIRANGE_7                  RCC_CR_MSIRANGE_7  /*!< MSI = 8 MHz    */
 242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MSIRANGE_8                  RCC_CR_MSIRANGE_8  /*!< MSI = 16 MHz   */
 243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MSIRANGE_9                  RCC_CR_MSIRANGE_9  /*!< MSI = 24 MHz   */
 244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MSIRANGE_10                 RCC_CR_MSIRANGE_10 /*!< MSI = 32 MHz   */
 245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MSIRANGE_11                 RCC_CR_MSIRANGE_11 /*!< MSI = 48 MHz   */
 246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_MSISRANGE  MSI range after Standby mode
 251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MSISRANGE_4                 RCC_CSR_MSISRANGE_1  /*!< MSI = 1 MHz    */
 254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MSISRANGE_5                 RCC_CSR_MSISRANGE_2  /*!< MSI = 2 MHz    */
 255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MSISRANGE_6                 RCC_CSR_MSISRANGE_4  /*!< MSI = 4 MHz    */
 256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MSISRANGE_7                 RCC_CSR_MSISRANGE_8  /*!< MSI = 8 MHz    */
 257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LSCO_CLKSOURCE  LSCO Selection
 262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_LSCO_CLKSOURCE_LSI          0x00000000U                 /*!< LSI selection for low s
 265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_LSCO_CLKSOURCE_LSE          RCC_BDCR_LSCOSEL      /*!< LSE selection for low speed c
 266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYS_CLKSOURCE  System clock switch
 271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_MSI           RCC_CFGR_SW_MSI    /*!< MSI selection as system clock */
 274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_HSI           RCC_CFGR_SW_HSI    /*!< HSI selection as system clock */
 275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_HSE           RCC_CFGR_SW_HSE    /*!< HSE selection as system clock */
 276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_PLL           RCC_CFGR_SW_PLL    /*!< PLL selection as system clock */
 277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYS_CLKSOURCE_STATUS  System clock switch status
 282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_MSI    RCC_CFGR_SWS_MSI   /*!< MSI used as system clock */
 285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_HSI    RCC_CFGR_SWS_HSI   /*!< HSI used as system clock */
 286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_HSE    RCC_CFGR_SWS_HSE   /*!< HSE used as system clock */
 287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_PLL    RCC_CFGR_SWS_PLL   /*!< PLL used as system clock */
 288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYSCLK_DIV  AHB prescaler
 293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 8


 294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_1                RCC_CFGR_HPRE_DIV1   /*!< SYSCLK not divided */
 296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_2                RCC_CFGR_HPRE_DIV2   /*!< SYSCLK divided by 2 */
 297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_4                RCC_CFGR_HPRE_DIV4   /*!< SYSCLK divided by 4 */
 298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_8                RCC_CFGR_HPRE_DIV8   /*!< SYSCLK divided by 8 */
 299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_16               RCC_CFGR_HPRE_DIV16  /*!< SYSCLK divided by 16 */
 300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_64               RCC_CFGR_HPRE_DIV64  /*!< SYSCLK divided by 64 */
 301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_128              RCC_CFGR_HPRE_DIV128 /*!< SYSCLK divided by 128 */
 302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_256              RCC_CFGR_HPRE_DIV256 /*!< SYSCLK divided by 256 */
 303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_512              RCC_CFGR_HPRE_DIV512 /*!< SYSCLK divided by 512 */
 304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_APB1_DIV  APB low-speed prescaler (APB1)
 309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_1                  RCC_CFGR_PPRE1_DIV1  /*!< HCLK not divided */
 312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_2                  RCC_CFGR_PPRE1_DIV2  /*!< HCLK divided by 2 */
 313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_4                  RCC_CFGR_PPRE1_DIV4  /*!< HCLK divided by 4 */
 314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_8                  RCC_CFGR_PPRE1_DIV8  /*!< HCLK divided by 8 */
 315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_16                 RCC_CFGR_PPRE1_DIV16 /*!< HCLK divided by 16 */
 316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_APB2_DIV  APB high-speed prescaler (APB2)
 321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_1                  RCC_CFGR_PPRE2_DIV1  /*!< HCLK not divided */
 324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_2                  RCC_CFGR_PPRE2_DIV2  /*!< HCLK divided by 2 */
 325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_4                  RCC_CFGR_PPRE2_DIV4  /*!< HCLK divided by 4 */
 326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_8                  RCC_CFGR_PPRE2_DIV8  /*!< HCLK divided by 8 */
 327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_16                 RCC_CFGR_PPRE2_DIV16 /*!< HCLK divided by 16 */
 328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_STOP_WAKEUPCLOCK  Wakeup from Stop and CSS backup clock selection
 333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_STOP_WAKEUPCLOCK_MSI        0x00000000U             /*!< MSI selection after wake-up
 336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_STOP_WAKEUPCLOCK_HSI        RCC_CFGR_STOPWUCK       /*!< HSI selection after wake-up
 337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_MCO1SOURCE  MCO1 SOURCE selection
 342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_NOCLOCK          0x00000000U                            /*!< MCO output d
 345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_SYSCLK           RCC_CFGR_MCOSEL_0                      /*!< SYSCLK selec
 346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_MSI              RCC_CFGR_MCOSEL_1                      /*!< MSI selectio
 347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_HSI              (RCC_CFGR_MCOSEL_0| RCC_CFGR_MCOSEL_1) /*!< HSI16 select
 348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_HSE              RCC_CFGR_MCOSEL_2                      /*!< HSE selectio
 349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_PLLCLK           (RCC_CFGR_MCOSEL_0|RCC_CFGR_MCOSEL_2)  /*!< Main PLL sel
 350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_LSI              (RCC_CFGR_MCOSEL_1|RCC_CFGR_MCOSEL_2)  /*!< LSI selectio
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 9


 351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_LSE              (RCC_CFGR_MCOSEL_0|RCC_CFGR_MCOSEL_1|RCC_CFGR_MCOSEL_2) 
 352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
 353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_HSI48            RCC_CFGR_MCOSEL_3                      /*!< HSI48 select
 354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
 355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_MCO1_DIV  MCO1 prescaler
 360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_1                  RCC_CFGR_MCOPRE_DIV1       /*!< MCO not divided */
 363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_2                  RCC_CFGR_MCOPRE_DIV2       /*!< MCO divided by 2 */
 364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_4                  RCC_CFGR_MCOPRE_DIV4       /*!< MCO divided by 4 */
 365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_8                  RCC_CFGR_MCOPRE_DIV8       /*!< MCO divided by 8 */
 366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_16                 RCC_CFGR_MCOPRE_DIV16      /*!< MCO divided by 16 */
 367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
 372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PERIPH_FREQUENCY Peripheral clock frequency
 373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PERIPH_FREQUENCY_NO         0x00000000U                 /*!< No clock enabled for th
 376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PERIPH_FREQUENCY_NA         0xFFFFFFFFU                 /*!< Frequency cannot be pro
 377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* USE_FULL_LL_DRIVER */
 381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USART1_CLKSOURCE  Peripheral USART clock source selection
 383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE_PCLK2      (RCC_CCIPR_USART1SEL << 16U)                           /
 386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE_SYSCLK     ((RCC_CCIPR_USART1SEL << 16U) | RCC_CCIPR_USART1SEL_0) /
 387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE_HSI        ((RCC_CCIPR_USART1SEL << 16U) | RCC_CCIPR_USART1SEL_1) /
 388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE_LSE        ((RCC_CCIPR_USART1SEL << 16U) | RCC_CCIPR_USART1SEL)   /
 389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE_PCLK1      (RCC_CCIPR_USART2SEL << 16U)                           /
 390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE_SYSCLK     ((RCC_CCIPR_USART2SEL << 16U) | RCC_CCIPR_USART2SEL_0) /
 391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE_HSI        ((RCC_CCIPR_USART2SEL << 16U) | RCC_CCIPR_USART2SEL_1) /
 392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE_LSE        ((RCC_CCIPR_USART2SEL << 16U) | RCC_CCIPR_USART2SEL)   /
 393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_CCIPR_USART3SEL)
 394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_USART3_CLKSOURCE_PCLK1      (RCC_CCIPR_USART3SEL << 16U)                           /
 395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_USART3_CLKSOURCE_SYSCLK     ((RCC_CCIPR_USART3SEL << 16U) | RCC_CCIPR_USART3SEL_0) /
 396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_USART3_CLKSOURCE_HSI        ((RCC_CCIPR_USART3SEL << 16U) | RCC_CCIPR_USART3SEL_1) /
 397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_USART3_CLKSOURCE_LSE        ((RCC_CCIPR_USART3SEL << 16U) | RCC_CCIPR_USART3SEL)   /
 398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_CCIPR_USART3SEL */
 399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_CCIPR_UART4SEL) || defined(RCC_CCIPR_UART5SEL)
 404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_UART4_CLKSOURCE  Peripheral UART clock source selection
 405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_CCIPR_UART4SEL)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 10


 408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_UART4_CLKSOURCE_PCLK1       (RCC_CCIPR_UART4SEL << 16U)                           /*
 409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_UART4_CLKSOURCE_SYSCLK      ((RCC_CCIPR_UART4SEL << 16U) | RCC_CCIPR_UART4SEL_0)  /*
 410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_UART4_CLKSOURCE_HSI         ((RCC_CCIPR_UART4SEL << 16U) | RCC_CCIPR_UART4SEL_1)  /*
 411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_UART4_CLKSOURCE_LSE         ((RCC_CCIPR_UART4SEL << 16U) | RCC_CCIPR_UART4SEL)    /*
 412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_CCIPR_UART4SEL */
 413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_CCIPR_UART5SEL)
 414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_UART5_CLKSOURCE_PCLK1       (RCC_CCIPR_UART5SEL << 16U)                           /*
 415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_UART5_CLKSOURCE_SYSCLK      ((RCC_CCIPR_UART5SEL << 16U) | RCC_CCIPR_UART5SEL_0)  /*
 416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_UART5_CLKSOURCE_HSI         ((RCC_CCIPR_UART5SEL << 16U) | RCC_CCIPR_UART5SEL_1)  /*
 417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_UART5_CLKSOURCE_LSE         ((RCC_CCIPR_UART5SEL << 16U) | RCC_CCIPR_UART5SEL)    /*
 418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_CCIPR_UART5SEL */
 419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_CCIPR_UART4SEL || RCC_CCIPR_UART5SEL */
 423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LPUART1_CLKSOURCE  Peripheral LPUART clock source selection
 425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_LPUART1_CLKSOURCE_PCLK1     0x00000000U                     /*!< PCLK1 clock used as
 428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_LPUART1_CLKSOURCE_SYSCLK    RCC_CCIPR_LPUART1SEL_0          /*!< SYSCLK clock used a
 429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_LPUART1_CLKSOURCE_HSI       RCC_CCIPR_LPUART1SEL_1          /*!< HSI clock used as L
 430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_LPUART1_CLKSOURCE_LSE       RCC_CCIPR_LPUART1SEL            /*!< LSE clock used as L
 431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_I2C1_CLKSOURCE  Peripheral I2C clock source selection
 436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_I2C1_CLKSOURCE_PCLK1        ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_I2C1SEL_Pos << 1
 439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_I2C1_CLKSOURCE_SYSCLK       ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_I2C1SEL_Pos << 1
 440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_I2C1_CLKSOURCE_HSI          ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_I2C1SEL_Pos << 1
 441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_CCIPR_I2C2SEL)
 442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_I2C2_CLKSOURCE_PCLK1        ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_I2C2SEL_Pos << 1
 443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_I2C2_CLKSOURCE_SYSCLK       ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_I2C2SEL_Pos << 1
 444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_I2C2_CLKSOURCE_HSI          ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_I2C2SEL_Pos << 1
 445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_CCIPR_I2C2SEL */
 446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_I2C3_CLKSOURCE_PCLK1        ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_I2C3SEL_Pos << 1
 447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_I2C3_CLKSOURCE_SYSCLK       ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_I2C3SEL_Pos << 1
 448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_I2C3_CLKSOURCE_HSI          ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_I2C3SEL_Pos << 1
 449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_CCIPR2_I2C4SEL)
 450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_I2C4_CLKSOURCE_PCLK1        ((RCC_OFFSET_CCIPR2 << 24U) | (RCC_CCIPR2_I2C4SEL_Pos <<
 451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_I2C4_CLKSOURCE_SYSCLK       ((RCC_OFFSET_CCIPR2 << 24U) | (RCC_CCIPR2_I2C4SEL_Pos <<
 452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_I2C4_CLKSOURCE_HSI          ((RCC_OFFSET_CCIPR2 << 24U) | (RCC_CCIPR2_I2C4SEL_Pos <<
 453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_CCIPR2_I2C4SEL */
 454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LPTIM1_CLKSOURCE  Peripheral LPTIM clock source selection
 459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_LPTIM1_CLKSOURCE_PCLK1      RCC_CCIPR_LPTIM1SEL                                    /
 462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_LPTIM1_CLKSOURCE_LSI        (RCC_CCIPR_LPTIM1SEL | (RCC_CCIPR_LPTIM1SEL_0 >> 16U)) /
 463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_LPTIM1_CLKSOURCE_HSI        (RCC_CCIPR_LPTIM1SEL | (RCC_CCIPR_LPTIM1SEL_1 >> 16U)) /
 464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_LPTIM1_CLKSOURCE_LSE        (RCC_CCIPR_LPTIM1SEL | (RCC_CCIPR_LPTIM1SEL >> 16U))   /
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 11


 465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_LPTIM2_CLKSOURCE_PCLK1      RCC_CCIPR_LPTIM2SEL                                    /
 466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_LPTIM2_CLKSOURCE_LSI        (RCC_CCIPR_LPTIM2SEL | (RCC_CCIPR_LPTIM2SEL_0 >> 16U)) /
 467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_LPTIM2_CLKSOURCE_HSI        (RCC_CCIPR_LPTIM2SEL | (RCC_CCIPR_LPTIM2SEL_1 >> 16U)) /
 468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_LPTIM2_CLKSOURCE_LSE        (RCC_CCIPR_LPTIM2SEL | (RCC_CCIPR_LPTIM2SEL >> 16U))   /
 469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SAI1_CLKSOURCE  Peripheral SAI clock source selection
 474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_CCIPR2_SAI1SEL)
 477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SAI1_CLKSOURCE_PLLSAI1      (RCC_CCIPR2_SAI1SEL << 16U)                          /*!
 478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SAI1_CLKSOURCE_PLLSAI2      ((RCC_CCIPR2_SAI1SEL << 16U) | RCC_CCIPR2_SAI1SEL_0) /*!
 479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SAI1_CLKSOURCE_PLL          ((RCC_CCIPR2_SAI1SEL << 16U) | RCC_CCIPR2_SAI1SEL_1) /*!
 480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SAI1_CLKSOURCE_PIN          ((RCC_CCIPR2_SAI1SEL << 16U) | (RCC_CCIPR2_SAI1SEL_1 | R
 481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SAI1_CLKSOURCE_HSI          ((RCC_CCIPR2_SAI1SEL << 16U) | RCC_CCIPR2_SAI1SEL_2) /*!
 482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #elif defined(RCC_CCIPR_SAI1SEL)
 483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SAI1_CLKSOURCE_PLLSAI1      RCC_CCIPR_SAI1SEL                                    /*!
 484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLSAI2_SUPPORT)
 485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SAI1_CLKSOURCE_PLLSAI2      (RCC_CCIPR_SAI1SEL | (RCC_CCIPR_SAI1SEL_0 >> 16U))   /*!
 486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLSAI2_SUPPORT */
 487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SAI1_CLKSOURCE_PLL          (RCC_CCIPR_SAI1SEL | (RCC_CCIPR_SAI1SEL_1 >> 16U))   /*!
 488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SAI1_CLKSOURCE_PIN          (RCC_CCIPR_SAI1SEL | (RCC_CCIPR_SAI1SEL >> 16U))     /*!
 489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_CCIPR2_SAI1SEL */
 490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_CCIPR2_SAI2SEL)
 492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SAI2_CLKSOURCE_PLLSAI1      (RCC_CCIPR2_SAI2SEL << 16U)                          /*!
 493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SAI2_CLKSOURCE_PLLSAI2      ((RCC_CCIPR2_SAI2SEL << 16U) | RCC_CCIPR2_SAI2SEL_0) /*!
 494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SAI2_CLKSOURCE_PLL          ((RCC_CCIPR2_SAI2SEL << 16U) | RCC_CCIPR2_SAI2SEL_1) /*!
 495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SAI2_CLKSOURCE_PIN          ((RCC_CCIPR2_SAI2SEL << 16U) | (RCC_CCIPR2_SAI2SEL_1 | R
 496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SAI2_CLKSOURCE_HSI          ((RCC_CCIPR2_SAI2SEL << 16U) | RCC_CCIPR2_SAI2SEL_2) /*!
 497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #elif defined(RCC_CCIPR_SAI2SEL)
 498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SAI2_CLKSOURCE_PLLSAI1      RCC_CCIPR_SAI2SEL                                    /*!
 499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLSAI2_SUPPORT)
 500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SAI2_CLKSOURCE_PLLSAI2      (RCC_CCIPR_SAI2SEL | (RCC_CCIPR_SAI2SEL_0 >> 16U))   /*!
 501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLSAI2_SUPPORT */
 502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SAI2_CLKSOURCE_PLL          (RCC_CCIPR_SAI2SEL | (RCC_CCIPR_SAI2SEL_1 >> 16U))   /*!
 503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SAI2_CLKSOURCE_PIN          (RCC_CCIPR_SAI2SEL | (RCC_CCIPR_SAI2SEL >> 16U))     /*!
 504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_CCIPR2_SAI2SEL */
 505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_CCIPR2_SDMMCSEL)
 510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SDMMC1_KERNELCLKSOURCE  Peripheral SDMMC kernel clock source selection
 511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SDMMC1_KERNELCLKSOURCE_48CLK  0x00000000U          /*!< 48MHz clock from internal mu
 514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SDMMC1_KERNELCLKSOURCE_PLLP   RCC_CCIPR2_SDMMCSEL  /*!< PLLSAI3CLK clock used as SDM
 515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_CCIPR2_SDMMCSEL */
 519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(SDMMC1)
 521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SDMMC1_CLKSOURCE  Peripheral SDMMC clock source selection
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 12


 522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
 525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SDMMC1_CLKSOURCE_HSI48      0x00000000U          /*!< HSI48 clock used as SDMMC1 clo
 526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #else
 527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SDMMC1_CLKSOURCE_NONE       0x00000000U          /*!< No clock used as SDMMC1 clock 
 528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif
 529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLSAI1_SUPPORT)
 530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SDMMC1_CLKSOURCE_PLLSAI1    RCC_CCIPR_CLK48SEL_0 /*!< PLLSAI1 clock used as SDMMC1 c
 531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLSAI1_SUPPORT */
 532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SDMMC1_CLKSOURCE_PLL        RCC_CCIPR_CLK48SEL_1 /*!< PLL clock used as SDMMC1 clock
 533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SDMMC1_CLKSOURCE_MSI        RCC_CCIPR_CLK48SEL   /*!< MSI clock used as SDMMC1 clock
 534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* SDMMC1 */
 538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_RNG_CLKSOURCE  Peripheral RNG clock source selection
 540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
 543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_RNG_CLKSOURCE_HSI48         0x00000000U          /*!< HSI48 clock used as RNG clock 
 544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #else
 545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_RNG_CLKSOURCE_NONE          0x00000000U          /*!< No clock used as RNG clock sou
 546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif
 547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLSAI1_SUPPORT)
 548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_RNG_CLKSOURCE_PLLSAI1       RCC_CCIPR_CLK48SEL_0 /*!< PLLSAI1 clock used as RNG cloc
 549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLSAI1_SUPPORT */
 550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_RNG_CLKSOURCE_PLL           RCC_CCIPR_CLK48SEL_1 /*!< PLL clock used as RNG clock so
 551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_RNG_CLKSOURCE_MSI           RCC_CCIPR_CLK48SEL   /*!< MSI clock used as RNG clock so
 552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(USB_OTG_FS) || defined(USB)
 557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USB_CLKSOURCE  Peripheral USB clock source selection
 558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
 561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_HSI48         0x00000000U          /*!< HSI48 clock used as USB clock 
 562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #else
 563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_NONE          0x00000000U          /*!< No clock used as USB clock sou
 564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif
 565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLSAI1_SUPPORT)
 566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_PLLSAI1       RCC_CCIPR_CLK48SEL_0 /*!< PLLSAI1 clock used as USB cloc
 567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLSAI1_SUPPORT */
 568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_PLL           RCC_CCIPR_CLK48SEL_1 /*!< PLL clock used as USB clock so
 569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_MSI           RCC_CCIPR_CLK48SEL   /*!< MSI clock used as USB clock so
 570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* USB_OTG_FS || USB */
 575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_ADC_CLKSOURCE  Peripheral ADC clock source selection
 577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 13


 579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_ADC_CLKSOURCE_NONE          0x00000000U          /*!< No clock used as ADC clock sou
 580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLSAI1_SUPPORT)
 581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_ADC_CLKSOURCE_PLLSAI1       RCC_CCIPR_ADCSEL_0   /*!< PLLSAI1 clock used as ADC cloc
 582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLSAI1_SUPPORT */
 583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLSAI2_SUPPORT) && !defined(LTDC)
 584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_ADC_CLKSOURCE_PLLSAI2       RCC_CCIPR_ADCSEL_1   /*!< PLLSAI2 clock used as ADC cloc
 585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLSAI2_SUPPORT */
 586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_CCIPR_ADCSEL)
 587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_ADC_CLKSOURCE_SYSCLK        RCC_CCIPR_ADCSEL     /*!< SYSCLK clock used as ADC clock
 588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #else
 589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_ADC_CLKSOURCE_SYSCLK        0x30000000U          /*!< SYSCLK clock used as ADC clock
 590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif
 591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(SWPMI1)
 596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SWPMI1_CLKSOURCE  Peripheral SWPMI1 clock source selection
 597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SWPMI1_CLKSOURCE_PCLK1      0x00000000U          /*!< PCLK1 used as SWPMI1 clock sou
 600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SWPMI1_CLKSOURCE_HSI        RCC_CCIPR_SWPMI1SEL  /*!< HSI used as SWPMI1 clock sourc
 601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* SWPMI1 */
 605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(DFSDM1_Channel0)
 607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_CCIPR2_ADFSDM1SEL)
 608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_DFSDM1_AUDIO_CLKSOURCE  Peripheral DFSDM1 Audio clock source selection
 609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_DFSDM1_AUDIO_CLKSOURCE_SAI1 0x00000000U             /*!< SAI1 clock used as DFSDM1 A
 612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_DFSDM1_AUDIO_CLKSOURCE_HSI  RCC_CCIPR2_ADFSDM1SEL_0 /*!< HSI clock used as DFSDM1 Au
 613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_DFSDM1_AUDIO_CLKSOURCE_MSI  RCC_CCIPR2_ADFSDM1SEL_1 /*!< MSI clock used as DFSDM1 Au
 614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_CCIPR2_ADFSDM1SEL */
 618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_DFSDM1_CLKSOURCE  Peripheral DFSDM1 clock source selection
 620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_CCIPR2_DFSDM1SEL)
 623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_DFSDM1_CLKSOURCE_PCLK2      0x00000000U          /*!< PCLK2 used as DFSDM1 clock sou
 624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_DFSDM1_CLKSOURCE_SYSCLK     RCC_CCIPR2_DFSDM1SEL /*!< SYSCLK used as DFSDM1 clock so
 625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #else
 626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_DFSDM1_CLKSOURCE_PCLK2      0x00000000U          /*!< PCLK2 used as DFSDM1 clock sou
 627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_DFSDM1_CLKSOURCE_SYSCLK     RCC_CCIPR_DFSDM1SEL  /*!< SYSCLK used as DFSDM1 clock so
 628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_CCIPR2_DFSDM1SEL */
 629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* DFSDM1_Channel0 */
 633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(DSI)
 635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_DSI_CLKSOURCE  Peripheral DSI clock source selection
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 14


 636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_DSI_CLKSOURCE_PHY          0x00000000U           /*!< DSI-PHY clock used as DSI byte
 639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_DSI_CLKSOURCE_PLL          RCC_CCIPR2_DSISEL     /*!< PLL clock used as DSI byte lan
 640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* DSI */
 644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(LTDC)
 646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LTDC_CLKSOURCE  Peripheral LTDC clock source selection
 647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_LTDC_CLKSOURCE_PLLSAI2R_DIV2  0x00000000U              /*!< PLLSAI2DIVR divided by 2
 650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_LTDC_CLKSOURCE_PLLSAI2R_DIV4  RCC_CCIPR2_PLLSAI2DIVR_0 /*!< PLLSAI2DIVR divided by 4
 651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_LTDC_CLKSOURCE_PLLSAI2R_DIV8  RCC_CCIPR2_PLLSAI2DIVR_1 /*!< PLLSAI2DIVR divided by 8
 652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_LTDC_CLKSOURCE_PLLSAI2R_DIV16 RCC_CCIPR2_PLLSAI2DIVR   /*!< PLLSAI2DIVR divided by 1
 653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* LTDC */
 657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(OCTOSPI1)
 659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_OCTOSPI  Peripheral OCTOSPI get clock source
 660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_OCTOSPI_CLKSOURCE_SYSCLK    0x00000000U           /*!< SYSCLK used as OctoSPI clock 
 663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_OCTOSPI_CLKSOURCE_MSI       RCC_CCIPR2_OSPISEL_0  /*!< MSI used as OctoSPI clock sou
 664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_OCTOSPI_CLKSOURCE_PLL       RCC_CCIPR2_OSPISEL_1  /*!< PLL used as OctoSPI clock sou
 665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* OCTOSPI1 */
 669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USART1 Peripheral USART get clock source
 671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE            RCC_CCIPR_USART1SEL /*!< USART1 Clock source selection *
 674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE            RCC_CCIPR_USART2SEL /*!< USART2 Clock source selection *
 675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_CCIPR_USART3SEL)
 676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_USART3_CLKSOURCE            RCC_CCIPR_USART3SEL /*!< USART3 Clock source selection *
 677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_CCIPR_USART3SEL */
 678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_CCIPR_UART4SEL) || defined(RCC_CCIPR_UART5SEL)
 683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_UART4 Peripheral UART get clock source
 684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_CCIPR_UART4SEL)
 687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_UART4_CLKSOURCE             RCC_CCIPR_UART4SEL /*!< UART4 Clock source selection */
 688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_CCIPR_UART4SEL */
 689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_CCIPR_UART5SEL)
 690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_UART5_CLKSOURCE             RCC_CCIPR_UART5SEL /*!< UART5 Clock source selection */
 691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_CCIPR_UART5SEL */
 692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 15


 693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_CCIPR_UART4SEL || RCC_CCIPR_UART5SEL */
 696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LPUART1 Peripheral LPUART get clock source
 698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_LPUART1_CLKSOURCE           RCC_CCIPR_LPUART1SEL /*!< LPUART1 Clock source selection
 701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_I2C1 Peripheral I2C get clock source
 706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_I2C1_CLKSOURCE              ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_I2C1SEL_Pos << 1
 709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_CCIPR_I2C2SEL)
 710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_I2C2_CLKSOURCE              ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_I2C2SEL_Pos << 1
 711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_CCIPR_I2C2SEL */
 712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_I2C3_CLKSOURCE              ((RCC_OFFSET_CCIPR << 24U) | (RCC_CCIPR_I2C3SEL_Pos << 1
 713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_CCIPR2_I2C4SEL)
 714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_I2C4_CLKSOURCE              ((RCC_OFFSET_CCIPR2 << 24U) | (RCC_CCIPR2_I2C4SEL_Pos <<
 715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_CCIPR2_I2C4SEL */
 716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LPTIM1 Peripheral LPTIM get clock source
 721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_LPTIM1_CLKSOURCE            RCC_CCIPR_LPTIM1SEL /*!< LPTIM1 Clock source selection *
 724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_LPTIM2_CLKSOURCE            RCC_CCIPR_LPTIM2SEL /*!< LPTIM2 Clock source selection *
 725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_CCIPR_SAI1SEL) || defined(RCC_CCIPR2_SAI1SEL)
 730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SAI1  Peripheral SAI get clock source
 731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_CCIPR2_SAI1SEL)
 734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SAI1_CLKSOURCE              RCC_CCIPR2_SAI1SEL /*!< SAI1 Clock source selection */
 735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #else
 736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SAI1_CLKSOURCE              RCC_CCIPR_SAI1SEL /*!< SAI1 Clock source selection */
 737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_CCIPR2_SAI1SEL */
 738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_CCIPR2_SAI2SEL)
 739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SAI2_CLKSOURCE              RCC_CCIPR2_SAI2SEL /*!< SAI2 Clock source selection */
 740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #elif defined(RCC_CCIPR_SAI2SEL)
 741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SAI2_CLKSOURCE              RCC_CCIPR_SAI2SEL /*!< SAI2 Clock source selection */
 742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_CCIPR2_SAI2SEL */
 743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_CCIPR_SAI1SEL || RCC_CCIPR2_SAI1SEL */
 747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(SDMMC1)
 749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_CCIPR2_SDMMCSEL)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 16


 750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SDMMC1_KERNEL  Peripheral SDMMC get kernel clock source
 751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SDMMC1_KERNELCLKSOURCE      RCC_CCIPR2_SDMMCSEL /*!< SDMMC1 Kernel Clock source sele
 754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_CCIPR2_SDMMCSEL */
 758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SDMMC1  Peripheral SDMMC get clock source
 760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SDMMC1_CLKSOURCE            RCC_CCIPR_CLK48SEL /*!< SDMMC1 Clock source selection */
 763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* SDMMC1 */
 767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_RNG  Peripheral RNG get clock source
 769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_RNG_CLKSOURCE               RCC_CCIPR_CLK48SEL /*!< RNG Clock source selection */
 772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(USB_OTG_FS) || defined(USB)
 777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USB  Peripheral USB get clock source
 778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE               RCC_CCIPR_CLK48SEL /*!< USB Clock source selection */
 781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* USB_OTG_FS || USB */
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_ADC  Peripheral ADC get clock source
 787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_CCIPR_ADCSEL)
 790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_ADC_CLKSOURCE               RCC_CCIPR_ADCSEL /*!< ADC Clock source selection */
 791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #else
 792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_ADC_CLKSOURCE               0x30000000U /*!< ADC Clock source selection */
 793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif
 794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(SWPMI1)
 799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SWPMI1  Peripheral SWPMI1 get clock source
 800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SWPMI1_CLKSOURCE            RCC_CCIPR_SWPMI1SEL /*!< SWPMI1 Clock source selection *
 803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* SWPMI1 */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 17


 807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(DFSDM1_Channel0)
 809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_CCIPR2_ADFSDM1SEL)
 810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_DFSDM1_AUDIO  Peripheral DFSDM1 Audio get clock source
 811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_DFSDM1_AUDIO_CLKSOURCE      RCC_CCIPR2_ADFSDM1SEL /* DFSDM1 Audio Clock source selec
 814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_CCIPR2_ADFSDM1SEL */
 819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_DFSDM1  Peripheral DFSDM1 get clock source
 820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_CCIPR2_DFSDM1SEL)
 823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_DFSDM1_CLKSOURCE            RCC_CCIPR2_DFSDM1SEL /*!< DFSDM1 Clock source selection 
 824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #else
 825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_DFSDM1_CLKSOURCE            RCC_CCIPR_DFSDM1SEL /*!< DFSDM1 Clock source selection *
 826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_CCIPR2_DFSDM1SEL */
 827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* DFSDM1_Channel0 */
 831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(DSI)
 833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_DSI  Peripheral DSI get clock source
 834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_DSI_CLKSOURCE               RCC_CCIPR2_DSISEL      /*!< DSI Clock source selection *
 837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* DSI */
 841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(LTDC)
 843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LTDC  Peripheral LTDC get clock source
 844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_LTDC_CLKSOURCE              RCC_CCIPR2_PLLSAI2DIVR /*!< LTDC Clock source selection 
 847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* LTDC */
 851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(OCTOSPI1)
 853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_OCTOSPI  Peripheral OCTOSPI get clock source
 854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_OCTOSPI_CLKSOURCE           RCC_CCIPR2_OSPISEL    /*!< OctoSPI Clock source selectio
 857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* OCTOSPI1 */
 861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_RTC_CLKSOURCE  RTC clock source selection
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 18


 864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_NONE          0x00000000U                   /*!< No clock used as RTC 
 867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_LSE           RCC_BDCR_RTCSEL_0       /*!< LSE oscillator clock used a
 868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_LSI           RCC_BDCR_RTCSEL_1       /*!< LSI oscillator clock used a
 869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_HSE_DIV32     RCC_BDCR_RTCSEL         /*!< HSE oscillator clock divide
 870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLSOURCE  PLL, PLLSAI1 and PLLSAI2 entry clock source
 876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_NONE              0x00000000U             /*!< No clock */
 879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_MSI               RCC_PLLCFGR_PLLSRC_MSI  /*!< MSI clock selected as PLL e
 880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSI               RCC_PLLCFGR_PLLSRC_HSI  /*!< HSI16 clock selected as PLL
 881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE               RCC_PLLCFGR_PLLSRC_HSE  /*!< HSE clock selected as PLL e
 882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLM_DIV  PLL division factor
 887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_1                  0x00000000U                                             
 890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_2                  (RCC_PLLCFGR_PLLM_0)                                    
 891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_3                  (RCC_PLLCFGR_PLLM_1)                                    
 892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_4                  (RCC_PLLCFGR_PLLM_1 | RCC_PLLCFGR_PLLM_0)               
 893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_5                  (RCC_PLLCFGR_PLLM_2)                                    
 894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_6                  (RCC_PLLCFGR_PLLM_2 | RCC_PLLCFGR_PLLM_0)               
 895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_7                  (RCC_PLLCFGR_PLLM_2 | RCC_PLLCFGR_PLLM_1)               
 896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_8                  (RCC_PLLCFGR_PLLM_2 | RCC_PLLCFGR_PLLM_1 | RCC_PLLCFGR_P
 897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLM_DIV_1_16_SUPPORT)
 898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_9                  (RCC_PLLCFGR_PLLM_3)                                    
 899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_10                 (RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_PLLM_0)               
 900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_11                 (RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_PLLM_1)               
 901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_12                 (RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_PLLM_1 | RCC_PLLCFGR_P
 902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_13                 (RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_PLLM_2)               
 903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_14                 (RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_PLLM_2 | RCC_PLLCFGR_P
 904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_15                 (RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_PLLM_2 | RCC_PLLCFGR_P
 905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLM_DIV_16                 (RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_PLLM_2 | RCC_PLLCFGR_P
 906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLM_DIV_1_16_SUPPORT */
 907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLR_DIV  PLL division factor (PLLR)
 912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLR_DIV_2                  0x00000000U            /*!< Main PLL division factor for
 915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLR_DIV_4                  (RCC_PLLCFGR_PLLR_0)   /*!< Main PLL division factor for
 916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLR_DIV_6                  (RCC_PLLCFGR_PLLR_1)   /*!< Main PLL division factor for
 917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLR_DIV_8                  (RCC_PLLCFGR_PLLR)     /*!< Main PLL division factor for
 918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 19


 921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLP_SUPPORT)
 923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLP_DIV  PLL division factor (PLLP)
 924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLP_DIV_2_31_SUPPORT)
 927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_2                  (RCC_PLLCFGR_PLLPDIV_1)                                 
 928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_3                  (RCC_PLLCFGR_PLLPDIV_1|RCC_PLLCFGR_PLLPDIV_0)           
 929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_4                  (RCC_PLLCFGR_PLLPDIV_2)                                 
 930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_5                  (RCC_PLLCFGR_PLLPDIV_2|RCC_PLLCFGR_PLLPDIV_0)           
 931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_6                  (RCC_PLLCFGR_PLLPDIV_2|RCC_PLLCFGR_PLLPDIV_1)           
 932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_7                  (RCC_PLLCFGR_PLLPDIV_2|RCC_PLLCFGR_PLLPDIV_1|RCC_PLLCFGR
 933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_8                  (RCC_PLLCFGR_PLLPDIV_3)                                 
 934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_9                  (RCC_PLLCFGR_PLLPDIV_3|RCC_PLLCFGR_PLLPDIV_0)           
 935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_10                 (RCC_PLLCFGR_PLLPDIV_3|RCC_PLLCFGR_PLLPDIV_1)           
 936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_11                 (RCC_PLLCFGR_PLLPDIV_3|RCC_PLLCFGR_PLLPDIV_1|RCC_PLLCFGR
 937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_12                 (RCC_PLLCFGR_PLLPDIV_3|RCC_PLLCFGR_PLLPDIV_2)           
 938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_13                 (RCC_PLLCFGR_PLLPDIV_3|RCC_PLLCFGR_PLLPDIV_2|RCC_PLLCFGR
 939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_14                 (RCC_PLLCFGR_PLLPDIV_3|RCC_PLLCFGR_PLLPDIV_2|RCC_PLLCFGR
 940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_15                 (RCC_PLLCFGR_PLLPDIV_3|RCC_PLLCFGR_PLLPDIV_2|RCC_PLLCFGR
 941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_16                 (RCC_PLLCFGR_PLLPDIV_4)                                 
 942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_17                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_0)           
 943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_18                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_1)           
 944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_19                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_1|RCC_PLLCFGR
 945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_20                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_2)           
 946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_21                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_2|RCC_PLLCFGR
 947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_22                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_2|RCC_PLLCFGR
 948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_23                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_2|RCC_PLLCFGR
 949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_24                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_3)           
 950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_25                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_3|RCC_PLLCFGR
 951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_26                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_3|RCC_PLLCFGR
 952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_27                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_3|RCC_PLLCFGR
 953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_28                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_3|RCC_PLLCFGR
 954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_29                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_3|RCC_PLLCFGR
 955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_30                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_3|RCC_PLLCFGR
 956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_31                 (RCC_PLLCFGR_PLLPDIV_4|RCC_PLLCFGR_PLLPDIV_3|RCC_PLLCFGR
 957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #else
 958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_7                  0x00000000U            /*!< Main PLL division factor for
 959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLP_DIV_17                 (RCC_PLLCFGR_PLLP)     /*!< Main PLL division factor for
 960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLP_DIV_2_31_SUPPORT */
 961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLP_SUPPORT */
 965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLQ_DIV  PLL division factor (PLLQ)
 967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLQ_DIV_2                  0x00000000U             /*!< Main PLL division factor fo
 970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLQ_DIV_4                  (RCC_PLLCFGR_PLLQ_0)    /*!< Main PLL division factor fo
 971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLQ_DIV_6                  (RCC_PLLCFGR_PLLQ_1)    /*!< Main PLL division factor fo
 972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLQ_DIV_8                  (RCC_PLLCFGR_PLLQ)      /*!< Main PLL division factor fo
 973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
 977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 20


 978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLSAI1M  PLLSAI1 division factor (PLLSAI1M)
 979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
 980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
 981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1M_DIV_1              0x00000000U                                             
 982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1M_DIV_2              (RCC_PLLSAI1CFGR_PLLSAI1M_0)                            
 983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1M_DIV_3              (RCC_PLLSAI1CFGR_PLLSAI1M_1)                            
 984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1M_DIV_4              (RCC_PLLSAI1CFGR_PLLSAI1M_1|RCC_PLLSAI1CFGR_PLLSAI1M_0) 
 985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1M_DIV_5              (RCC_PLLSAI1CFGR_PLLSAI1M_2)                            
 986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1M_DIV_6              (RCC_PLLSAI1CFGR_PLLSAI1M_2|RCC_PLLSAI1CFGR_PLLSAI1M_0) 
 987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1M_DIV_7              (RCC_PLLSAI1CFGR_PLLSAI1M_2|RCC_PLLSAI1CFGR_PLLSAI1M_1) 
 988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1M_DIV_8              (RCC_PLLSAI1CFGR_PLLSAI1M_2|RCC_PLLSAI1CFGR_PLLSAI1M_1|R
 989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1M_DIV_9              (RCC_PLLSAI1CFGR_PLLSAI1M_3)                            
 990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1M_DIV_10             (RCC_PLLSAI1CFGR_PLLSAI1M_3|RCC_PLLSAI1CFGR_PLLSAI1M_0) 
 991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1M_DIV_11             (RCC_PLLSAI1CFGR_PLLSAI1M_3|RCC_PLLSAI1CFGR_PLLSAI1M_1) 
 992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1M_DIV_12             (RCC_PLLSAI1CFGR_PLLSAI1M_3|RCC_PLLSAI1CFGR_PLLSAI1M_1|R
 993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1M_DIV_13             (RCC_PLLSAI1CFGR_PLLSAI1M_3|RCC_PLLSAI1CFGR_PLLSAI1M_2) 
 994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1M_DIV_14             (RCC_PLLSAI1CFGR_PLLSAI1M_3|RCC_PLLSAI1CFGR_PLLSAI1M_2|R
 995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1M_DIV_15             (RCC_PLLSAI1CFGR_PLLSAI1M_3|RCC_PLLSAI1CFGR_PLLSAI1M_2|R
 996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1M_DIV_16             (RCC_PLLSAI1CFGR_PLLSAI1M_3|RCC_PLLSAI1CFGR_PLLSAI1M_2|R
 997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
 998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
 999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLSAI1M_DIV_1_16_SUPPORT */
1001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLSAI1_SUPPORT)
1003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLSAI1Q  PLLSAI1 division factor (PLLSAI1Q)
1004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
1005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1Q_DIV_2              0x00000000U                  /*!< PLLSAI1 division facto
1007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1Q_DIV_4              (RCC_PLLSAI1CFGR_PLLSAI1Q_0) /*!< PLLSAI1 division facto
1008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1Q_DIV_6              (RCC_PLLSAI1CFGR_PLLSAI1Q_1) /*!< PLLSAI1 division facto
1009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1Q_DIV_8              (RCC_PLLSAI1CFGR_PLLSAI1Q)   /*!< PLLSAI1 division facto
1010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
1012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLSAI1P  PLLSAI1 division factor (PLLSAI1P)
1015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
1016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLSAI1P_DIV_2_31_SUPPORT)
1018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_2              (RCC_PLLSAI1CFGR_PLLSAI1PDIV_1)                         
1019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_3              (RCC_PLLSAI1CFGR_PLLSAI1PDIV_1|RCC_PLLSAI1CFGR_PLLSAI1PD
1020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_4              (RCC_PLLSAI1CFGR_PLLSAI1PDIV_2)                         
1021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_5              (RCC_PLLSAI1CFGR_PLLSAI1PDIV_2|RCC_PLLSAI1CFGR_PLLSAI1PD
1022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_6              (RCC_PLLSAI1CFGR_PLLSAI1PDIV_2|RCC_PLLSAI1CFGR_PLLSAI1PD
1023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_7              (RCC_PLLSAI1CFGR_PLLSAI1PDIV_2|RCC_PLLSAI1CFGR_PLLSAI1PD
1024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_8              (RCC_PLLSAI1CFGR_PLLSAI1PDIV_3)                         
1025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_9              (RCC_PLLSAI1CFGR_PLLSAI1PDIV_3|RCC_PLLSAI1CFGR_PLLSAI1PD
1026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_10             (RCC_PLLSAI1CFGR_PLLSAI1PDIV_3|RCC_PLLSAI1CFGR_PLLSAI1PD
1027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_11             (RCC_PLLSAI1CFGR_PLLSAI1PDIV_3|RCC_PLLSAI1CFGR_PLLSAI1PD
1028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_12             (RCC_PLLSAI1CFGR_PLLSAI1PDIV_3|RCC_PLLSAI1CFGR_PLLSAI1PD
1029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_13             (RCC_PLLSAI1CFGR_PLLSAI1PDIV_3|RCC_PLLSAI1CFGR_PLLSAI1PD
1030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_14             (RCC_PLLSAI1CFGR_PLLSAI1PDIV_3|RCC_PLLSAI1CFGR_PLLSAI1PD
1031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_15             (RCC_PLLSAI1CFGR_PLLSAI1PDIV_3|RCC_PLLSAI1CFGR_PLLSAI1PD
1032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_16             (RCC_PLLSAI1CFGR_PLLSAI1PDIV_4)                         
1033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_17             (RCC_PLLSAI1CFGR_PLLSAI1PDIV_4|RCC_PLLSAI1CFGR_PLLSAI1PD
1034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_18             (RCC_PLLSAI1CFGR_PLLSAI1PDIV_4|RCC_PLLSAI1CFGR_PLLSAI1PD
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 21


1035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_19             (RCC_PLLSAI1CFGR_PLLSAI1PDIV_4|RCC_PLLSAI1CFGR_PLLSAI1PD
1036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_20             (RCC_PLLSAI1CFGR_PLLSAI1PDIV_4|RCC_PLLSAI1CFGR_PLLSAI1PD
1037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_21             (RCC_PLLSAI1CFGR_PLLSAI1PDIV_4|RCC_PLLSAI1CFGR_PLLSAI1PD
1038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_22             (RCC_PLLSAI1CFGR_PLLSAI1PDIV_4|RCC_PLLSAI1CFGR_PLLSAI1PD
1039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_23             (RCC_PLLSAI1CFGR_PLLSAI1PDIV_4|RCC_PLLSAI1CFGR_PLLSAI1PD
1040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_24             (RCC_PLLSAI1CFGR_PLLSAI1PDIV_4|RCC_PLLSAI1CFGR_PLLSAI1PD
1041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_25             (RCC_PLLSAI1CFGR_PLLSAI1PDIV_4|RCC_PLLSAI1CFGR_PLLSAI1PD
1042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_26             (RCC_PLLSAI1CFGR_PLLSAI1PDIV_4|RCC_PLLSAI1CFGR_PLLSAI1PD
1043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_27             (RCC_PLLSAI1CFGR_PLLSAI1PDIV_4|RCC_PLLSAI1CFGR_PLLSAI1PD
1044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_28             (RCC_PLLSAI1CFGR_PLLSAI1PDIV_4|RCC_PLLSAI1CFGR_PLLSAI1PD
1045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_29             (RCC_PLLSAI1CFGR_PLLSAI1PDIV_4|RCC_PLLSAI1CFGR_PLLSAI1PD
1046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_30             (RCC_PLLSAI1CFGR_PLLSAI1PDIV_4|RCC_PLLSAI1CFGR_PLLSAI1PD
1047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_31             (RCC_PLLSAI1CFGR_PLLSAI1PDIV_4|RCC_PLLSAI1CFGR_PLLSAI1PD
1048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #else
1049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_7              0x00000000U                /*!< PLLSAI1 division factor 
1050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1P_DIV_17             (RCC_PLLSAI1CFGR_PLLSAI1P) /*!< PLLSAI1 division factor 
1051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLSAI1P_DIV_2_31_SUPPORT */
1052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
1054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLSAI1R  PLLSAI1 division factor (PLLSAI1R)
1057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
1058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1R_DIV_2              0x00000000U                  /*!< PLLSAI1 division facto
1060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1R_DIV_4              (RCC_PLLSAI1CFGR_PLLSAI1R_0) /*!< PLLSAI1 division facto
1061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1R_DIV_6              (RCC_PLLSAI1CFGR_PLLSAI1R_1) /*!< PLLSAI1 division facto
1062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI1R_DIV_8              (RCC_PLLSAI1CFGR_PLLSAI1R)   /*!< PLLSAI1 division facto
1063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
1065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLSAI1_SUPPORT */
1067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLSAI2_SUPPORT)
1069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLSAI2M_DIV_1_16_SUPPORT)
1070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLSAI2M  PLLSAI1 division factor (PLLSAI2M)
1071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
1072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2M_DIV_1              0x00000000U                                             
1074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2M_DIV_2              (RCC_PLLSAI2CFGR_PLLSAI2M_0)                            
1075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2M_DIV_3              (RCC_PLLSAI2CFGR_PLLSAI2M_1)                            
1076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2M_DIV_4              (RCC_PLLSAI2CFGR_PLLSAI2M_1|RCC_PLLSAI2CFGR_PLLSAI2M_0) 
1077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2M_DIV_5              (RCC_PLLSAI2CFGR_PLLSAI2M_2)                            
1078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2M_DIV_6              (RCC_PLLSAI2CFGR_PLLSAI2M_2|RCC_PLLSAI2CFGR_PLLSAI2M_0) 
1079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2M_DIV_7              (RCC_PLLSAI2CFGR_PLLSAI2M_2|RCC_PLLSAI2CFGR_PLLSAI2M_1) 
1080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2M_DIV_8              (RCC_PLLSAI2CFGR_PLLSAI2M_2|RCC_PLLSAI2CFGR_PLLSAI2M_1|R
1081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2M_DIV_9              (RCC_PLLSAI2CFGR_PLLSAI2M_3)                            
1082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2M_DIV_10             (RCC_PLLSAI2CFGR_PLLSAI2M_3|RCC_PLLSAI2CFGR_PLLSAI2M_0) 
1083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2M_DIV_11             (RCC_PLLSAI2CFGR_PLLSAI2M_3|RCC_PLLSAI2CFGR_PLLSAI2M_1) 
1084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2M_DIV_12             (RCC_PLLSAI2CFGR_PLLSAI2M_3|RCC_PLLSAI2CFGR_PLLSAI2M_1|R
1085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2M_DIV_13             (RCC_PLLSAI2CFGR_PLLSAI2M_3|RCC_PLLSAI2CFGR_PLLSAI2M_2) 
1086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2M_DIV_14             (RCC_PLLSAI2CFGR_PLLSAI2M_3|RCC_PLLSAI2CFGR_PLLSAI2M_2|R
1087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2M_DIV_15             (RCC_PLLSAI2CFGR_PLLSAI2M_3|RCC_PLLSAI2CFGR_PLLSAI2M_2|R
1088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2M_DIV_16             (RCC_PLLSAI2CFGR_PLLSAI2M_3|RCC_PLLSAI2CFGR_PLLSAI2M_2|R
1089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
1091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 22


1092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLSAI2M_DIV_1_16_SUPPORT */
1093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLSAI2Q_DIV_SUPPORT)
1095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLSAI2Q  PLLSAI2 division factor (PLLSAI2Q)
1096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
1097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2Q_DIV_2              0x00000000U                  /*!< PLLSAI2 division facto
1099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2Q_DIV_4              (RCC_PLLSAI2CFGR_PLLSAI2Q_0) /*!< PLLSAI2 division facto
1100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2Q_DIV_6              (RCC_PLLSAI2CFGR_PLLSAI2Q_1) /*!< PLLSAI2 division facto
1101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2Q_DIV_8              (RCC_PLLSAI2CFGR_PLLSAI2Q)   /*!< PLLSAI2 division facto
1102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
1104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLSAI2Q_DIV_SUPPORT */
1106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLSAI2P  PLLSAI2 division factor (PLLSAI2P)
1108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
1109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLSAI2P_DIV_2_31_SUPPORT)
1111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_2              (RCC_PLLSAI2CFGR_PLLSAI2PDIV_1)                         
1112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_3              (RCC_PLLSAI2CFGR_PLLSAI2PDIV_1|RCC_PLLSAI2CFGR_PLLSAI2PD
1113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_4              (RCC_PLLSAI2CFGR_PLLSAI2PDIV_2)                         
1114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_5              (RCC_PLLSAI2CFGR_PLLSAI2PDIV_2|RCC_PLLSAI2CFGR_PLLSAI2PD
1115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_6              (RCC_PLLSAI2CFGR_PLLSAI2PDIV_2|RCC_PLLSAI2CFGR_PLLSAI2PD
1116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_7              (RCC_PLLSAI2CFGR_PLLSAI2PDIV_2|RCC_PLLSAI2CFGR_PLLSAI2PD
1117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_8              (RCC_PLLSAI2CFGR_PLLSAI2PDIV_3)                         
1118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_9              (RCC_PLLSAI2CFGR_PLLSAI2PDIV_3|RCC_PLLSAI2CFGR_PLLSAI2PD
1119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_10             (RCC_PLLSAI2CFGR_PLLSAI2PDIV_3|RCC_PLLSAI2CFGR_PLLSAI2PD
1120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_11             (RCC_PLLSAI2CFGR_PLLSAI2PDIV_3|RCC_PLLSAI2CFGR_PLLSAI2PD
1121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_12             (RCC_PLLSAI2CFGR_PLLSAI2PDIV_3|RCC_PLLSAI2CFGR_PLLSAI2PD
1122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_13             (RCC_PLLSAI2CFGR_PLLSAI2PDIV_3|RCC_PLLSAI2CFGR_PLLSAI2PD
1123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_14             (RCC_PLLSAI2CFGR_PLLSAI2PDIV_3|RCC_PLLSAI2CFGR_PLLSAI2PD
1124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_15             (RCC_PLLSAI2CFGR_PLLSAI2PDIV_3|RCC_PLLSAI2CFGR_PLLSAI2PD
1125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_16             (RCC_PLLSAI2CFGR_PLLSAI2PDIV_4)                         
1126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_17             (RCC_PLLSAI2CFGR_PLLSAI2PDIV_4|RCC_PLLSAI2CFGR_PLLSAI2PD
1127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_18             (RCC_PLLSAI2CFGR_PLLSAI2PDIV_4|RCC_PLLSAI2CFGR_PLLSAI2PD
1128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_19             (RCC_PLLSAI2CFGR_PLLSAI2PDIV_4|RCC_PLLSAI2CFGR_PLLSAI2PD
1129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_20             (RCC_PLLSAI2CFGR_PLLSAI2PDIV_4|RCC_PLLSAI2CFGR_PLLSAI2PD
1130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_21             (RCC_PLLSAI2CFGR_PLLSAI2PDIV_4|RCC_PLLSAI2CFGR_PLLSAI2PD
1131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_22             (RCC_PLLSAI2CFGR_PLLSAI2PDIV_4|RCC_PLLSAI2CFGR_PLLSAI2PD
1132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_23             (RCC_PLLSAI2CFGR_PLLSAI2PDIV_4|RCC_PLLSAI2CFGR_PLLSAI2PD
1133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_24             (RCC_PLLSAI2CFGR_PLLSAI2PDIV_4|RCC_PLLSAI2CFGR_PLLSAI2PD
1134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_25             (RCC_PLLSAI2CFGR_PLLSAI2PDIV_4|RCC_PLLSAI2CFGR_PLLSAI2PD
1135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_26             (RCC_PLLSAI2CFGR_PLLSAI2PDIV_4|RCC_PLLSAI2CFGR_PLLSAI2PD
1136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_27             (RCC_PLLSAI2CFGR_PLLSAI2PDIV_4|RCC_PLLSAI2CFGR_PLLSAI2PD
1137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_28             (RCC_PLLSAI2CFGR_PLLSAI2PDIV_4|RCC_PLLSAI2CFGR_PLLSAI2PD
1138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_29             (RCC_PLLSAI2CFGR_PLLSAI2PDIV_4|RCC_PLLSAI2CFGR_PLLSAI2PD
1139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_30             (RCC_PLLSAI2CFGR_PLLSAI2PDIV_4|RCC_PLLSAI2CFGR_PLLSAI2PD
1140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_31             (RCC_PLLSAI2CFGR_PLLSAI2PDIV_4|RCC_PLLSAI2CFGR_PLLSAI2PD
1141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #else
1142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_7              0x00000000U                /*!< PLLSAI2 division factor 
1143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2P_DIV_17             (RCC_PLLSAI2CFGR_PLLSAI2P) /*!< PLLSAI2 division factor 
1144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLSAI2P_DIV_2_31_SUPPORT */
1145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
1147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 23


1149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLSAI2R  PLLSAI2 division factor (PLLSAI2R)
1150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
1151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2R_DIV_2              0x00000000U                  /*!< PLLSAI2 division facto
1153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2R_DIV_4              (RCC_PLLSAI2CFGR_PLLSAI2R_0) /*!< PLLSAI2 division facto
1154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2R_DIV_6              (RCC_PLLSAI2CFGR_PLLSAI2R_1) /*!< PLLSAI2 division facto
1155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2R_DIV_8              (RCC_PLLSAI2CFGR_PLLSAI2R)   /*!< PLLSAI2 division facto
1156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
1158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_CCIPR2_PLLSAI2DIVR)
1161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLSAI2DIVR  PLLSAI2DIVR division factor (PLLSAI2DIVR)
1162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
1163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2DIVR_DIV_2           0x00000000U                     /*!< PLLSAI2 division fa
1165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2DIVR_DIV_4           RCC_CCIPR2_PLLSAI2DIVR_0        /*!< PLLSAI2 division fa
1166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2DIVR_DIV_8           RCC_CCIPR2_PLLSAI2DIVR_1        /*!< PLLSAI2 division fa
1167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_PLLSAI2DIVR_DIV_16          (RCC_CCIPR2_PLLSAI2DIVR_1 | RCC_CCIPR2_PLLSAI2DIVR_0) /*
1168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
1170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_CCIPR2_PLLSAI2DIVR */
1172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLSAI2_SUPPORT */
1173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_MSIRANGESEL  MSI clock range selection
1175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
1176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MSIRANGESEL_STANDBY         0U                  /*!< MSI Range is provided by MSISRA
1178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_MSIRANGESEL_RUN             1U                  /*!< MSI Range is provided by MSIRAN
1179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
1181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_CSR_LSIPREDIV)
1184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LSIPREDIV  LSI division factor
1185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
1186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_LSI_PREDIV_1                0x00000000U         /*!< LSI division factor by 1   */
1188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_LSI_PREDIV_128              RCC_CSR_LSIPREDIV   /*!< LSI division factor by 128 */
1189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
1191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_CSR_LSIPREDIV */
1193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** Legacy definitions for compatibility purpose
1195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** @cond 0
1196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** */
1197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(DFSDM1_Channel0)
1198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_DFSDM1_CLKSOURCE_PCLK       LL_RCC_DFSDM1_CLKSOURCE_PCLK2
1199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_DFSDM_CLKSOURCE_PCLK        LL_RCC_DFSDM1_CLKSOURCE_PCLK2
1200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_DFSDM_CLKSOURCE_SYSCLK      LL_RCC_DFSDM1_CLKSOURCE_SYSCLK
1201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_DFSDM_CLKSOURCE             LL_RCC_DFSDM1_CLKSOURCE
1202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* DFSDM1_Channel0 */
1203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(SWPMI1)
1204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_SWPMI1_CLKSOURCE_PCLK       LL_RCC_SWPMI1_CLKSOURCE_PCLK1
1205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* SWPMI1 */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 24


1206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** @endcond
1208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
1212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /* Exported macro ------------------------------------------------------------*/
1215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Macros RCC Exported Macros
1216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
1217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EM_WRITE_READ Common Write and read registers Macros
1220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
1221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Write a value in RCC register
1225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __REG__ Register to be written
1226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __VALUE__ Value to be written in the register
1227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
1228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_WriteReg(__REG__, __VALUE__) WRITE_REG(RCC->__REG__, (__VALUE__))
1230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Read a value in RCC register
1233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __REG__ Register to be read
1234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval Register value
1235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define LL_RCC_ReadReg(__REG__) READ_REG(RCC->__REG__)
1237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
1239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EM_CALC_FREQ Calculate frequencies
1242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
1243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLCLK frequency on system domain
1247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLCLK_FREQ (HSE_VALUE,@ref LL_RCC_PLL_GetDivider (),
1248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *             @ref LL_RCC_PLL_GetN (), @ref LL_RCC_PLL_GetR ());
1249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on MSI/HSE/HSI)
1250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLM__ This parameter can be one of the following values:
1251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_1
1252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
1253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
1254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
1255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
1256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
1257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
1258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
1259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_9 (*)
1260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_10 (*)
1261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_11 (*)
1262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_12 (*)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 25


1263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_13 (*)
1264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_14 (*)
1265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_15 (*)
1266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_16 (*)
1267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *
1268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLN__ Between 8 and 86 or 127 depending on devices
1270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLR__ This parameter can be one of the following values:
1271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_2
1272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_4
1273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_6
1274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLR_DIV_8
1275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval PLL clock frequency (in Hz)
1276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLCLK_FREQ(__INPUTFREQ__, __PLLM__, __PLLN__, __PLLR__) ((__INPUTFREQ__) / (
1278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                    ((((__PLLR__) >> RCC_PLLCFGR_PLLR_Pos) + 1U) * 2U))
1279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLSAI1_SUPPORT)
1281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLP_DIV_2_31_SUPPORT)
1282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLCLK frequency used on SAI domain
1284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLCLK_SAI_FREQ (HSE_VALUE,@ref LL_RCC_PLL_GetDivider (),
1285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *             @ref LL_RCC_PLL_GetN (), @ref LL_RCC_PLL_GetP ());
1286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on MSI/HSE/HSI)
1287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLM__ This parameter can be one of the following values:
1288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_1
1289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
1290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
1291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
1292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
1293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
1294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
1295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
1296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_9 (*)
1297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_10 (*)
1298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_11 (*)
1299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_12 (*)
1300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_13 (*)
1301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_14 (*)
1302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_15 (*)
1303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_16 (*)
1304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *
1305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLN__ Between 8 and 86 or 127 depending on devices
1307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLP__ This parameter can be one of the following values:
1308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_2
1309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_3
1310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_4
1311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_5
1312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_6
1313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_7
1314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_8
1315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_9
1316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_10
1317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_11
1318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_12
1319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_13
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 26


1320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_14
1321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_15
1322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_16
1323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_17
1324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_18
1325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_19
1326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_20
1327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_21
1328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_22
1329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_23
1330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_24
1331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_25
1332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_26
1333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_27
1334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_28
1335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_29
1336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_30
1337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_31
1338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval PLL clock frequency (in Hz)
1339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLCLK_SAI_FREQ(__INPUTFREQ__, __PLLM__, __PLLN__, __PLLP__) ((__INPUTFREQ__)
1341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                    ((__PLLP__) >> RCC_PLLCFGR_PLLPDIV_Pos))
1342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #else
1344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLCLK frequency used on SAI domain
1346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLCLK_SAI_FREQ (HSE_VALUE,@ref LL_RCC_PLL_GetDivider (),
1347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *             @ref LL_RCC_PLL_GetN (), @ref LL_RCC_PLL_GetP ());
1348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on MSI/HSE/HSI)
1349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLM__ This parameter can be one of the following values:
1350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_1
1351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
1352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
1353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
1354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
1355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
1356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
1357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
1358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLN__ Between 8 and 86
1359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLP__ This parameter can be one of the following values:
1360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_7
1361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLP_DIV_17
1362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval PLL clock frequency (in Hz)
1363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLCLK_SAI_FREQ(__INPUTFREQ__, __PLLM__, __PLLN__, __PLLP__) ((__INPUTFREQ__)
1365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                    (((__PLLP__) == LL_RCC_PLLP_DIV_7) ? 7U : 17U))
1366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLP_DIV_2_31_SUPPORT */
1368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLSAI1_SUPPORT */
1369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLCLK frequency used on 48M domain
1372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLCLK_48M_FREQ (HSE_VALUE,@ref LL_RCC_PLL_GetDivider (),
1373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *             @ref LL_RCC_PLL_GetN (), @ref LL_RCC_PLL_GetQ ());
1374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on MSI/HSE/HSI)
1375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLM__ This parameter can be one of the following values:
1376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_1
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 27


1377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
1378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
1379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
1380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
1381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
1382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
1383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
1384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_9 (*)
1385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_10 (*)
1386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_11 (*)
1387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_12 (*)
1388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_13 (*)
1389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_14 (*)
1390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_15 (*)
1391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_16 (*)
1392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *
1393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLN__ Between 8 and 86 or 127 depending on devices
1395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLQ__ This parameter can be one of the following values:
1396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_2
1397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_4
1398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_6
1399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLQ_DIV_8
1400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval PLL clock frequency (in Hz)
1401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLCLK_48M_FREQ(__INPUTFREQ__, __PLLM__, __PLLN__, __PLLQ__) ((__INPUTFREQ__)
1403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                    ((((__PLLQ__) >> RCC_PLLCFGR_PLLQ_Pos) + 1U) << 1U))
1404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLSAI1_SUPPORT)
1406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT) && defined(RCC_PLLSAI1P_DIV_2_31_SUPPORT)
1407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLSAI1 frequency used for SAI domain
1409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLSAI1_SAI_FREQ (HSE_VALUE,@ref LL_RCC_PLLSAI1_GetDivider (),
1410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *             @ref LL_RCC_PLLSAI1_GetN (), @ref LL_RCC_PLLSAI1_GetP ());
1411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on MSI/HSE/HSI)
1412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI1M__ This parameter can be one of the following values:
1413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_1
1414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_2
1415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_3
1416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_4
1417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_5
1418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_6
1419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_7
1420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_8
1421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_9
1422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_10
1423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_11
1424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_12
1425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_13
1426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_14
1427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_15
1428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_16
1429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI1N__ Between 8 and 86 or 127 depending on devices
1430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI1P__ This parameter can be one of the following values:
1431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_2
1432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_3
1433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_4
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 28


1434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_5
1435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_6
1436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_7
1437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_8
1438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_9
1439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_10
1440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_11
1441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_12
1442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_13
1443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_14
1444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_15
1445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_16
1446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_17
1447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_18
1448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_19
1449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_20
1450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_21
1451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_22
1452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_23
1453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_24
1454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_25
1455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_26
1456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_27
1457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_28
1458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_29
1459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_30
1460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_31
1461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval PLLSAI1 clock frequency (in Hz)
1462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLSAI1_SAI_FREQ(__INPUTFREQ__, __PLLSAI1M__, __PLLSAI1N__, __PLLSAI1P__) \
1464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                    ((__INPUTFREQ__) / ((((__PLLSAI1M__) >> RCC_PLLSAI1CFGR_PLLSAI1M_Pos) + 1U)) * (
1465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                     ((__PLLSAI1P__) >> RCC_PLLSAI1CFGR_PLLSAI1PDIV_Pos))
1466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #elif defined(RCC_PLLSAI1P_DIV_2_31_SUPPORT)
1468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLSAI1 frequency used for SAI domain
1470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLSAI1_SAI_FREQ (HSE_VALUE,@ref LL_RCC_PLL_GetDivider (),
1471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *             @ref LL_RCC_PLLSAI1_GetN (), @ref LL_RCC_PLLSAI1_GetP ());
1472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on MSI/HSE/HSI)
1473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLM__ This parameter can be one of the following values:
1474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_1
1475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
1476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
1477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
1478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
1479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
1480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
1481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
1482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI1N__ Between 8 and 86 or 127 depending on devices
1483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI1P__ This parameter can be one of the following values:
1484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_2
1485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_3
1486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_4
1487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_5
1488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_6
1489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_7
1490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_8
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 29


1491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_9
1492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_10
1493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_11
1494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_12
1495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_13
1496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_14
1497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_15
1498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_16
1499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_17
1500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_18
1501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_19
1502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_20
1503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_21
1504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_22
1505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_23
1506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_24
1507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_25
1508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_26
1509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_27
1510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_28
1511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_29
1512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_30
1513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_31
1514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval PLLSAI1 clock frequency (in Hz)
1515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLSAI1_SAI_FREQ(__INPUTFREQ__, __PLLM__, __PLLSAI1N__, __PLLSAI1P__) \
1517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                    ((__INPUTFREQ__) / ((((__PLLM__)>> RCC_PLLCFGR_PLLM_Pos) + 1U)) * (__PLLSAI1N__)
1518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                     ((__PLLSAI1P__) >> RCC_PLLSAI1CFGR_PLLSAI1PDIV_Pos))
1519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #else
1521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLSAI1 frequency used for SAI domain
1523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLSAI1_SAI_FREQ (HSE_VALUE,@ref LL_RCC_PLL_GetDivider (),
1524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *             @ref LL_RCC_PLLSAI1_GetN (), @ref LL_RCC_PLLSAI1_GetP ());
1525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on MSI/HSE/HSI)
1526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLM__ This parameter can be one of the following values:
1527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_1
1528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
1529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
1530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
1531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
1532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
1533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
1534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
1535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI1N__ Between 8 and 86
1536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI1P__ This parameter can be one of the following values:
1537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_7
1538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1P_DIV_17
1539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval PLLSAI1 clock frequency (in Hz)
1540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLSAI1_SAI_FREQ(__INPUTFREQ__, __PLLM__, __PLLSAI1N__, __PLLSAI1P__) \
1542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                    ((__INPUTFREQ__) / ((((__PLLM__)>> RCC_PLLCFGR_PLLM_Pos) + 1U)) * (__PLLSAI1N__)
1543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                     (((__PLLSAI1P__) == LL_RCC_PLLSAI1P_DIV_7) ? 7U : 17U))
1544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLSAI1P_DIV_2_31_SUPPORT */
1546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 30


1548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLSAI1 frequency used on 48M domain
1550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLSAI1_48M_FREQ (HSE_VALUE,@ref LL_RCC_PLLSAI1_GetDivider (),
1551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *             @ref LL_RCC_PLLSAI1_GetN (), @ref LL_RCC_PLLSAI1_GetQ ());
1552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on MSI/HSE/HSI)
1553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI1M__ This parameter can be one of the following values:
1554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_1
1555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_2
1556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_3
1557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_4
1558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_5
1559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_6
1560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_7
1561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_8
1562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_9
1563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_10
1564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_11
1565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_12
1566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_13
1567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_14
1568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_15
1569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_16
1570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI1N__ Between 8 and 86 or 127 depending on devices
1571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI1Q__ This parameter can be one of the following values:
1572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1Q_DIV_2
1573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1Q_DIV_4
1574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1Q_DIV_6
1575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1Q_DIV_8
1576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval PLLSAI1 clock frequency (in Hz)
1577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLSAI1_48M_FREQ(__INPUTFREQ__, __PLLSAI1M__, __PLLSAI1N__, __PLLSAI1Q__) \
1579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                    ((__INPUTFREQ__) / ((((__PLLSAI1M__) >> RCC_PLLSAI1CFGR_PLLSAI1M_Pos) + 1U)) * (
1580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                     ((((__PLLSAI1Q__) >> RCC_PLLSAI1CFGR_PLLSAI1Q_Pos) + 1U) << 1U))
1581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #else
1583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLSAI1 frequency used on 48M domain
1585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLSAI1_48M_FREQ (HSE_VALUE,@ref LL_RCC_PLL_GetDivider (),
1586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *             @ref LL_RCC_PLLSAI1_GetN (), @ref LL_RCC_PLLSAI1_GetQ ());
1587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on MSI/HSE/HSI)
1588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLM__ This parameter can be one of the following values:
1589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_1
1590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
1591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
1592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
1593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
1594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
1595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
1596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
1597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI1N__ Between 8 and 86
1598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI1Q__ This parameter can be one of the following values:
1599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1Q_DIV_2
1600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1Q_DIV_4
1601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1Q_DIV_6
1602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1Q_DIV_8
1603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval PLLSAI1 clock frequency (in Hz)
1604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 31


1605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLSAI1_48M_FREQ(__INPUTFREQ__, __PLLM__, __PLLSAI1N__, __PLLSAI1Q__) \
1606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                    ((__INPUTFREQ__) / ((((__PLLM__)>> RCC_PLLCFGR_PLLM_Pos) + 1U)) * (__PLLSAI1N__)
1607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                     ((((__PLLSAI1Q__) >> RCC_PLLSAI1CFGR_PLLSAI1Q_Pos) + 1U) << 1U))
1608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLSAI1M_DIV_1_16_SUPPORT */
1610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
1612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLSAI1 frequency used on ADC domain
1614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLSAI1_ADC_FREQ (HSE_VALUE,@ref LL_RCC_PLLSAI1_GetDivider (),
1615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *             @ref LL_RCC_PLLSAI1_GetN (), @ref LL_RCC_PLLSAI1_GetR ());
1616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on MSI/HSE/HSI)
1617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI1M__ This parameter can be one of the following values:
1618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_1
1619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_2
1620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_3
1621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_4
1622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_5
1623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_6
1624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_7
1625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_8
1626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_9
1627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_10
1628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_11
1629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_12
1630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_13
1631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_14
1632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_15
1633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1M_DIV_16
1634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI1N__ Between 8 and 86 or 127 depending on devices
1635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI1R__ This parameter can be one of the following values:
1636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1R_DIV_2
1637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1R_DIV_4
1638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1R_DIV_6
1639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1R_DIV_8
1640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval PLLSAI1 clock frequency (in Hz)
1641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLSAI1_ADC_FREQ(__INPUTFREQ__, __PLLSAI1M__, __PLLSAI1N__, __PLLSAI1R__) \
1643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                    ((__INPUTFREQ__) / ((((__PLLSAI1M__) >> RCC_PLLSAI1CFGR_PLLSAI1M_Pos) + 1U)) * (
1644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                     ((((__PLLSAI1R__) >> RCC_PLLSAI1CFGR_PLLSAI1R_Pos) + 1U) << 1U))
1645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #else
1647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLSAI1 frequency used on ADC domain
1649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLSAI1_ADC_FREQ (HSE_VALUE,@ref LL_RCC_PLL_GetDivider (),
1650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *             @ref LL_RCC_PLLSAI1_GetN (), @ref LL_RCC_PLLSAI1_GetR ());
1651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on MSI/HSE/HSI)
1652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLM__ This parameter can be one of the following values:
1653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_1
1654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
1655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
1656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
1657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
1658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
1659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
1660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
1661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI1N__ Between 8 and 86
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 32


1662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI1R__ This parameter can be one of the following values:
1663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1R_DIV_2
1664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1R_DIV_4
1665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1R_DIV_6
1666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI1R_DIV_8
1667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval PLLSAI1 clock frequency (in Hz)
1668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLSAI1_ADC_FREQ(__INPUTFREQ__, __PLLM__, __PLLSAI1N__, __PLLSAI1R__) \
1670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                    ((__INPUTFREQ__) / ((((__PLLM__)>> RCC_PLLCFGR_PLLM_Pos) + 1U)) * (__PLLSAI1N__)
1671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                     ((((__PLLSAI1R__) >> RCC_PLLSAI1CFGR_PLLSAI1R_Pos) + 1U) << 1U))
1672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLSAI1M_DIV_1_16_SUPPORT */
1674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLSAI1_SUPPORT */
1675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_PLLSAI2M_DIV_1_16_SUPPORT) && defined(RCC_PLLSAI2P_DIV_2_31_SUPPORT)
1677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLSAI2 frequency used for SAI domain
1679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLSAI2_SAI_FREQ (HSE_VALUE,@ref LL_RCC_PLLSAI2_GetDivider (),
1680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *             @ref LL_RCC_PLLSAI2_GetN (), @ref LL_RCC_PLLSAI2_GetP ());
1681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on MSI/HSE/HSI)
1682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI2M__ This parameter can be one of the following values:
1683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_1
1684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_2
1685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_3
1686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_4
1687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_5
1688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_6
1689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_7
1690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_8
1691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_9
1692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_10
1693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_11
1694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_12
1695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_13
1696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_14
1697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_15
1698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_16
1699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI2N__ Between 8 and 86 or 127 depending on devices
1700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI2P__ This parameter can be one of the following values:
1701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_2
1702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_3
1703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_4
1704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_5
1705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_6
1706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_7
1707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_8
1708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_9
1709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_10
1710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_11
1711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_12
1712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_13
1713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_14
1714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_15
1715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_16
1716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_17
1717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_18
1718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_19
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 33


1719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_20
1720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_21
1721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_22
1722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_23
1723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_24
1724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_25
1725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_26
1726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_27
1727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_28
1728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_29
1729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_30
1730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_31
1731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval PLLSAI2 clock frequency (in Hz)
1732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLSAI2_SAI_FREQ(__INPUTFREQ__, __PLLSAI2M__, __PLLSAI2N__, __PLLSAI2P__) \
1734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                    ((__INPUTFREQ__) / ((((__PLLSAI2M__) >> RCC_PLLSAI2CFGR_PLLSAI2M_Pos) + 1U)) * (
1735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                     ((__PLLSAI2P__) >> RCC_PLLSAI2CFGR_PLLSAI2PDIV_Pos))
1736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #elif defined(RCC_PLLSAI2P_DIV_2_31_SUPPORT)
1738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLSAI2 frequency used for SAI domain
1740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLSAI2_SAI_FREQ (HSE_VALUE,@ref LL_RCC_PLL_GetDivider (),
1741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *             @ref LL_RCC_PLLSAI2_GetN (), @ref LL_RCC_PLLSAI2_GetP ());
1742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on MSI/HSE/HSI)
1743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLM__ This parameter can be one of the following values:
1744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_1
1745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
1746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
1747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
1748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
1749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
1750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
1751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
1752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI2N__ Between 8 and 86 or 127 depending on devices
1753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI2P__ This parameter can be one of the following values:
1754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_2
1755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_3
1756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_4
1757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_5
1758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_6
1759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_7
1760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_8
1761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_9
1762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_10
1763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_11
1764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_12
1765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_13
1766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_14
1767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_15
1768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_16
1769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_17
1770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_18
1771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_19
1772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_20
1773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_21
1774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_22
1775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_23
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 34


1776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_24
1777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_25
1778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_26
1779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_27
1780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_28
1781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_29
1782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_30
1783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_31
1784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval PLLSAI2 clock frequency (in Hz)
1785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLSAI2_SAI_FREQ(__INPUTFREQ__, __PLLM__, __PLLSAI2N__, __PLLSAI2P__) \
1787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                    ((__INPUTFREQ__) / ((((__PLLM__)>> RCC_PLLCFGR_PLLM_Pos) + 1U)) * (__PLLSAI2N__)
1788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                     ((__PLLSAI2P__) >> RCC_PLLSAI2CFGR_PLLSAI2PDIV_Pos))
1789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #else
1791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLSAI2 frequency used for SAI domain
1793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLSAI2_SAI_FREQ (HSE_VALUE,@ref LL_RCC_PLL_GetDivider (),
1794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *             @ref LL_RCC_PLLSAI2_GetN (), @ref LL_RCC_PLLSAI2_GetP ());
1795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on MSI/HSE/HSI)
1796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLM__ This parameter can be one of the following values:
1797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_1
1798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
1799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
1800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
1801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
1802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
1803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
1804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
1805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI2N__ Between 8 and 86
1806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI2P__ This parameter can be one of the following values:
1807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_7
1808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2P_DIV_17
1809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval PLLSAI2 clock frequency (in Hz)
1810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLSAI2_SAI_FREQ(__INPUTFREQ__, __PLLM__, __PLLSAI2N__, __PLLSAI2P__) \
1812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                    ((__INPUTFREQ__) / ((((__PLLM__)>> RCC_PLLCFGR_PLLM_Pos) + 1)) * (__PLLSAI2N__) 
1813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                     (((__PLLSAI2P__) == LL_RCC_PLLSAI2P_DIV_7) ? 7U : 17U))
1814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_PLLSAI2P_DIV_2_31_SUPPORT */
1816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(LTDC)
1818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLSAI2 frequency used for LTDC domain
1820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLSAI2_LTDC_FREQ (HSE_VALUE,@ref LL_RCC_PLLSAI2_GetDivider (),
1821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *             @ref LL_RCC_PLLSAI2_GetN (), @ref LL_RCC_PLLSAI2_GetR (), @ref LL_RCC_PLLSAI2_GetDI
1822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on HSE/HSI/MSI)
1823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI2M__ This parameter can be one of the following values:
1824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_1
1825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_2
1826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_3
1827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_4
1828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_5
1829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_6
1830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_7
1831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_8
1832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_9
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 35


1833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_10
1834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_11
1835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_12
1836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_13
1837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_14
1838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_15
1839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_16
1840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI2N__ Between 8 and 127
1841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI2R__ This parameter can be one of the following values:
1842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2R_DIV_2
1843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2R_DIV_4
1844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2R_DIV_6
1845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2R_DIV_8
1846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI2DIVR__ This parameter can be one of the following values:
1847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2DIVR_DIV_2
1848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2DIVR_DIV_4
1849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2DIVR_DIV_8
1850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2DIVR_DIV_16
1851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval PLLSAI2 clock frequency (in Hz)
1852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLSAI2_LTDC_FREQ(__INPUTFREQ__, __PLLSAI2M__, __PLLSAI2N__, __PLLSAI2R__, __
1854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                    (((__INPUTFREQ__) / (((__PLLSAI2M__)>> RCC_PLLSAI2CFGR_PLLSAI2M_Pos) + 1U)) * (_
1855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                     (((((__PLLSAI2R__) >> RCC_PLLSAI2CFGR_PLLSAI2R_Pos ) + 1U) << 1U) * (2UL << ((_
1856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #elif defined(RCC_PLLSAI2_SUPPORT)
1857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLSAI2 frequency used on ADC domain
1859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLSAI2_ADC_FREQ (HSE_VALUE,@ref LL_RCC_PLL_GetDivider (),
1860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *             @ref LL_RCC_PLLSAI2_GetN (), @ref LL_RCC_PLLSAI2_GetR ());
1861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on MSI/HSE/HSI)
1862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLM__ This parameter can be one of the following values:
1863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_1
1864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_2
1865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_3
1866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_4
1867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_5
1868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_6
1869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_7
1870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLM_DIV_8
1871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI2N__ Between 8 and 86
1872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI2R__ This parameter can be one of the following values:
1873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2R_DIV_2
1874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2R_DIV_4
1875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2R_DIV_6
1876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2R_DIV_8
1877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval PLLSAI2 clock frequency (in Hz)
1878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLSAI2_ADC_FREQ(__INPUTFREQ__, __PLLM__, __PLLSAI2N__, __PLLSAI2R__) \
1880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                    ((__INPUTFREQ__) / ((((__PLLM__)>> RCC_PLLCFGR_PLLM_Pos) + 1U)) * (__PLLSAI2N__)
1881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                     ((((__PLLSAI2R__) >> RCC_PLLSAI2CFGR_PLLSAI2R_Pos ) + 1U) << 1U))
1882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* LTDC */
1884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(DSI)
1886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLDSICLK frequency used on DSI
1888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLSAI2_DSI_FREQ (HSE_VALUE,@ref LL_RCC_PLLSAI2_GetDivider (),
1889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *             @ref LL_RCC_PLLSAI2_GetN (), @ref LL_RCC_PLLSAI2_GetQ ());
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 36


1890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on HSE/HSI/MSI)
1891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI2M__ This parameter can be one of the following values:
1892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_1
1893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_2
1894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_3
1895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_4
1896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_5
1897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_6
1898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_7
1899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_8
1900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_9
1901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_10
1902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_11
1903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_12
1904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_13
1905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_14
1906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_15
1907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2M_DIV_16
1908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI2N__ Between 8 and 127
1909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __PLLSAI2Q__ This parameter can be one of the following values:
1910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2Q_DIV_2
1911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2Q_DIV_4
1912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2Q_DIV_6
1913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSAI2Q_DIV_8
1914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval PLL clock frequency (in Hz)
1915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLSAI2_DSI_FREQ(__INPUTFREQ__, __PLLSAI2M__, __PLLSAI2N__, __PLLSAI2Q__) \
1917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                    ((__INPUTFREQ__) / ((((__PLLSAI2M__) >> RCC_PLLSAI2CFGR_PLLSAI2M_Pos) + 1U)) * (
1918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                     ((((__PLLSAI2Q__) >> RCC_PLLSAI2CFGR_PLLSAI2Q_Pos) + 1U) << 1U))
1919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* DSI */
1920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Helper macro to calculate the HCLK frequency
1925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __SYSCLKFREQ__ SYSCLK frequency (based on MSI/HSE/HSI/PLLCLK)
1926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __AHBPRESCALER__ This parameter can be one of the following values:
1927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
1928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
1929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
1930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
1931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
1932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
1933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
1934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
1935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
1936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval HCLK clock frequency (in Hz)
1937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define __LL_RCC_CALC_HCLK_FREQ(__SYSCLKFREQ__, __AHBPRESCALER__) ((__SYSCLKFREQ__) >> AHBPrescTabl
1939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PCLK1 frequency (ABP1)
1942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __HCLKFREQ__ HCLK frequency
1943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __APB1PRESCALER__ This parameter can be one of the following values:
1944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
1945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
1946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 37


1947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
1948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
1949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval PCLK1 clock frequency (in Hz)
1950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define __LL_RCC_CALC_PCLK1_FREQ(__HCLKFREQ__, __APB1PRESCALER__) ((__HCLKFREQ__) >> APBPrescTable[
1952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PCLK2 frequency (ABP2)
1955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __HCLKFREQ__ HCLK frequency
1956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __APB2PRESCALER__ This parameter can be one of the following values:
1957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_1
1958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_2
1959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_4
1960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_8
1961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_16
1962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval PCLK2 clock frequency (in Hz)
1963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define __LL_RCC_CALC_PCLK2_FREQ(__HCLKFREQ__, __APB2PRESCALER__) ((__HCLKFREQ__) >> APBPrescTable[
1965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
1966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
1967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Helper macro to calculate the MSI frequency (in Hz)
1968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note __MSISEL__ can be retrieved thanks to function LL_RCC_MSI_IsEnabledRangeSelect()
1969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note if __MSISEL__ is equal to LL_RCC_MSIRANGESEL_STANDBY,
1970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *        __MSIRANGE__can be retrieved by LL_RCC_MSI_GetRangeAfterStandby()
1971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *        else by LL_RCC_MSI_GetRange()
1972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *        ex: __LL_RCC_CALC_MSI_FREQ(LL_RCC_MSI_IsEnabledRangeSelect(),
1973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *              (LL_RCC_MSI_IsEnabledRangeSelect()?
1974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *               LL_RCC_MSI_GetRange():
1975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *               LL_RCC_MSI_GetRangeAfterStandby()))
1976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __MSISEL__ This parameter can be one of the following values:
1977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGESEL_STANDBY
1978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGESEL_RUN
1979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  __MSIRANGE__ This parameter can be one of the following values:
1980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_0
1981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_1
1982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_2
1983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_3
1984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_4
1985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_5
1986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_6
1987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_7
1988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_8
1989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_9
1990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_10
1991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_11
1992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSISRANGE_4
1993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSISRANGE_5
1994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSISRANGE_6
1995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSISRANGE_7
1996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval MSI clock frequency (in Hz)
1997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
1998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #define __LL_RCC_CALC_MSI_FREQ(__MSISEL__, __MSIRANGE__)   (((__MSISEL__) == LL_RCC_MSIRANGESEL_STA
1999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                            (MSIRangeTable[(__MSIRANGE__) >> 8U]) : \
2000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****                            (MSIRangeTable[(__MSIRANGE__) >> 4U]))
2001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 38


2004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
2008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /* Exported functions --------------------------------------------------------*/
2011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Functions RCC Exported Functions
2012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
2013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_HSE HSE
2016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
2017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Enable the Clock Security System.
2021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CR           CSSON         LL_RCC_HSE_EnableCSS
2022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_EnableCSS(void)
2025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_CSSON);
2027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Enable HSE external oscillator (HSE Bypass)
2031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CR           HSEBYP        LL_RCC_HSE_EnableBypass
2032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_EnableBypass(void)
2035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSEBYP);
2037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Disable HSE external oscillator (HSE Bypass)
2041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CR           HSEBYP        LL_RCC_HSE_DisableBypass
2042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_DisableBypass(void)
2045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
2047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Enable HSE crystal oscillator (HSE ON)
2051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CR           HSEON         LL_RCC_HSE_Enable
2052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_Enable(void)
2055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSEON);
2057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Disable HSE crystal oscillator (HSE ON)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 39


2061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CR           HSEON         LL_RCC_HSE_Disable
2062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_Disable(void)
2065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON);
2067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Check if HSE oscillator Ready
2071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CR           HSERDY        LL_RCC_HSE_IsReady
2072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
2073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSE_IsReady(void)
2075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   return ((READ_BIT(RCC->CR, RCC_CR_HSERDY) == RCC_CR_HSERDY) ? 1UL : 0UL);
2077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
2081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_HSI HSI
2084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
2085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Enable HSI even in stop mode
2089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note HSI oscillator is forced ON even in Stop mode
2090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CR           HSIKERON      LL_RCC_HSI_EnableInStopMode
2091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_EnableInStopMode(void)
2094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSIKERON);
2096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Disable HSI in stop mode
2100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CR           HSIKERON      LL_RCC_HSI_DisableInStopMode
2101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_DisableInStopMode(void)
2104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSIKERON);
2106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Check if HSI is enabled in stop mode
2110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CR           HSIKERON        LL_RCC_HSI_IsEnabledInStopMode
2111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
2112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_IsEnabledInStopMode(void)
2114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   return ((READ_BIT(RCC->CR, RCC_CR_HSIKERON) == RCC_CR_HSIKERON) ? 1UL : 0UL);
2116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 40


2118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Enable HSI oscillator
2120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CR           HSION         LL_RCC_HSI_Enable
2121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_Enable(void)
2124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSION);
2126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Disable HSI oscillator
2130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CR           HSION         LL_RCC_HSI_Disable
2131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_Disable(void)
2134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSION);
2136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Check if HSI clock is ready
2140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CR           HSIRDY        LL_RCC_HSI_IsReady
2141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
2142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_IsReady(void)
2144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   return ((READ_BIT(RCC->CR, RCC_CR_HSIRDY) == RCC_CR_HSIRDY) ? 1UL : 0UL);
2146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Enable HSI Automatic from stop mode
2150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CR           HSIASFS       LL_RCC_HSI_EnableAutoFromStop
2151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_EnableAutoFromStop(void)
2154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSIASFS);
2156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Disable HSI Automatic from stop mode
2160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CR           HSIASFS       LL_RCC_HSI_DisableAutoFromStop
2161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_DisableAutoFromStop(void)
2164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSIASFS);
2166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Get HSI Calibration value
2169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note When HSITRIM is written, HSICAL is updated with the sum of
2170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *       HSITRIM and the factory trim value
2171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll ICSCR        HSICAL        LL_RCC_HSI_GetCalibration
2172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0xFF
2173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_GetCalibration(void)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 41


2175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->ICSCR, RCC_ICSCR_HSICAL) >> RCC_ICSCR_HSICAL_Pos);
2177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Set HSI Calibration trimming
2181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note user-programmable trimming value that is added to the HSICAL
2182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note Default value is 16 on STM32L43x/STM32L44x/STM32L47x/STM32L48x or 64 on other devices,
2183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *       which, when added to the HSICAL value, should trim the HSI to 16 MHz +/- 1 %
2184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll ICSCR        HSITRIM       LL_RCC_HSI_SetCalibTrimming
2185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  Value Between Min_Data = 0 and Max_Data = 31 on STM32L43x/STM32L44x/STM32L47x/STM32L48x
2186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *               between Min_Data = 0 and Max_Data = 127 on other devices
2187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_SetCalibTrimming(uint32_t Value)
2190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   MODIFY_REG(RCC->ICSCR, RCC_ICSCR_HSITRIM, Value << RCC_ICSCR_HSITRIM_Pos);
2192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Get HSI Calibration trimming
2196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll ICSCR        HSITRIM       LL_RCC_HSI_GetCalibTrimming
2197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval Between Min_Data = 0 and Max_Data = 31 on STM32L43x/STM32L44x/STM32L47x/STM32L48x or
2198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         between Min_Data = 0 and Max_Data = 127 on other devices
2199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_GetCalibTrimming(void)
2201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->ICSCR, RCC_ICSCR_HSITRIM) >> RCC_ICSCR_HSITRIM_Pos);
2203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
2207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
2210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_HSI48 HSI48
2211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
2212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Enable HSI48
2216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CRRCR          HSI48ON       LL_RCC_HSI48_Enable
2217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI48_Enable(void)
2220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   SET_BIT(RCC->CRRCR, RCC_CRRCR_HSI48ON);
2222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Disable HSI48
2226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CRRCR          HSI48ON       LL_RCC_HSI48_Disable
2227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI48_Disable(void)
2230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   CLEAR_BIT(RCC->CRRCR, RCC_CRRCR_HSI48ON);
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 42


2232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Check if HSI48 oscillator Ready
2236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CRRCR          HSI48RDY      LL_RCC_HSI48_IsReady
2237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
2238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI48_IsReady(void)
2240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   return ((READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) == RCC_CRRCR_HSI48RDY) ? 1UL : 0UL);
2242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Get HSI48 Calibration value
2246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CRRCR          HSI48CAL      LL_RCC_HSI48_GetCalibration
2247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0x1FF
2248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI48_GetCalibration(void)
2250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48CAL) >> RCC_CRRCR_HSI48CAL_Pos);
2252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
2256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
2258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_LSE LSE
2260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
2261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Enable  Low Speed External (LSE) crystal.
2265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll BDCR         LSEON         LL_RCC_LSE_Enable
2266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_Enable(void)
2269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
2271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Disable  Low Speed External (LSE) crystal.
2275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll BDCR         LSEON         LL_RCC_LSE_Disable
2276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_Disable(void)
2279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEON);
2281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Enable external clock source (LSE bypass).
2285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll BDCR         LSEBYP        LL_RCC_LSE_EnableBypass
2286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_EnableBypass(void)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 43


2289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
2291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Disable external clock source (LSE bypass).
2295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll BDCR         LSEBYP        LL_RCC_LSE_DisableBypass
2296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_DisableBypass(void)
2299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
2301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Set LSE oscillator drive capability
2305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note The oscillator is in Xtal mode when it is not in bypass mode.
2306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll BDCR         LSEDRV        LL_RCC_LSE_SetDriveCapability
2307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  LSEDrive This parameter can be one of the following values:
2308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_LOW
2309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMLOW
2310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMHIGH
2311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_HIGH
2312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_SetDriveCapability(uint32_t LSEDrive)
2315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   MODIFY_REG(RCC->BDCR, RCC_BDCR_LSEDRV, LSEDrive);
2317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Get LSE oscillator drive capability
2321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll BDCR         LSEDRV        LL_RCC_LSE_GetDriveCapability
2322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_LOW
2324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMLOW
2325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMHIGH
2326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_HIGH
2327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSE_GetDriveCapability(void)
2329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->BDCR, RCC_BDCR_LSEDRV));
2331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Enable Clock security system on LSE.
2335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll BDCR         LSECSSON      LL_RCC_LSE_EnableCSS
2336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_EnableCSS(void)
2339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_LSECSSON);
2341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Disable Clock security system on LSE.
2345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note Clock security system can be disabled only after a LSE
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 44


2346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *       failure detection. In that case it MUST be disabled by software.
2347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll BDCR         LSECSSON      LL_RCC_LSE_DisableCSS
2348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_DisableCSS(void)
2351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSECSSON);
2353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Check if LSE oscillator Ready
2357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll BDCR         LSERDY        LL_RCC_LSE_IsReady
2358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
2359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSE_IsReady(void)
2361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   return ((READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == RCC_BDCR_LSERDY) ? 1UL : 0UL);
2363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Check if CSS on LSE failure Detection
2367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll BDCR         LSECSSD       LL_RCC_LSE_IsCSSDetected
2368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
2369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSE_IsCSSDetected(void)
2371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   return ((READ_BIT(RCC->BDCR, RCC_BDCR_LSECSSD) == RCC_BDCR_LSECSSD) ? 1UL : 0UL);
2373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_BDCR_LSESYSDIS)
2376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Disable LSE oscillator propagation
2378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note LSE clock is not propagated to any peripheral except to RTC which remains clocked
2379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note A 2 LSE-clock delay is needed for LSESYSDIS setting to be taken into account
2380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll BDCR         LSESYSDIS     LL_RCC_LSE_DisablePropagation
2381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_DisablePropagation(void)
2384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_LSESYSDIS);
2386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Enable LSE oscillator propagation
2390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note A 2 LSE-clock delay is needed for LSESYSDIS resetting to be taken into account
2391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll BDCR         LSESYSDIS     LL_RCC_LSE_EnablePropagation
2392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_EnablePropagation(void)
2395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSESYSDIS);
2397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Check if LSE oscillator propagation is enabled
2401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll BDCR         LSESYSDIS     LL_RCC_LSE_IsPropagationEnabled
2402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 45


2403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSE_IsPropagationEnabled(void)
2405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   return ((READ_BIT(RCC->BDCR, RCC_BDCR_LSESYSDIS) == 0U) ? 1UL : 0UL);
2407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_BDCR_LSESYSDIS */
2409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
2411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_LSI LSI
2414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
2415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Enable LSI Oscillator
2419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CSR          LSION         LL_RCC_LSI_Enable
2420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSI_Enable(void)
2423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   SET_BIT(RCC->CSR, RCC_CSR_LSION);
2425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Disable LSI Oscillator
2429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CSR          LSION         LL_RCC_LSI_Disable
2430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSI_Disable(void)
2433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   CLEAR_BIT(RCC->CSR, RCC_CSR_LSION);
2435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Check if LSI is Ready
2439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CSR          LSIRDY        LL_RCC_LSI_IsReady
2440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
2441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSI_IsReady(void)
2443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   return ((READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == RCC_CSR_LSIRDY) ? 1UL : 0UL);
2445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #if defined(RCC_CSR_LSIPREDIV)
2448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Set LSI division factor
2450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CSR          LSIPREDIV     LL_RCC_LSI_SetPrediv
2451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  LSI_PREDIV This parameter can be one of the following values:
2452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSI_PREDIV_1
2453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSI_PREDIV_128
2454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSI_SetPrediv(uint32_t LSI_PREDIV)
2457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   MODIFY_REG(RCC->CSR, RCC_CSR_LSIPREDIV, LSI_PREDIV);
2459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 46


2460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Get LSI division factor
2463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CSR          LSIPREDIV     LL_RCC_LSI_GetPrediv
2464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSI_PREDIV_1
2466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSI_PREDIV_128
2467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSI_GetPrediv(void)
2469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   return (READ_BIT(RCC->CSR, RCC_CSR_LSIPREDIV));
2471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** #endif /* RCC_CSR_LSIPREDIV */
2473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
2476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_MSI MSI
2479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
2480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Enable MSI oscillator
2484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CR           MSION         LL_RCC_MSI_Enable
2485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_MSI_Enable(void)
2488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_MSION);
2490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Disable MSI oscillator
2494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CR           MSION         LL_RCC_MSI_Disable
2495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_MSI_Disable(void)
2498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_MSION);
2500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Check if MSI oscillator Ready
2504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CR           MSIRDY        LL_RCC_MSI_IsReady
2505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
2506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_MSI_IsReady(void)
2508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   return ((READ_BIT(RCC->CR, RCC_CR_MSIRDY) == RCC_CR_MSIRDY) ? 1UL : 0UL);
2510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Enable MSI PLL-mode (Hardware auto calibration with LSE)
2514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note MSIPLLEN must be enabled after LSE is enabled (LSEON enabled)
2515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *       and ready (LSERDY set by hardware)
2516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note hardware protection to avoid enabling MSIPLLEN if LSE is not
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 47


2517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *       ready
2518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CR           MSIPLLEN      LL_RCC_MSI_EnablePLLMode
2519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_MSI_EnablePLLMode(void)
2522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_MSIPLLEN);
2524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Disable MSI-PLL mode
2528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note cleared by hardware when LSE is disabled (LSEON = 0) or when
2529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *       the Clock Security System on LSE detects a LSE failure
2530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CR           MSIPLLEN      LL_RCC_MSI_DisablePLLMode
2531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_MSI_DisablePLLMode(void)
2534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_MSIPLLEN);
2536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Enable MSI clock range selection with MSIRANGE register
2540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note Write 0 has no effect. After a standby or a reset
2541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *       MSIRGSEL is at 0 and the MSI range value is provided by
2542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *       MSISRANGE
2543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CR           MSIRGSEL      LL_RCC_MSI_EnableRangeSelection
2544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_MSI_EnableRangeSelection(void)
2547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_MSIRGSEL);
2549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Check if MSI clock range is selected with MSIRANGE register
2553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CR           MSIRGSEL      LL_RCC_MSI_IsEnabledRangeSelect
2554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
2555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_MSI_IsEnabledRangeSelect(void)
2557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   return ((READ_BIT(RCC->CR, RCC_CR_MSIRGSEL) == RCC_CR_MSIRGSEL) ? 1UL : 0UL);
2559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Configure the Internal Multi Speed oscillator (MSI) clock range in run mode.
2563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CR           MSIRANGE      LL_RCC_MSI_SetRange
2564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  Range This parameter can be one of the following values:
2565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_0
2566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_1
2567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_2
2568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_3
2569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_4
2570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_5
2571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_6
2572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_7
2573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_8
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 48


2574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_9
2575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_10
2576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_11
2577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_MSI_SetRange(uint32_t Range)
2580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   MODIFY_REG(RCC->CR, RCC_CR_MSIRANGE, Range);
2582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Get the Internal Multi Speed oscillator (MSI) clock range in run mode.
2586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CR           MSIRANGE      LL_RCC_MSI_GetRange
2587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_0
2589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_1
2590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_2
2591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_3
2592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_4
2593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_5
2594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_6
2595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_7
2596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_8
2597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_9
2598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_10
2599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_11
2600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_MSI_GetRange(void)
2602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CR, RCC_CR_MSIRANGE));
2604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Configure MSI range used after standby
2608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CSR          MSISRANGE     LL_RCC_MSI_SetRangeAfterStandby
2609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  Range This parameter can be one of the following values:
2610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSISRANGE_4
2611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSISRANGE_5
2612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSISRANGE_6
2613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSISRANGE_7
2614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_MSI_SetRangeAfterStandby(uint32_t Range)
2617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   MODIFY_REG(RCC->CSR, RCC_CSR_MSISRANGE, Range);
2619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Get MSI range used after standby
2623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CSR          MSISRANGE     LL_RCC_MSI_GetRangeAfterStandby
2624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSISRANGE_4
2626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSISRANGE_5
2627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSISRANGE_6
2628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSISRANGE_7
2629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_MSI_GetRangeAfterStandby(void)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 49


2631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CSR, RCC_CSR_MSISRANGE));
2633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Get MSI Calibration value
2637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note When MSITRIM is written, MSICAL is updated with the sum of
2638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *       MSITRIM and the factory trim value
2639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll ICSCR        MSICAL        LL_RCC_MSI_GetCalibration
2640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval Between Min_Data = 0 and Max_Data = 255
2641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_MSI_GetCalibration(void)
2643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->ICSCR, RCC_ICSCR_MSICAL) >> RCC_ICSCR_MSICAL_Pos);
2645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Set MSI Calibration trimming
2649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @note user-programmable trimming value that is added to the MSICAL
2650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll ICSCR        MSITRIM       LL_RCC_MSI_SetCalibTrimming
2651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  Value Between Min_Data = 0 and Max_Data = 255
2652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_MSI_SetCalibTrimming(uint32_t Value)
2655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   MODIFY_REG(RCC->ICSCR, RCC_ICSCR_MSITRIM, Value << RCC_ICSCR_MSITRIM_Pos);
2657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Get MSI Calibration trimming
2661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll ICSCR        MSITRIM       LL_RCC_MSI_GetCalibTrimming
2662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval Between 0 and 255
2663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_MSI_GetCalibTrimming(void)
2665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->ICSCR, RCC_ICSCR_MSITRIM) >> RCC_ICSCR_MSITRIM_Pos);
2667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
2671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_LSCO LSCO
2674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
2675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Enable Low speed clock
2679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll BDCR         LSCOEN        LL_RCC_LSCO_Enable
2680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSCO_Enable(void)
2683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_LSCOEN);
2685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 50


2688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Disable Low speed clock
2689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll BDCR         LSCOEN        LL_RCC_LSCO_Disable
2690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSCO_Disable(void)
2693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSCOEN);
2695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Configure Low speed clock selection
2699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll BDCR         LSCOSEL       LL_RCC_LSCO_SetSource
2700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
2701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSCO_CLKSOURCE_LSI
2702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSCO_CLKSOURCE_LSE
2703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSCO_SetSource(uint32_t Source)
2706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   MODIFY_REG(RCC->BDCR, RCC_BDCR_LSCOSEL, Source);
2708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Get Low speed clock selection
2712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll BDCR         LSCOSEL       LL_RCC_LSCO_GetSource
2713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSCO_CLKSOURCE_LSI
2715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSCO_CLKSOURCE_LSE
2716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSCO_GetSource(void)
2718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->BDCR, RCC_BDCR_LSCOSEL));
2720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
2724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_System System
2727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
2728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Configure the system clock source
2732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CFGR         SW            LL_RCC_SetSysClkSource
2733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
2734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_MSI
2735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_HSI
2736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_HSE
2737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_PLL
2738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetSysClkSource(uint32_t Source)
2741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, Source);
2743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 51


2745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Get the system clock source
2747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CFGR         SWS           LL_RCC_GetSysClkSource
2748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_MSI
2750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_HSI
2751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_HSE
2752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_PLL
2753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetSysClkSource(void)
2755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_SWS));
2757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Set AHB prescaler
2761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CFGR         HPRE          LL_RCC_SetAHBPrescaler
2762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
2763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
2764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
2765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
2766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
2767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
2768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
2769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
2770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
2771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
2772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetAHBPrescaler(uint32_t Prescaler)
2775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, Prescaler);
2777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Set APB1 prescaler
2781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE1         LL_RCC_SetAPB1Prescaler
2782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
2783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
2784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
2785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
2786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
2787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
2788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetAPB1Prescaler(uint32_t Prescaler)
2791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, Prescaler);
2793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Set APB2 prescaler
2797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE2         LL_RCC_SetAPB2Prescaler
2798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
2799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_1
2800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_2
2801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_4
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 52


2802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_8
2803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_16
2804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetAPB2Prescaler(uint32_t Prescaler)
2807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, Prescaler);
2809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Get AHB prescaler
2813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CFGR         HPRE          LL_RCC_GetAHBPrescaler
2814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
2816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
2817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
2818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
2819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
2820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
2821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
2822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
2823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
2824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetAHBPrescaler(void)
2826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_HPRE));
2828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Get APB1 prescaler
2832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE1         LL_RCC_GetAPB1Prescaler
2833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
2835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
2836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
2837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
2838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
2839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetAPB1Prescaler(void)
2841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1));
2843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Get APB2 prescaler
2847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE2         LL_RCC_GetAPB2Prescaler
2848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_1
2850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_2
2851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_4
2852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_8
2853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_16
2854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetAPB2Prescaler(void)
2856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2));
2858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 53


2859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Set Clock After Wake-Up From Stop mode
2862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CFGR         STOPWUCK      LL_RCC_SetClkAfterWakeFromStop
2863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  Clock This parameter can be one of the following values:
2864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_STOP_WAKEUPCLOCK_MSI
2865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_STOP_WAKEUPCLOCK_HSI
2866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetClkAfterWakeFromStop(uint32_t Clock)
2869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_STOPWUCK, Clock);
2871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Get Clock After Wake-Up From Stop mode
2875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CFGR         STOPWUCK      LL_RCC_GetClkAfterWakeFromStop
2876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
2877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_STOP_WAKEUPCLOCK_MSI
2878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_STOP_WAKEUPCLOCK_HSI
2879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetClkAfterWakeFromStop(void)
2881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_STOPWUCK));
2883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
2887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_MCO MCO
2890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
2891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Configure MCOx
2895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CFGR         MCOSEL        LL_RCC_ConfigMCO\n
2896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         CFGR         MCOPRE        LL_RCC_ConfigMCO
2897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  MCOxSource This parameter can be one of the following values:
2898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_NOCLOCK
2899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_SYSCLK
2900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_MSI
2901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_HSI
2902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_HSE
2903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_HSI48 (*)
2904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_PLLCLK
2905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_LSI
2906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_LSE
2907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *
2908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         (*) value not defined in all devices.
2909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  MCOxPrescaler This parameter can be one of the following values:
2910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_1
2911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_2
2912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_4
2913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_8
2914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_16
2915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 54


2916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_ConfigMCO(uint32_t MCOxSource, uint32_t MCOxPrescaler)
2918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_MCOSEL | RCC_CFGR_MCOPRE, MCOxSource | MCOxPrescaler);
2920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** }
2921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @}
2924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_Peripheral_Clock_Source Peripheral Clock Source
2927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @{
2928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** 
2930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** /**
2931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @brief  Configure USARTx clock source
2932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @rmtoll CCIPR        USARTxSEL     LL_RCC_SetUSARTClockSource
2933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @param  USARTxSource This parameter can be one of the following values:
2934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_PCLK2
2935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_SYSCLK
2936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_HSI
2937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_LSE
2938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_PCLK1
2939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_SYSCLK
2940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_HSI
2941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_LSE
2942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_PCLK1 (*)
2943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_SYSCLK (*)
2944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_HSI (*)
2945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_LSE (*)
2946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *
2947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   *         (*) value not defined in all devices.
2948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   * @retval None
2949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   */
2950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetUSARTClockSource(uint32_t USARTxSource)
  62              		.loc 2 2950 22 view .LVU6
  63              	.LBB258:
2951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
2952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h ****   MODIFY_REG(RCC->CCIPR, (USARTxSource >> 16U), (USARTxSource & 0x0000FFFFU));
  64              		.loc 2 2952 3 view .LVU7
  65 0020 03F18043 		add	r3, r3, #1073741824
  66 0024 03F50433 		add	r3, r3, #135168
  67 0028 D3F88820 		ldr	r2, [r3, #136]
  68 002c 22F00302 		bic	r2, r2, #3
  69 0030 C3F88820 		str	r2, [r3, #136]
  70              	.LVL1:
  71              		.loc 2 2952 3 is_stmt 0 view .LVU8
  72              	.LBE258:
  73              	.LBE257:
  47:Core/Src/usart.c **** 
  48:Core/Src/usart.c ****     /* Peripheral clock enable */
  49:Core/Src/usart.c ****     LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_USART1);
  74              		.loc 1 49 5 is_stmt 1 view .LVU9
  75              	.LBB259:
  76              	.LBI259:
  77              		.file 3 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h"
   1:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 55


   2:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @file    stm32l4xx_ll_bus.h
   4:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
   7:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   @verbatim
   8:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****                       ##### RCC Limitations #####
   9:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   ==============================================================================
  10:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****     [..]
  11:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral
  12:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write
  13:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****       from/to registers.
  14:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  15:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  16:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
  17:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****     [..]
  18:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****       Workarounds:
  19:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  20:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  21:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
  22:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   @endverbatim
  23:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   ******************************************************************************
  24:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @attention
  25:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
  26:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * Copyright (c) 2017 STMicroelectronics.
  27:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * All rights reserved.
  28:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
  29:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * This software is licensed under terms that can be found in the LICENSE file in
  30:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * the root directory of this software component.
  31:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  32:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   ******************************************************************************
  33:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
  34:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
  35:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  36:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #ifndef STM32L4xx_LL_BUS_H
  37:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define STM32L4xx_LL_BUS_H
  38:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
  39:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #ifdef __cplusplus
  40:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** extern "C" {
  41:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif
  42:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
  43:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  44:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #include "stm32l4xx.h"
  45:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
  46:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @addtogroup STM32L4xx_LL_Driver
  47:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
  48:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
  49:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
  50:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(RCC)
  51:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
  52:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL BUS
  53:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
  54:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
  55:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
  56:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  57:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  58:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 56


  59:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  60:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
  61:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  62:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
  63:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  64:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  65:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  66:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
  67:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
  68:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
  69:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  70:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
  71:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
  72:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
  73:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHB1ENR_DMA1EN
  74:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA2           RCC_AHB1ENR_DMA2EN
  75:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(DMAMUX1)
  76:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMAMUX1        RCC_AHB1ENR_DMAMUX1EN
  77:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* DMAMUX1 */
  78:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_FLASH          RCC_AHB1ENR_FLASHEN
  79:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHB1ENR_CRCEN
  80:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_TSC            RCC_AHB1ENR_TSCEN
  81:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(DMA2D)
  82:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA2D          RCC_AHB1ENR_DMA2DEN
  83:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* DMA2D */
  84:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(GFXMMU)
  85:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GFXMMU         RCC_AHB1ENR_GFXMMUEN
  86:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* GFXMMU */
  87:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM1          RCC_AHB1SMENR_SRAM1SMEN
  88:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
  89:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @}
  90:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
  91:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
  92:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB2_GRP1_PERIPH  AHB2 GRP1 PERIPH
  93:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
  94:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
  95:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_ALL            0xFFFFFFFFU
  96:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOA          RCC_AHB2ENR_GPIOAEN
  97:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOB          RCC_AHB2ENR_GPIOBEN
  98:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOC          RCC_AHB2ENR_GPIOCEN
  99:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(GPIOD)
 100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOD          RCC_AHB2ENR_GPIODEN
 101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /*GPIOD*/
 102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(GPIOE)
 103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOE          RCC_AHB2ENR_GPIOEEN
 104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /*GPIOE*/
 105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(GPIOF)
 106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOF          RCC_AHB2ENR_GPIOFEN
 107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* GPIOF */
 108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(GPIOG)
 109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOG          RCC_AHB2ENR_GPIOGEN
 110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* GPIOG */
 111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOH          RCC_AHB2ENR_GPIOHEN
 112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(GPIOI)
 113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOI          RCC_AHB2ENR_GPIOIEN
 114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* GPIOI */
 115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(USB_OTG_FS)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 57


 116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_OTGFS          RCC_AHB2ENR_OTGFSEN
 117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* USB_OTG_FS */
 118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_ADC            RCC_AHB2ENR_ADCEN
 119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(DCMI)
 120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_DCMI           RCC_AHB2ENR_DCMIEN
 121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* DCMI */
 122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(AES)
 123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_AES            RCC_AHB2ENR_AESEN
 124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* AES */
 125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(HASH)
 126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_HASH           RCC_AHB2ENR_HASHEN
 127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* HASH */
 128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_RNG            RCC_AHB2ENR_RNGEN
 129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(OCTOSPIM)
 130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_OSPIM          RCC_AHB2ENR_OSPIMEN
 131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* OCTOSPIM */
 132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(PKA)
 133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_PKA            RCC_AHB2ENR_PKAEN
 134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* PKA */
 135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(SDMMC1) && defined(RCC_AHB2ENR_SDMMC1EN)
 136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_SDMMC1         RCC_AHB2ENR_SDMMC1EN
 137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* SDMMC1 && RCC_AHB2ENR_SDMMC1EN */
 138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_SRAM2          RCC_AHB2SMENR_SRAM2SMEN
 139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(SRAM3_BASE)
 140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_SRAM3          RCC_AHB2SMENR_SRAM3SMEN
 141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* SRAM3_BASE */
 142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @}
 144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB3_GRP1_PERIPH  AHB3 GRP1 PERIPH
 147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
 148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_ALL            0xFFFFFFFFU
 150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(FMC_Bank1_R)
 151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_FMC            RCC_AHB3ENR_FMCEN
 152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* FMC_Bank1_R */
 153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(QUADSPI)
 154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_QSPI           RCC_AHB3ENR_QSPIEN
 155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* QUADSPI */
 156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(OCTOSPI1)
 157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_OSPI1          RCC_AHB3ENR_OSPI1EN
 158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* OCTOSPI1 */
 159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(OCTOSPI2)
 160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_OSPI2          RCC_AHB3ENR_OSPI2EN
 161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* OCTOSPI2 */
 162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @}
 164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
 167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
 168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
 170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR1_TIM2EN
 171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(TIM3)
 172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM3           RCC_APB1ENR1_TIM3EN
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 58


 173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* TIM3 */
 174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(TIM4)
 175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM4           RCC_APB1ENR1_TIM4EN
 176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* TIM4 */
 177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(TIM5)
 178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM5           RCC_APB1ENR1_TIM5EN
 179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* TIM5 */
 180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM6           RCC_APB1ENR1_TIM6EN
 181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM7           RCC_APB1ENR1_TIM7EN
 182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(LCD)
 183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LCD            RCC_APB1ENR1_LCDEN
 184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* LCD */
 185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(RCC_APB1ENR1_RTCAPBEN)
 186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_RTCAPB         RCC_APB1ENR1_RTCAPBEN
 187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* RCC_APB1ENR1_RTCAPBEN */
 188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR1_WWDGEN
 189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(SPI2)
 190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR1_SPI2EN
 191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* SPI2 */
 192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI3           RCC_APB1ENR1_SPI3EN
 193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR1_USART2EN
 194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(USART3)
 195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART3         RCC_APB1ENR1_USART3EN
 196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* USART3 */
 197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(UART4)
 198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UART4          RCC_APB1ENR1_UART4EN
 199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* UART4 */
 200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(UART5)
 201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UART5          RCC_APB1ENR1_UART5EN
 202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* UART5 */
 203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR1_I2C1EN
 204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(I2C2)
 205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR1_I2C2EN
 206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* I2C2 */
 207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C3           RCC_APB1ENR1_I2C3EN
 208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(CRS)
 209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CRS            RCC_APB1ENR1_CRSEN
 210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* CRS */
 211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CAN1           RCC_APB1ENR1_CAN1EN
 212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(CAN2)
 213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CAN2           RCC_APB1ENR1_CAN2EN
 214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* CAN2 */
 215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(USB)
 216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USB            RCC_APB1ENR1_USBFSEN
 217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* USB */
 218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_PWR            RCC_APB1ENR1_PWREN
 219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC1           RCC_APB1ENR1_DAC1EN
 220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_OPAMP          RCC_APB1ENR1_OPAMPEN
 221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPTIM1         RCC_APB1ENR1_LPTIM1EN
 222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @}
 224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP2_PERIPH  APB1 GRP2 PERIPH
 228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
 229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 59


 230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_ALL            0xFFFFFFFFU
 231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_LPUART1        RCC_APB1ENR2_LPUART1EN
 232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(I2C4)
 233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_I2C4           RCC_APB1ENR2_I2C4EN
 234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* I2C4 */
 235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(SWPMI1)
 236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_SWPMI1         RCC_APB1ENR2_SWPMI1EN
 237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* SWPMI1 */
 238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_LPTIM2         RCC_APB1ENR2_LPTIM2EN
 239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @}
 241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB2_GRP1_PERIPH  APB2 GRP1 PERIPH
 244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
 245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ALL            0xFFFFFFFFU
 247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SYSCFG         RCC_APB2ENR_SYSCFGEN
 248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_FW             RCC_APB2ENR_FWEN
 249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(SDMMC1) && defined(RCC_APB2ENR_SDMMC1EN)
 250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SDMMC1         RCC_APB2ENR_SDMMC1EN
 251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* SDMMC1 && RCC_APB2ENR_SDMMC1EN */
 252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM1           RCC_APB2ENR_TIM1EN
 253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI1           RCC_APB2ENR_SPI1EN
 254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(TIM8)
 255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM8           RCC_APB2ENR_TIM8EN
 256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* TIM8 */
 257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_USART1         RCC_APB2ENR_USART1EN
 258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM15          RCC_APB2ENR_TIM15EN
 259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM16          RCC_APB2ENR_TIM16EN
 260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(TIM17)
 261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM17          RCC_APB2ENR_TIM17EN
 262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* TIM17 */
 263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SAI1           RCC_APB2ENR_SAI1EN
 264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(SAI2)
 265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SAI2           RCC_APB2ENR_SAI2EN
 266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* SAI2 */
 267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(DFSDM1_Channel0)
 268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_DFSDM1         RCC_APB2ENR_DFSDM1EN
 269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* DFSDM1_Channel0 */
 270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(LTDC)
 271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_LTDC           RCC_APB2ENR_LTDCEN
 272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* LTDC */
 273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(DSI)
 274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_DSI            RCC_APB2ENR_DSIEN
 275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* DSI */
 276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @}
 278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** Legacy definitions for compatibility purpose
 281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** @cond 0
 282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #if defined(DFSDM1_Channel0)
 284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_DFSDM          LL_APB2_GRP1_PERIPH_DFSDM1
 285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** #endif /* DFSDM1_Channel0 */
 286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 60


 287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** @endcond
 288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @}
 292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
 298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
 302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB1ENR      DMA1EN        LL_AHB1_GRP1_EnableClock\n
 307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      DMA2EN        LL_AHB1_GRP1_EnableClock\n
 308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      DMAMUX1EN     LL_AHB1_GRP1_EnableClock\n
 309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      FLASHEN       LL_AHB1_GRP1_EnableClock\n
 310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      CRCEN         LL_AHB1_GRP1_EnableClock\n
 311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      TSCEN         LL_AHB1_GRP1_EnableClock\n
 312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      DMA2DEN       LL_AHB1_GRP1_EnableClock\n
 313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      GFXMMUEN      LL_AHB1_GRP1_EnableClock
 314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1 (*)
 318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC
 321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GFXMMU (*)
 323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
 328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   __IO uint32_t tmpreg;
 330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->AHB1ENR, Periphs);
 331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB1ENR, Periphs);
 333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
 334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB1ENR      DMA1EN        LL_AHB1_GRP1_IsEnabledClock\n
 339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      DMA2EN        LL_AHB1_GRP1_IsEnabledClock\n
 340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      DMAMUX1EN     LL_AHB1_GRP1_IsEnabledClock\n
 341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      FLASHEN       LL_AHB1_GRP1_IsEnabledClock\n
 342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      CRCEN         LL_AHB1_GRP1_IsEnabledClock\n
 343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      TSCEN         LL_AHB1_GRP1_IsEnabledClock\n
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 61


 344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      DMA2DEN       LL_AHB1_GRP1_IsEnabledClock\n
 345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      GFXMMUEN      LL_AHB1_GRP1_IsEnabledClock
 346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1 (*)
 350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC
 353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GFXMMU (*)
 355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   return ((READ_BIT(RCC->AHB1ENR, Periphs) == Periphs) ? 1UL : 0UL);
 362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB1ENR      DMA1EN        LL_AHB1_GRP1_DisableClock\n
 367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      DMA2EN        LL_AHB1_GRP1_DisableClock\n
 368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      DMAMUX1EN     LL_AHB1_GRP1_DisableClock\n
 369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      FLASHEN       LL_AHB1_GRP1_DisableClock\n
 370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      CRCEN         LL_AHB1_GRP1_DisableClock\n
 371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      TSCEN         LL_AHB1_GRP1_DisableClock\n
 372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      DMA2DEN       LL_AHB1_GRP1_DisableClock\n
 373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1ENR      GFXMMUEN      LL_AHB1_GRP1_DisableClock
 374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1 (*)
 378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC
 381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GFXMMU (*)
 383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1ENR, Periphs);
 390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB1RSTR     DMA1RST       LL_AHB1_GRP1_ForceReset\n
 395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     DMA2RST       LL_AHB1_GRP1_ForceReset\n
 396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     DMAMUX1RST     LL_AHB1_GRP1_ForceReset\n
 397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     FLASHRST      LL_AHB1_GRP1_ForceReset\n
 398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     CRCRST        LL_AHB1_GRP1_ForceReset\n
 399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     TSCRST        LL_AHB1_GRP1_ForceReset\n
 400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     DMA2DRST      LL_AHB1_GRP1_ForceReset\n
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 62


 401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     GFXMMURST     LL_AHB1_GRP1_ForceReset
 402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1 (*)
 407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC
 410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GFXMMU (*)
 412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->AHB1RSTR, Periphs);
 419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB1RSTR     DMA1RST       LL_AHB1_GRP1_ReleaseReset\n
 424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     DMA2RST       LL_AHB1_GRP1_ReleaseReset\n
 425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     DMAMUX1RST     LL_AHB1_GRP1_ReleaseReset\n
 426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     FLASHRST      LL_AHB1_GRP1_ReleaseReset\n
 427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     CRCRST        LL_AHB1_GRP1_ReleaseReset\n
 428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     TSCRST        LL_AHB1_GRP1_ReleaseReset\n
 429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     DMA2DRST      LL_AHB1_GRP1_ReleaseReset\n
 430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     GFXMMURST     LL_AHB1_GRP1_ReleaseReset
 431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1 (*)
 436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC
 439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GFXMMU (*)
 441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1RSTR, Periphs);
 448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Enable AHB1 peripheral clocks in Sleep and Stop modes
 452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB1SMENR    DMA1SMEN      LL_AHB1_GRP1_EnableClockStopSleep\n
 453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    DMA2SMEN      LL_AHB1_GRP1_EnableClockStopSleep\n
 454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    DMAMUX1SMEN   LL_AHB1_GRP1_EnableClockStopSleep\n
 455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    FLASHSMEN     LL_AHB1_GRP1_EnableClockStopSleep\n
 456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    SRAM1SMEN     LL_AHB1_GRP1_EnableClockStopSleep\n
 457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    CRCSMEN       LL_AHB1_GRP1_EnableClockStopSleep\n
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 63


 458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    TSCSMEN       LL_AHB1_GRP1_EnableClockStopSleep\n
 459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    DMA2DSMEN     LL_AHB1_GRP1_EnableClockStopSleep\n
 460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    GFXMMUSMEN    LL_AHB1_GRP1_EnableClockStopSleep
 461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1 (*)
 465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM1
 467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC
 469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GFXMMU (*)
 471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClockStopSleep(uint32_t Periphs)
 476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   __IO uint32_t tmpreg;
 478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->AHB1SMENR, Periphs);
 479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB1SMENR, Periphs);
 481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
 482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Disable AHB1 peripheral clocks in Sleep and Stop modes
 486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB1SMENR    DMA1SMEN      LL_AHB1_GRP1_DisableClockStopSleep\n
 487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    DMA2SMEN      LL_AHB1_GRP1_DisableClockStopSleep\n
 488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    DMAMUX1SMEN   LL_AHB1_GRP1_DisableClockStopSleep\n
 489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    FLASHSMEN     LL_AHB1_GRP1_DisableClockStopSleep\n
 490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    SRAM1SMEN     LL_AHB1_GRP1_DisableClockStopSleep\n
 491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    CRCSMEN       LL_AHB1_GRP1_DisableClockStopSleep\n
 492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    TSCSMEN       LL_AHB1_GRP1_DisableClockStopSleep\n
 493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    DMA2DSMEN     LL_AHB1_GRP1_DisableClockStopSleep\n
 494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB1SMENR    GFXMMUSMEN    LL_AHB1_GRP1_DisableClockStopSleep
 495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1 (*)
 499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM1
 501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC
 503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GFXMMU (*)
 505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClockStopSleep(uint32_t Periphs)
 510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1SMENR, Periphs);
 512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 64


 515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @}
 516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB2 AHB2
 519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
 520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Enable AHB2 peripherals clock.
 524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB2ENR      GPIOAEN       LL_AHB2_GRP1_EnableClock\n
 525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOBEN       LL_AHB2_GRP1_EnableClock\n
 526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOCEN       LL_AHB2_GRP1_EnableClock\n
 527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIODEN       LL_AHB2_GRP1_EnableClock\n
 528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOEEN       LL_AHB2_GRP1_EnableClock\n
 529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOFEN       LL_AHB2_GRP1_EnableClock\n
 530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOGEN       LL_AHB2_GRP1_EnableClock\n
 531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOHEN       LL_AHB2_GRP1_EnableClock\n
 532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOIEN       LL_AHB2_GRP1_EnableClock\n
 533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      OTGFSEN       LL_AHB2_GRP1_EnableClock\n
 534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      ADCEN         LL_AHB2_GRP1_EnableClock\n
 535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      DCMIEN        LL_AHB2_GRP1_EnableClock\n
 536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      AESEN         LL_AHB2_GRP1_EnableClock\n
 537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      HASHEN        LL_AHB2_GRP1_EnableClock\n
 538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      RNGEN         LL_AHB2_GRP1_EnableClock\n
 539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      OSPIMEN       LL_AHB2_GRP1_EnableClock\n
 540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      SDMMC1EN      LL_AHB2_GRP1_EnableClock
 541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOD (*)
 546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOE (*)
 547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOF (*)
 548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOG (*)
 549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOI (*)
 551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OTGFS (*)
 552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ADC
 553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DCMI (*)
 554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES (*)
 555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_HASH (*)
 556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OSPIM (*)
 558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_SDMMC1 (*)
 559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_EnableClock(uint32_t Periphs)
 564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   __IO uint32_t tmpreg;
 566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
 570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 65


 572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Check if AHB2 peripheral clock is enabled or not
 574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB2ENR      GPIOAEN       LL_AHB2_GRP1_IsEnabledClock\n
 575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOBEN       LL_AHB2_GRP1_IsEnabledClock\n
 576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOCEN       LL_AHB2_GRP1_IsEnabledClock\n
 577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIODEN       LL_AHB2_GRP1_IsEnabledClock\n
 578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOEEN       LL_AHB2_GRP1_IsEnabledClock\n
 579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOFEN       LL_AHB2_GRP1_IsEnabledClock\n
 580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOGEN       LL_AHB2_GRP1_IsEnabledClock\n
 581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOHEN       LL_AHB2_GRP1_IsEnabledClock\n
 582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOIEN       LL_AHB2_GRP1_IsEnabledClock\n
 583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      OTGFSEN       LL_AHB2_GRP1_IsEnabledClock\n
 584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      ADCEN         LL_AHB2_GRP1_IsEnabledClock\n
 585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      DCMIEN        LL_AHB2_GRP1_IsEnabledClock\n
 586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      AESEN         LL_AHB2_GRP1_IsEnabledClock\n
 587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      HASHEN        LL_AHB2_GRP1_IsEnabledClock\n
 588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      RNGEN         LL_AHB2_GRP1_IsEnabledClock\n
 589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      OSPIMEN       LL_AHB2_GRP1_IsEnabledClock\n
 590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      SDMMC1EN      LL_AHB2_GRP1_IsEnabledClock
 591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOD (*)
 596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOE (*)
 597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOF (*)
 598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOG (*)
 599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOI (*)
 601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OTGFS (*)
 602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ADC
 603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DCMI (*)
 604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES (*)
 605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_HASH (*)
 606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OSPIM (*)
 608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_SDMMC1 (*)
 609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB2_GRP1_IsEnabledClock(uint32_t Periphs)
 614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   return ((READ_BIT(RCC->AHB2ENR, Periphs) == Periphs) ? 1UL : 0UL);
 616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Disable AHB2 peripherals clock.
 620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB2ENR      GPIOAEN       LL_AHB2_GRP1_DisableClock\n
 621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOBEN       LL_AHB2_GRP1_DisableClock\n
 622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOCEN       LL_AHB2_GRP1_DisableClock\n
 623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIODEN       LL_AHB2_GRP1_DisableClock\n
 624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOEEN       LL_AHB2_GRP1_DisableClock\n
 625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOFEN       LL_AHB2_GRP1_DisableClock\n
 626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOGEN       LL_AHB2_GRP1_DisableClock\n
 627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOHEN       LL_AHB2_GRP1_DisableClock\n
 628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      GPIOIEN       LL_AHB2_GRP1_DisableClock\n
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 66


 629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      OTGFSEN       LL_AHB2_GRP1_DisableClock\n
 630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      ADCEN         LL_AHB2_GRP1_DisableClock\n
 631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      DCMIEN        LL_AHB2_GRP1_DisableClock\n
 632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      AESEN         LL_AHB2_GRP1_DisableClock\n
 633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      HASHEN        LL_AHB2_GRP1_DisableClock\n
 634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      RNGEN         LL_AHB2_GRP1_DisableClock\n
 635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      OSPIMEN       LL_AHB2_GRP1_DisableClock\n
 636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2ENR      SDMMC1EN      LL_AHB2_GRP1_DisableClock
 637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOD (*)
 642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOE (*)
 643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOF (*)
 644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOG (*)
 645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOI (*)
 647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OTGFS (*)
 648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ADC
 649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DCMI (*)
 650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES (*)
 651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_HASH (*)
 652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OSPIM (*)
 654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_SDMMC1 (*)
 655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_DisableClock(uint32_t Periphs)
 660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB2ENR, Periphs);
 662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Force AHB2 peripherals reset.
 666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB2RSTR     GPIOARST      LL_AHB2_GRP1_ForceReset\n
 667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIOBRST      LL_AHB2_GRP1_ForceReset\n
 668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIOCRST      LL_AHB2_GRP1_ForceReset\n
 669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIODRST      LL_AHB2_GRP1_ForceReset\n
 670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIOERST      LL_AHB2_GRP1_ForceReset\n
 671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIOFRST      LL_AHB2_GRP1_ForceReset\n
 672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIOGRST      LL_AHB2_GRP1_ForceReset\n
 673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIOHRST      LL_AHB2_GRP1_ForceReset\n
 674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIOIRST      LL_AHB2_GRP1_ForceReset\n
 675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     OTGFSRST      LL_AHB2_GRP1_ForceReset\n
 676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     ADCRST        LL_AHB2_GRP1_ForceReset\n
 677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     DCMIRST       LL_AHB2_GRP1_ForceReset\n
 678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     AESRST        LL_AHB2_GRP1_ForceReset\n
 679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     HASHRST       LL_AHB2_GRP1_ForceReset\n
 680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     RNGRST        LL_AHB2_GRP1_ForceReset\n
 681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     OSPIMRST      LL_AHB2_GRP1_ForceReset\n
 682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     SDMMC1RST     LL_AHB2_GRP1_ForceReset
 683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ALL
 685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 67


 686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOD (*)
 689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOE (*)
 690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOF (*)
 691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOG (*)
 692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOI (*)
 694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OTGFS (*)
 695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ADC
 696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DCMI (*)
 697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES (*)
 698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_HASH (*)
 699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OSPIM (*)
 701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_SDMMC1 (*)
 702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_ForceReset(uint32_t Periphs)
 707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->AHB2RSTR, Periphs);
 709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Release AHB2 peripherals reset.
 713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB2RSTR     GPIOARST      LL_AHB2_GRP1_ReleaseReset\n
 714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIOBRST      LL_AHB2_GRP1_ReleaseReset\n
 715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIOCRST      LL_AHB2_GRP1_ReleaseReset\n
 716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIODRST      LL_AHB2_GRP1_ReleaseReset\n
 717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIOERST      LL_AHB2_GRP1_ReleaseReset\n
 718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIOFRST      LL_AHB2_GRP1_ReleaseReset\n
 719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIOGRST      LL_AHB2_GRP1_ReleaseReset\n
 720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIOHRST      LL_AHB2_GRP1_ReleaseReset\n
 721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     GPIOIRST      LL_AHB2_GRP1_ReleaseReset\n
 722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     OTGFSRST      LL_AHB2_GRP1_ReleaseReset\n
 723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     ADCRST        LL_AHB2_GRP1_ReleaseReset\n
 724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     DCMIRST       LL_AHB2_GRP1_ReleaseReset\n
 725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     AESRST        LL_AHB2_GRP1_ReleaseReset\n
 726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     HASHRST       LL_AHB2_GRP1_ReleaseReset\n
 727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     RNGRST        LL_AHB2_GRP1_ReleaseReset\n
 728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     OSPIMRST      LL_AHB2_GRP1_ReleaseReset\n
 729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2RSTR     SDMMC1RST     LL_AHB2_GRP1_ReleaseReset
 730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ALL
 732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOD (*)
 736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOE (*)
 737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOF (*)
 738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOG (*)
 739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOI (*)
 741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OTGFS (*)
 742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ADC
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 68


 743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DCMI (*)
 744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES (*)
 745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_HASH (*)
 746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OSPIM (*)
 748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_SDMMC1 (*)
 749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_ReleaseReset(uint32_t Periphs)
 754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB2RSTR, Periphs);
 756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Enable AHB2 peripheral clocks in Sleep and Stop modes
 760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB2SMENR    GPIOASMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIOBSMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIOCSMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIODSMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIOESMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIOFSMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIOGSMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIOHSMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIOISMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    SRAM2SMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    SRAM3SMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    OTGFSSMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    ADCSMEN       LL_AHB2_GRP1_EnableClockStopSleep\n
 773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    DCMISMEN      LL_AHB2_GRP1_EnableClockStopSleep\n
 774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    AESSMEN       LL_AHB2_GRP1_EnableClockStopSleep\n
 775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    HASHSMEN      LL_AHB2_GRP1_EnableClockStopSleep\n
 776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    RNGSMEN       LL_AHB2_GRP1_EnableClockStopSleep\n
 777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    OSPIMSMEN     LL_AHB2_GRP1_EnableClockStopSleep\n
 778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    SDMMC1SMEN    LL_AHB2_GRP1_EnableClockStopSleep
 779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOD (*)
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOE (*)
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOF (*)
 786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOG (*)
 787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOI (*)
 789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_SRAM2
 790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_SRAM3 (*)
 791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OTGFS (*)
 792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ADC
 793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DCMI (*)
 794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES (*)
 795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_HASH (*)
 796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OSPIM (*)
 798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_SDMMC1 (*)
 799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 69


 800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_EnableClockStopSleep(uint32_t Periphs)
 804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   __IO uint32_t tmpreg;
 806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->AHB2SMENR, Periphs);
 807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB2SMENR, Periphs);
 809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
 810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Disable AHB2 peripheral clocks in Sleep and Stop modes
 814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB2SMENR    GPIOASMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIOBSMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIOCSMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIODSMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIOESMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIOFSMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIOGSMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIOHSMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    GPIOISMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    SRAM2SMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    SRAM3SMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    OTGFSSMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    ADCSMEN       LL_AHB2_GRP1_DisableClockStopSleep\n
 827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    DCMISMEN      LL_AHB2_GRP1_DisableClockStopSleep\n
 828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    AESSMEN       LL_AHB2_GRP1_DisableClockStopSleep\n
 829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    HASHSMEN      LL_AHB2_GRP1_DisableClockStopSleep\n
 830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    RNGSMEN       LL_AHB2_GRP1_DisableClockStopSleep\n
 831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    OSPIMSMEN     LL_AHB2_GRP1_DisableClockStopSleep\n
 832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB2SMENR    SDMMC1SMEN    LL_AHB2_GRP1_DisableClockStopSleep
 833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOA
 835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOB
 836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
 837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOD (*)
 838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOE (*)
 839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOF (*)
 840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOG (*)
 841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
 842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOI (*)
 843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_SRAM2
 844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_SRAM3 (*)
 845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OTGFS (*)
 846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ADC
 847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DCMI (*)
 848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES (*)
 849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_HASH (*)
 850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OSPIM (*)
 852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_SDMMC1 (*)
 853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 70


 857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_DisableClockStopSleep(uint32_t Periphs)
 858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB2SMENR, Periphs);
 860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @}
 864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB3 AHB3
 867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
 868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
 869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Enable AHB3 peripherals clock.
 872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB3ENR      FMCEN         LL_AHB3_GRP1_EnableClock\n
 873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3ENR      QSPIEN        LL_AHB3_GRP1_EnableClock\n
 874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3ENR      OSPI1EN       LL_AHB3_GRP1_EnableClock\n
 875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3ENR      OSPI2EN       LL_AHB3_GRP1_EnableClock
 876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI (*)
 879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_OSPI1 (*)
 880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_OSPI2 (*)
 881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_EnableClock(uint32_t Periphs)
 886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   __IO uint32_t tmpreg;
 888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->AHB3ENR, Periphs);
 889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB3ENR, Periphs);
 891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
 892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Check if AHB3 peripheral clock is enabled or not
 896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB3ENR      FMCEN         LL_AHB3_GRP1_IsEnabledClock\n
 897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3ENR      QSPIEN        LL_AHB3_GRP1_IsEnabledClock\n
 898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3ENR      OSPI1EN       LL_AHB3_GRP1_IsEnabledClock\n
 899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3ENR      OSPI2EN       LL_AHB3_GRP1_IsEnabledClock
 900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI (*)
 903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_OSPI1 (*)
 904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_OSPI2 (*)
 905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB3_GRP1_IsEnabledClock(uint32_t Periphs)
 910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   return ((READ_BIT(RCC->AHB3ENR, Periphs) == Periphs) ? 1UL : 0UL);
 912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 71


 914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Disable AHB3 peripherals clock.
 916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB3ENR      FMCEN         LL_AHB3_GRP1_DisableClock\n
 917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3ENR      QSPIEN        LL_AHB3_GRP1_DisableClock\n
 918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3ENR      OSPI1EN       LL_AHB3_GRP1_DisableClock\n
 919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3ENR      OSPI2EN       LL_AHB3_GRP1_DisableClock
 920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI (*)
 923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_OSPI1 (*)
 924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_OSPI2 (*)
 925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_DisableClock(uint32_t Periphs)
 930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB3ENR, Periphs);
 932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Force AHB3 peripherals reset.
 936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB3RSTR     FMCRST        LL_AHB3_GRP1_ForceReset\n
 937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3RSTR     QSPIRST       LL_AHB3_GRP1_ForceReset\n
 938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3RSTR     OSPI1RST      LL_AHB3_GRP1_ForceReset\n
 939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3RSTR     OSPI2RST      LL_AHB3_GRP1_ForceReset
 940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_ALL
 942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI (*)
 944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_OSPI1 (*)
 945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_OSPI2 (*)
 946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_ForceReset(uint32_t Periphs)
 951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->AHB3RSTR, Periphs);
 953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Release AHB3 peripherals reset.
 957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB3RSTR     FMCRST        LL_AHB3_GRP1_ReleaseReset\n
 958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3RSTR     QSPIRST       LL_AHB3_GRP1_ReleaseReset\n
 959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3RSTR     OSPI1RST      LL_AHB3_GRP1_ReleaseReset\n
 960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3RSTR     OSPI2RST      LL_AHB3_GRP1_ReleaseReset
 961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ALL
 963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI (*)
 965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_OSPI1 (*)
 966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_OSPI2 (*)
 967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 72


 971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_ReleaseReset(uint32_t Periphs)
 972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB3RSTR, Periphs);
 974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
 976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
 977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Enable AHB3 peripheral clocks in Sleep and Stop modes
 978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB3SMENR    FMCSMEN       LL_AHB3_GRP1_EnableClockStopSleep\n
 979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3SMENR    QSPISMEN      LL_AHB3_GRP1_EnableClockStopSleep\n
 980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3SMENR    OSPI1SMEN     LL_AHB3_GRP1_EnableClockStopSleep\n
 981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3SMENR    OSPI2SMEN     LL_AHB3_GRP1_EnableClockStopSleep
 982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI (*)
 985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_OSPI1 (*)
 986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_OSPI2 (*)
 987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
 988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
 990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
 991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_EnableClockStopSleep(uint32_t Periphs)
 992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   __IO uint32_t tmpreg;
 994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->AHB3SMENR, Periphs);
 995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB3SMENR, Periphs);
 997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
 998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
1000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
1001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Disable AHB3 peripheral clocks in Sleep and Stop modes
1002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll AHB3SMENR    FMCSMEN       LL_AHB3_GRP1_DisableClockStopSleep\n
1003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3SMENR    QSPISMEN      LL_AHB3_GRP1_DisableClockStopSleep\n
1004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3SMENR    OSPI1SMEN     LL_AHB3_GRP1_DisableClockStopSleep\n
1005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         AHB3SMENR    OSPI2SMEN     LL_AHB3_GRP1_DisableClockStopSleep\n
1006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
1008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI (*)
1009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_OSPI1 (*)
1010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_OSPI2 (*)
1011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
1012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
1014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
1015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_DisableClockStopSleep(uint32_t Periphs)
1016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
1017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB3SMENR, Periphs);
1018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
1019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
1020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
1021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @}
1022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
1023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
1024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1 APB1
1025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
1026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
1027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 73


1028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
1029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock.
1030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll APB1ENR1     TIM2EN        LL_APB1_GRP1_EnableClock\n
1031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     TIM3EN        LL_APB1_GRP1_EnableClock\n
1032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     TIM4EN        LL_APB1_GRP1_EnableClock\n
1033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     TIM5EN        LL_APB1_GRP1_EnableClock\n
1034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     TIM6EN        LL_APB1_GRP1_EnableClock\n
1035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     TIM7EN        LL_APB1_GRP1_EnableClock\n
1036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     LCDEN         LL_APB1_GRP1_EnableClock\n
1037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     RTCAPBEN      LL_APB1_GRP1_EnableClock\n
1038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     WWDGEN        LL_APB1_GRP1_EnableClock\n
1039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     SPI2EN        LL_APB1_GRP1_EnableClock\n
1040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     SPI3EN        LL_APB1_GRP1_EnableClock\n
1041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     USART2EN      LL_APB1_GRP1_EnableClock\n
1042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     USART3EN      LL_APB1_GRP1_EnableClock\n
1043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     UART4EN       LL_APB1_GRP1_EnableClock\n
1044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     UART5EN       LL_APB1_GRP1_EnableClock\n
1045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     I2C1EN        LL_APB1_GRP1_EnableClock\n
1046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     I2C2EN        LL_APB1_GRP1_EnableClock\n
1047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     I2C3EN        LL_APB1_GRP1_EnableClock\n
1048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     CRSEN         LL_APB1_GRP1_EnableClock\n
1049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     CAN1EN        LL_APB1_GRP1_EnableClock\n
1050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     USBFSEN       LL_APB1_GRP1_EnableClock\n
1051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     CAN2EN        LL_APB1_GRP1_EnableClock\n
1052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     PWREN         LL_APB1_GRP1_EnableClock\n
1053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     DAC1EN        LL_APB1_GRP1_EnableClock\n
1054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     OPAMPEN       LL_APB1_GRP1_EnableClock\n
1055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     LPTIM1EN      LL_APB1_GRP1_EnableClock
1056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
1059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4 (*)
1060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
1061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
1062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
1063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
1064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB (*)
1065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
1066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
1067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
1068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
1070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
1071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
1072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
1074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
1076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1
1077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
1078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
1079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
1080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
1081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_OPAMP
1082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
1084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 74


1085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
1086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
1087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
1088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
1089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   __IO uint32_t tmpreg;
1090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR1, Periphs);
1091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
1092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR1, Periphs);
1093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
1094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
1095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
1096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
1097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock.
1098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll APB1ENR2     LPUART1EN     LL_APB1_GRP2_EnableClock\n
1099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR2     I2C4EN        LL_APB1_GRP2_EnableClock\n
1100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR2     SWPMI1EN      LL_APB1_GRP2_EnableClock\n
1101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR2     LPTIM2EN      LL_APB1_GRP2_EnableClock
1102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPUART1
1104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_I2C4 (*)
1105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SWPMI1 (*)
1106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM2
1107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
1108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
1110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
1111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_EnableClock(uint32_t Periphs)
1112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
1113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   __IO uint32_t tmpreg;
1114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR2, Periphs);
1115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
1116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR2, Periphs);
1117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
1118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
1119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
1120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
1121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not
1122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll APB1ENR1     TIM2EN        LL_APB1_GRP1_IsEnabledClock\n
1123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     TIM3EN        LL_APB1_GRP1_IsEnabledClock\n
1124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     TIM4EN        LL_APB1_GRP1_IsEnabledClock\n
1125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     TIM5EN        LL_APB1_GRP1_IsEnabledClock\n
1126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     TIM6EN        LL_APB1_GRP1_IsEnabledClock\n
1127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     TIM7EN        LL_APB1_GRP1_IsEnabledClock\n
1128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     LCDEN         LL_APB1_GRP1_IsEnabledClock\n
1129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     RTCAPBEN      LL_APB1_GRP1_IsEnabledClock\n
1130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     WWDGEN        LL_APB1_GRP1_IsEnabledClock\n
1131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     SPI2EN        LL_APB1_GRP1_IsEnabledClock\n
1132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     SPI3EN        LL_APB1_GRP1_IsEnabledClock\n
1133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     USART2EN      LL_APB1_GRP1_IsEnabledClock\n
1134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     USART3EN      LL_APB1_GRP1_IsEnabledClock\n
1135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     UART4EN       LL_APB1_GRP1_IsEnabledClock\n
1136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     UART5EN       LL_APB1_GRP1_IsEnabledClock\n
1137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     I2C1EN        LL_APB1_GRP1_IsEnabledClock\n
1138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     I2C2EN        LL_APB1_GRP1_IsEnabledClock\n
1139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     I2C3EN        LL_APB1_GRP1_IsEnabledClock\n
1140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     CRSEN         LL_APB1_GRP1_IsEnabledClock\n
1141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     CAN1EN        LL_APB1_GRP1_IsEnabledClock\n
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 75


1142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     USBFSEN       LL_APB1_GRP1_IsEnabledClock\n
1143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     CAN2EN        LL_APB1_GRP1_IsEnabledClock\n
1144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     PWREN         LL_APB1_GRP1_IsEnabledClock\n
1145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     DAC1EN        LL_APB1_GRP1_IsEnabledClock\n
1146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     OPAMPEN       LL_APB1_GRP1_IsEnabledClock\n
1147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     LPTIM1EN      LL_APB1_GRP1_IsEnabledClock
1148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
1151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4 (*)
1152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
1153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
1154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
1155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
1156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB (*)
1157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
1158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
1159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
1160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
1162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
1163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
1164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
1166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
1168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1
1169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
1170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
1171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
1172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
1173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_OPAMP
1174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
1176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
1178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
1179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP1_IsEnabledClock(uint32_t Periphs)
1180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
1181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   return ((READ_BIT(RCC->APB1ENR1, Periphs) == Periphs) ? 1UL : 0UL);
1182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
1183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
1184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
1185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not
1186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll APB1ENR2     LPUART1EN     LL_APB1_GRP2_IsEnabledClock\n
1187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR2     I2C4EN        LL_APB1_GRP2_IsEnabledClock\n
1188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR2     SWPMI1EN      LL_APB1_GRP2_IsEnabledClock\n
1189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR2     LPTIM2EN      LL_APB1_GRP2_IsEnabledClock
1190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPUART1
1192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_I2C4 (*)
1193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SWPMI1 (*)
1194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM2
1195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
1196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
1198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 76


1199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP2_IsEnabledClock(uint32_t Periphs)
1200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
1201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   return ((READ_BIT(RCC->APB1ENR2, Periphs) == Periphs) ? 1UL : 0UL);
1202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
1203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
1204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
1205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock.
1206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll APB1ENR1     TIM2EN        LL_APB1_GRP1_DisableClock\n
1207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     TIM3EN        LL_APB1_GRP1_DisableClock\n
1208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     TIM4EN        LL_APB1_GRP1_DisableClock\n
1209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     TIM5EN        LL_APB1_GRP1_DisableClock\n
1210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     TIM6EN        LL_APB1_GRP1_DisableClock\n
1211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     TIM7EN        LL_APB1_GRP1_DisableClock\n
1212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     LCDEN         LL_APB1_GRP1_DisableClock\n
1213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     RTCAPBEN      LL_APB1_GRP1_DisableClock\n
1214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     WWDGEN        LL_APB1_GRP1_DisableClock\n
1215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     SPI2EN        LL_APB1_GRP1_DisableClock\n
1216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     SPI3EN        LL_APB1_GRP1_DisableClock\n
1217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     USART2EN      LL_APB1_GRP1_DisableClock\n
1218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     USART3EN      LL_APB1_GRP1_DisableClock\n
1219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     UART4EN       LL_APB1_GRP1_DisableClock\n
1220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     UART5EN       LL_APB1_GRP1_DisableClock\n
1221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     I2C1EN        LL_APB1_GRP1_DisableClock\n
1222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     I2C2EN        LL_APB1_GRP1_DisableClock\n
1223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     I2C3EN        LL_APB1_GRP1_DisableClock\n
1224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     CRSEN         LL_APB1_GRP1_DisableClock\n
1225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     CAN1EN        LL_APB1_GRP1_DisableClock\n
1226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     USBFSEN       LL_APB1_GRP1_DisableClock\n
1227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     CAN2EN        LL_APB1_GRP1_DisableClock\n
1228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     PWREN         LL_APB1_GRP1_DisableClock\n
1229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     DAC1EN        LL_APB1_GRP1_DisableClock\n
1230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     OPAMPEN       LL_APB1_GRP1_DisableClock\n
1231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR1     LPTIM1EN      LL_APB1_GRP1_DisableClock
1232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
1235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4 (*)
1236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
1237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
1238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
1239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
1240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB (*)
1241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
1242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
1243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
1244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
1246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
1247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
1248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
1250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
1252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1
1253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
1254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
1255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 77


1256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
1257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_OPAMP
1258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
1260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
1262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
1263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClock(uint32_t Periphs)
1264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
1265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1ENR1, Periphs);
1266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
1267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
1268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
1269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock.
1270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll APB1ENR2     LPUART1EN     LL_APB1_GRP2_DisableClock\n
1271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR2     I2C4EN        LL_APB1_GRP2_DisableClock\n
1272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR2     SWPMI1EN      LL_APB1_GRP2_DisableClock\n
1273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1ENR2     LPTIM2EN      LL_APB1_GRP2_DisableClock
1274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPUART1
1276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_I2C4 (*)
1277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SWPMI1 (*)
1278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM2
1279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
1280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
1282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
1283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_DisableClock(uint32_t Periphs)
1284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
1285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1ENR2, Periphs);
1286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
1287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
1288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
1289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Force APB1 peripherals reset.
1290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll APB1RSTR1    TIM2RST       LL_APB1_GRP1_ForceReset\n
1291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    TIM3RST       LL_APB1_GRP1_ForceReset\n
1292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    TIM4RST       LL_APB1_GRP1_ForceReset\n
1293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    TIM5RST       LL_APB1_GRP1_ForceReset\n
1294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    TIM6RST       LL_APB1_GRP1_ForceReset\n
1295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    TIM7RST       LL_APB1_GRP1_ForceReset\n
1296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    LCDRST        LL_APB1_GRP1_ForceReset\n
1297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    SPI2RST       LL_APB1_GRP1_ForceReset\n
1298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    SPI3RST       LL_APB1_GRP1_ForceReset\n
1299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    USART2RST     LL_APB1_GRP1_ForceReset\n
1300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    USART3RST     LL_APB1_GRP1_ForceReset\n
1301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    UART4RST      LL_APB1_GRP1_ForceReset\n
1302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    UART5RST      LL_APB1_GRP1_ForceReset\n
1303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    I2C1RST       LL_APB1_GRP1_ForceReset\n
1304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    I2C2RST       LL_APB1_GRP1_ForceReset\n
1305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    I2C3RST       LL_APB1_GRP1_ForceReset\n
1306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    CRSRST        LL_APB1_GRP1_ForceReset\n
1307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    CAN1RST       LL_APB1_GRP1_ForceReset\n
1308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    USBFSRST      LL_APB1_GRP1_ForceReset\n
1309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    CAN2RST       LL_APB1_GRP1_ForceReset\n
1310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    PWRRST        LL_APB1_GRP1_ForceReset\n
1311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    DAC1RST       LL_APB1_GRP1_ForceReset\n
1312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    OPAMPRST      LL_APB1_GRP1_ForceReset\n
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 78


1313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    LPTIM1RST     LL_APB1_GRP1_ForceReset
1314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
1316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
1318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4 (*)
1319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
1320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
1321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
1322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
1323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
1324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
1325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
1327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
1328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
1329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
1331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
1333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1
1334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
1335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
1336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
1337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
1338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_OPAMP
1339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
1341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
1343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
1344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ForceReset(uint32_t Periphs)
1345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
1346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->APB1RSTR1, Periphs);
1347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
1348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
1349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
1350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Force APB1 peripherals reset.
1351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll APB1RSTR2    LPUART1RST    LL_APB1_GRP2_ForceReset\n
1352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR2    I2C4RST       LL_APB1_GRP2_ForceReset\n
1353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR2    SWPMI1RST     LL_APB1_GRP2_ForceReset\n
1354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR2    LPTIM2RST     LL_APB1_GRP2_ForceReset
1355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_ALL
1357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPUART1
1358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_I2C4 (*)
1359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SWPMI1 (*)
1360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM2
1361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
1362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
1364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
1365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_ForceReset(uint32_t Periphs)
1366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
1367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->APB1RSTR2, Periphs);
1368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
1369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 79


1370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
1371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Release APB1 peripherals reset.
1372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll APB1RSTR1    TIM2RST       LL_APB1_GRP1_ReleaseReset\n
1373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    TIM3RST       LL_APB1_GRP1_ReleaseReset\n
1374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    TIM4RST       LL_APB1_GRP1_ReleaseReset\n
1375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    TIM5RST       LL_APB1_GRP1_ReleaseReset\n
1376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    TIM6RST       LL_APB1_GRP1_ReleaseReset\n
1377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    TIM7RST       LL_APB1_GRP1_ReleaseReset\n
1378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    LCDRST        LL_APB1_GRP1_ReleaseReset\n
1379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    SPI2RST       LL_APB1_GRP1_ReleaseReset\n
1380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    SPI3RST       LL_APB1_GRP1_ReleaseReset\n
1381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    USART2RST     LL_APB1_GRP1_ReleaseReset\n
1382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    USART3RST     LL_APB1_GRP1_ReleaseReset\n
1383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    UART4RST      LL_APB1_GRP1_ReleaseReset\n
1384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    UART5RST      LL_APB1_GRP1_ReleaseReset\n
1385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    I2C1RST       LL_APB1_GRP1_ReleaseReset\n
1386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    I2C2RST       LL_APB1_GRP1_ReleaseReset\n
1387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    I2C3RST       LL_APB1_GRP1_ReleaseReset\n
1388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    CRSRST        LL_APB1_GRP1_ReleaseReset\n
1389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    CAN1RST       LL_APB1_GRP1_ReleaseReset\n
1390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    USBFSRST      LL_APB1_GRP1_ReleaseReset\n
1391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    CAN2RST       LL_APB1_GRP1_ReleaseReset\n
1392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    PWRRST        LL_APB1_GRP1_ReleaseReset\n
1393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    DAC1RST       LL_APB1_GRP1_ReleaseReset\n
1394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    OPAMPRST      LL_APB1_GRP1_ReleaseReset\n
1395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR1    LPTIM1RST     LL_APB1_GRP1_ReleaseReset
1396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
1398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
1400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4 (*)
1401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
1402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
1403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
1404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
1405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
1406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
1407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
1409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
1410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
1411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
1413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
1415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1
1416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
1417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
1418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
1419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
1420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_OPAMP
1421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
1423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
1425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
1426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ReleaseReset(uint32_t Periphs)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 80


1427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
1428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1RSTR1, Periphs);
1429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
1430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
1431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
1432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Release APB1 peripherals reset.
1433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll APB1RSTR2    LPUART1RST    LL_APB1_GRP2_ReleaseReset\n
1434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR2    I2C4RST       LL_APB1_GRP2_ReleaseReset\n
1435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR2    SWPMI1RST     LL_APB1_GRP2_ReleaseReset\n
1436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1RSTR2    LPTIM2RST     LL_APB1_GRP2_ReleaseReset
1437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_ALL
1439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPUART1
1440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_I2C4 (*)
1441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SWPMI1 (*)
1442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM2
1443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
1444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
1446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
1447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_ReleaseReset(uint32_t Periphs)
1448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
1449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1RSTR2, Periphs);
1450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
1451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
1452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
1453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Enable APB1 peripheral clocks in Sleep and Stop modes
1454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll APB1SMENR1   TIM2SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
1455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   TIM3SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
1456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   TIM4SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
1457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   TIM5SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
1458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   TIM6SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
1459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   TIM7SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
1460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   LCDSMEN       LL_APB1_GRP1_EnableClockStopSleep\n
1461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   RTCAPBSMEN    LL_APB1_GRP1_EnableClockStopSleep\n
1462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   WWDGSMEN      LL_APB1_GRP1_EnableClockStopSleep\n
1463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   SPI2SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
1464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   SPI3SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
1465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   USART2SMEN    LL_APB1_GRP1_EnableClockStopSleep\n
1466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   USART3SMEN    LL_APB1_GRP1_EnableClockStopSleep\n
1467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   UART4SMEN     LL_APB1_GRP1_EnableClockStopSleep\n
1468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   UART5SMEN     LL_APB1_GRP1_EnableClockStopSleep\n
1469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   I2C1SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
1470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   I2C2SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
1471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   I2C3SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
1472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   CRSSMEN       LL_APB1_GRP1_EnableClockStopSleep\n
1473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   CAN1SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
1474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   USBFSSMEN     LL_APB1_GRP1_EnableClockStopSleep\n
1475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   CAN2SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
1476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   PWRSMEN       LL_APB1_GRP1_EnableClockStopSleep\n
1477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   DAC1SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
1478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   OPAMPSMEN     LL_APB1_GRP1_EnableClockStopSleep\n
1479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   LPTIM1SMEN    LL_APB1_GRP1_EnableClockStopSleep
1480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
1483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4 (*)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 81


1484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
1485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
1486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
1487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
1488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB (*)
1489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
1490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
1491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
1492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
1494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
1495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
1496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
1498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
1500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1
1501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
1502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
1503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
1504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
1505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_OPAMP
1506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
1508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
1510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
1511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClockStopSleep(uint32_t Periphs)
1512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
1513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   __IO uint32_t tmpreg;
1514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->APB1SMENR1, Periphs);
1515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
1516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1SMENR1, Periphs);
1517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
1518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
1519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
1520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
1521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Enable APB1 peripheral clocks in Sleep and Stop modes
1522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll APB1SMENR2   LPUART1SMEN   LL_APB1_GRP2_EnableClockStopSleep\n
1523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR2   I2C4SMEN      LL_APB1_GRP2_EnableClockStopSleep\n
1524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR2   SWPMI1SMEN    LL_APB1_GRP2_EnableClockStopSleep\n
1525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR2   LPTIM2SMEN    LL_APB1_GRP2_EnableClockStopSleep
1526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPUART1
1528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_I2C4 (*)
1529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SWPMI1 (*)
1530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM2
1531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
1532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
1534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
1535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_EnableClockStopSleep(uint32_t Periphs)
1536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
1537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   __IO uint32_t tmpreg;
1538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->APB1SMENR2, Periphs);
1539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
1540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1SMENR2, Periphs);
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 82


1541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
1542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
1543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
1544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
1545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Disable APB1 peripheral clocks in Sleep and Stop modes
1546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll APB1SMENR1   TIM2SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
1547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   TIM3SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
1548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   TIM4SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
1549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   TIM5SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
1550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   TIM6SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
1551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   TIM7SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
1552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   LCDSMEN       LL_APB1_GRP1_DisableClockStopSleep\n
1553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   RTCAPBSMEN    LL_APB1_GRP1_DisableClockStopSleep\n
1554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   WWDGSMEN      LL_APB1_GRP1_DisableClockStopSleep\n
1555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   SPI2SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
1556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   SPI3SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
1557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   USART2SMEN    LL_APB1_GRP1_DisableClockStopSleep\n
1558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   USART3SMEN    LL_APB1_GRP1_DisableClockStopSleep\n
1559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   UART4SMEN     LL_APB1_GRP1_DisableClockStopSleep\n
1560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   UART5SMEN     LL_APB1_GRP1_DisableClockStopSleep\n
1561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   I2C1SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
1562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   I2C2SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
1563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   I2C3SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
1564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   CRSSMEN       LL_APB1_GRP1_DisableClockStopSleep\n
1565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   CAN1SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
1566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   USBFSSMEN     LL_APB1_GRP1_DisableClockStopSleep\n
1567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   CAN2SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
1568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   PWRSMEN       LL_APB1_GRP1_DisableClockStopSleep\n
1569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   DAC1SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
1570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   OPAMPSMEN     LL_APB1_GRP1_DisableClockStopSleep\n
1571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR1   LPTIM1SMEN    LL_APB1_GRP1_DisableClockStopSleep
1572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
1575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4 (*)
1576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
1577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
1578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
1579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
1580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB (*)
1581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
1582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
1583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
1584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
1586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
1587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
1588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
1590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
1592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1
1593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
1594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
1595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
1596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
1597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_OPAMP
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 83


1598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
1600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
1602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
1603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClockStopSleep(uint32_t Periphs)
1604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
1605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1SMENR1, Periphs);
1606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
1607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
1608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
1609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Disable APB1 peripheral clocks in Sleep and Stop modes
1610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll APB1SMENR2   LPUART1SMEN   LL_APB1_GRP2_DisableClockStopSleep\n
1611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR2   I2C4SMEN      LL_APB1_GRP2_DisableClockStopSleep\n
1612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR2   SWPMI1SMEN    LL_APB1_GRP2_DisableClockStopSleep\n
1613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB1SMENR2   LPTIM2SMEN    LL_APB1_GRP2_DisableClockStopSleep
1614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPUART1
1616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_I2C4 (*)
1617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SWPMI1 (*)
1618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM2
1619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
1620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
1622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
1623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_DisableClockStopSleep(uint32_t Periphs)
1624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
1625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1SMENR2, Periphs);
1626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
1627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
1628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
1629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @}
1630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
1631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
1632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB2 APB2
1633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @{
1634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   */
1635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** 
1636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** /**
1637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @brief  Enable APB2 peripherals clock.
1638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB2_GRP1_EnableClock\n
1639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB2ENR      FWEN          LL_APB2_GRP1_EnableClock\n
1640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB2ENR      SDMMC1EN      LL_APB2_GRP1_EnableClock\n
1641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB2ENR      TIM1EN        LL_APB2_GRP1_EnableClock\n
1642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_EnableClock\n
1643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB2ENR      TIM8EN        LL_APB2_GRP1_EnableClock\n
1644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_EnableClock\n
1645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB2ENR      TIM15EN       LL_APB2_GRP1_EnableClock\n
1646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB2ENR      TIM16EN       LL_APB2_GRP1_EnableClock\n
1647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB2ENR      TIM17EN       LL_APB2_GRP1_EnableClock\n
1648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB2ENR      SAI1EN        LL_APB2_GRP1_EnableClock\n
1649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB2ENR      SAI2EN        LL_APB2_GRP1_EnableClock\n
1650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB2ENR      DFSDM1EN      LL_APB2_GRP1_EnableClock\n
1651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB2ENR      LTDCEN        LL_APB2_GRP1_EnableClock\n
1652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         APB2ENR      DSIEN         LL_APB2_GRP1_EnableClock
1653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 84


1655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_FW
1656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SDMMC1 (*)
1657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM1
1658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
1659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM8 (*)
1660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1
1661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM15
1662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM16
1663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM17 (*)
1664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SAI1
1665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SAI2 (*)
1666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DFSDM1 (*)
1667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_LTDC (*)
1668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DSI (*)
1669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *
1670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
1671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   * @retval None
1672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** */
1673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
  78              		.loc 3 1673 22 view .LVU10
  79              	.LBB260:
1674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
1675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   __IO uint32_t tmpreg;
  80              		.loc 3 1675 3 view .LVU11
1676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
  81              		.loc 3 1676 3 view .LVU12
  82 0034 1A6E     		ldr	r2, [r3, #96]
  83 0036 42F48042 		orr	r2, r2, #16384
  84 003a 1A66     		str	r2, [r3, #96]
1677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
1678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
  85              		.loc 3 1678 3 view .LVU13
  86              		.loc 3 1678 12 is_stmt 0 view .LVU14
  87 003c 1A6E     		ldr	r2, [r3, #96]
  88 003e 02F48042 		and	r2, r2, #16384
  89              		.loc 3 1678 10 view .LVU15
  90 0042 0292     		str	r2, [sp, #8]
1679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
  91              		.loc 3 1679 3 is_stmt 1 view .LVU16
  92 0044 029A     		ldr	r2, [sp, #8]
  93              	.LVL2:
  94              		.loc 3 1679 3 is_stmt 0 view .LVU17
  95              	.LBE260:
  96              	.LBE259:
  50:Core/Src/usart.c **** 
  51:Core/Src/usart.c ****     LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOA);
  97              		.loc 1 51 5 is_stmt 1 view .LVU18
  98              	.LBB261:
  99              	.LBI261:
 563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 100              		.loc 3 563 22 view .LVU19
 101              	.LBB262:
 565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 102              		.loc 3 565 3 view .LVU20
 566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 103              		.loc 3 566 3 view .LVU21
 104 0046 DA6C     		ldr	r2, [r3, #76]
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 85


 105 0048 42F00102 		orr	r2, r2, #1
 106 004c DA64     		str	r2, [r3, #76]
 568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
 107              		.loc 3 568 3 view .LVU22
 568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
 108              		.loc 3 568 12 is_stmt 0 view .LVU23
 109 004e DB6C     		ldr	r3, [r3, #76]
 110 0050 03F00103 		and	r3, r3, #1
 568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
 111              		.loc 3 568 10 view .LVU24
 112 0054 0193     		str	r3, [sp, #4]
 569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 113              		.loc 3 569 3 is_stmt 1 view .LVU25
 114 0056 019B     		ldr	r3, [sp, #4]
 115              	.LVL3:
 569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 116              		.loc 3 569 3 is_stmt 0 view .LVU26
 117              	.LBE262:
 118              	.LBE261:
  52:Core/Src/usart.c ****     /**USART1 GPIO Configuration
  53:Core/Src/usart.c ****     PA9   ------> USART1_TX
  54:Core/Src/usart.c ****     PA10   ------> USART1_RX
  55:Core/Src/usart.c ****     */
  56:Core/Src/usart.c ****     GPIO_InitStruct.Pin = LL_GPIO_PIN_9 | LL_GPIO_PIN_10;
 119              		.loc 1 56 5 is_stmt 1 view .LVU27
 120              		.loc 1 56 25 is_stmt 0 view .LVU28
 121 0058 4FF4C063 		mov	r3, #1536
 122 005c 0393     		str	r3, [sp, #12]
  57:Core/Src/usart.c ****     GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 123              		.loc 1 57 5 is_stmt 1 view .LVU29
 124              		.loc 1 57 26 is_stmt 0 view .LVU30
 125 005e 0223     		movs	r3, #2
 126 0060 0493     		str	r3, [sp, #16]
  58:Core/Src/usart.c ****     GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_VERY_HIGH;
 127              		.loc 1 58 5 is_stmt 1 view .LVU31
 128              		.loc 1 58 27 is_stmt 0 view .LVU32
 129 0062 0323     		movs	r3, #3
 130 0064 0593     		str	r3, [sp, #20]
  59:Core/Src/usart.c ****     GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 131              		.loc 1 59 5 is_stmt 1 view .LVU33
  60:Core/Src/usart.c ****     GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 132              		.loc 1 60 5 view .LVU34
  61:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = LL_GPIO_AF_7;
 133              		.loc 1 61 5 view .LVU35
 134              		.loc 1 61 31 is_stmt 0 view .LVU36
 135 0066 0723     		movs	r3, #7
 136 0068 0893     		str	r3, [sp, #32]
  62:Core/Src/usart.c ****     LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 137              		.loc 1 62 5 is_stmt 1 view .LVU37
 138 006a 03A9     		add	r1, sp, #12
 139 006c 4FF09040 		mov	r0, #1207959552
 140 0070 FFF7FEFF 		bl	LL_GPIO_Init
 141              	.LVL4:
  63:Core/Src/usart.c **** 
  64:Core/Src/usart.c ****     /* USART1 DMA Init */
  65:Core/Src/usart.c **** 
  66:Core/Src/usart.c ****     /* USART1_RX Init */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 86


  67:Core/Src/usart.c ****     LL_DMA_SetPeriphRequest(DMA1, LL_DMA_CHANNEL_5, LL_DMA_REQUEST_2);
 142              		.loc 1 67 5 view .LVU38
 143              	.LBB263:
 144              	.LBI263:
 145              		.file 4 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h"
   1:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @file    stm32l4xx_ll_dma.h
   4:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief   Header file of DMA LL module.
   6:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   ******************************************************************************
   7:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @attention
   8:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *
   9:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * Copyright (c) 2017 STMicroelectronics.
  10:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * All rights reserved.
  11:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *
  12:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * in the root directory of this software component.
  14:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *
  16:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   ******************************************************************************
  17:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
  18:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
  19:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #ifndef STM32L4xx_LL_DMA_H
  21:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define STM32L4xx_LL_DMA_H
  22:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
  23:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #ifdef __cplusplus
  24:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** extern "C" {
  25:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #endif
  26:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
  27:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #include "stm32l4xx.h"
  29:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #if defined(DMAMUX1)
  30:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #include "stm32l4xx_ll_dmamux.h"
  31:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #endif /* DMAMUX1 */
  32:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
  33:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /** @addtogroup STM32L4xx_LL_Driver
  34:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @{
  35:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
  36:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
  37:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #if defined (DMA1) || defined (DMA2)
  38:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
  39:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL DMA
  40:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @{
  41:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
  42:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
  43:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /* Private types -------------------------------------------------------------*/
  44:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /* Private variables ---------------------------------------------------------*/
  45:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Variables DMA Private Variables
  46:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @{
  47:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
  48:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /* Array used to get the DMA channel register offset versus channel index LL_DMA_CHANNEL_x */
  49:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** static const uint8_t CHANNEL_OFFSET_TAB[] =
  50:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
  51:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel1_BASE - DMA1_BASE),
  52:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel2_BASE - DMA1_BASE),
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 87


  53:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel3_BASE - DMA1_BASE),
  54:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel4_BASE - DMA1_BASE),
  55:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel5_BASE - DMA1_BASE),
  56:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel6_BASE - DMA1_BASE),
  57:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel7_BASE - DMA1_BASE)
  58:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** };
  59:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
  60:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @}
  61:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
  62:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
  63:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /* Private constants ---------------------------------------------------------*/
  64:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #if defined(DMAMUX1)
  65:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #else
  66:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Constants DMA Private Constants
  67:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @{
  68:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
  69:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /* Define used to get CSELR register offset */
  70:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define DMA_CSELR_OFFSET                  (uint32_t)(DMA1_CSELR_BASE - DMA1_BASE)
  71:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
  72:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /* Defines used for the bit position in the register and perform offsets */
  73:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define DMA_POSITION_CSELR_CXS            POSITION_VAL(DMA_CSELR_C1S << (Channel*4U))
  74:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
  75:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @}
  76:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
  77:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #endif /* DMAMUX1 */
  78:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /* Private macros ------------------------------------------------------------*/
  79:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #if defined(DMAMUX1)
  80:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
  81:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Macros DMA Private Macros
  82:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @{
  83:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
  84:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
  85:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Helper macro to convert DMA Instance DMAx into DMAMUX channel
  86:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @note   DMAMUX channel 0 to 6 are mapped to DMA1 channel 1 to 7.
  87:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         DMAMUX channel 7 to 13 are mapped to DMA2 channel 1 to 7.
  88:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  __DMA_INSTANCE__ DMAx
  89:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval Channel_Offset (LL_DMA_CHANNEL_7 or 0).
  90:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
  91:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define __LL_DMA_INSTANCE_TO_DMAMUX_CHANNEL(__DMA_INSTANCE__)   \
  92:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** (((__DMA_INSTANCE__) == DMA1) ? 0x00000000U : LL_DMA_CHANNEL_7)
  93:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
  94:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
  95:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @}
  96:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
  97:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #else
  98:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
  99:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Macros DMA Private Macros
 100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @{
 101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @}
 104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #endif /* DMAMUX1 */
 107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /* Exported types ------------------------------------------------------------*/
 108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
 109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_ES_INIT DMA Exported Init structure
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 88


 110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @{
 111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** typedef struct
 113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcAddress;  /*!< Specifies the peripheral base address for DMA transfer
 115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         or as Source base address in case of memory to memory trans
 116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
 118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t MemoryOrM2MDstAddress;  /*!< Specifies the memory base address for DMA transfer
 120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         or as Destination base address in case of memory to memory 
 121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
 123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t Direction;              /*!< Specifies if the data will be transferred from memory to pe
 125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         from memory to memory or from peripheral to memory.
 126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_DIRECTION
 127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t Mode;                   /*!< Specifies the normal or circular operation mode.
 131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MODE
 132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         @note: The circular buffer mode cannot be used if the memor
 133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                                data transfer direction is configured on the selecte
 134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcIncMode;  /*!< Specifies whether the Peripheral address or Source address 
 138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         is incremented or not.
 139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PERIPH
 140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t MemoryOrM2MDstIncMode;  /*!< Specifies whether the Memory address or Destination address
 144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         is incremented or not.
 145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MEMORY
 146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcDataSize; /*!< Specifies the Peripheral data size alignment or Source data
 150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         in case of memory to memory transfer direction.
 151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PDATAALIGN
 152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t MemoryOrM2MDstDataSize; /*!< Specifies the Memory data size alignment or Destination dat
 156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         in case of memory to memory transfer direction.
 157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MDATAALIGN
 158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t NbData;                 /*!< Specifies the number of data to transfer, in data unit.
 162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         The data unit is equal to the source buffer configuration s
 163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         or MemorySize parameters depending in the transfer directio
 164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
 165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 89


 167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #if defined(DMAMUX1)
 169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t PeriphRequest;          /*!< Specifies the peripheral request.
 170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMAMUX_LL_EC_REQUEST
 171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #else
 174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t PeriphRequest;          /*!< Specifies the peripheral request.
 175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_REQUEST
 176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #endif /* DMAMUX1 */
 179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t Priority;               /*!< Specifies the channel priority level.
 181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PRIORITY
 182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** } LL_DMA_InitTypeDef;
 186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @}
 188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /* Exported constants --------------------------------------------------------*/
 192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Constants DMA Exported Constants
 193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @{
 194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_CLEAR_FLAG Clear Flags Defines
 196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief    Flags defines which can be used with LL_DMA_WriteReg function
 197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @{
 198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF1                 DMA_IFCR_CGIF1        /*!< Channel 1 global flag         
 200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF1                DMA_IFCR_CTCIF1       /*!< Channel 1 transfer complete fl
 201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF1                DMA_IFCR_CHTIF1       /*!< Channel 1 half transfer flag  
 202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF1                DMA_IFCR_CTEIF1       /*!< Channel 1 transfer error flag 
 203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF2                 DMA_IFCR_CGIF2        /*!< Channel 2 global flag         
 204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF2                DMA_IFCR_CTCIF2       /*!< Channel 2 transfer complete fl
 205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF2                DMA_IFCR_CHTIF2       /*!< Channel 2 half transfer flag  
 206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF2                DMA_IFCR_CTEIF2       /*!< Channel 2 transfer error flag 
 207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF3                 DMA_IFCR_CGIF3        /*!< Channel 3 global flag         
 208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF3                DMA_IFCR_CTCIF3       /*!< Channel 3 transfer complete fl
 209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF3                DMA_IFCR_CHTIF3       /*!< Channel 3 half transfer flag  
 210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF3                DMA_IFCR_CTEIF3       /*!< Channel 3 transfer error flag 
 211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF4                 DMA_IFCR_CGIF4        /*!< Channel 4 global flag         
 212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF4                DMA_IFCR_CTCIF4       /*!< Channel 4 transfer complete fl
 213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF4                DMA_IFCR_CHTIF4       /*!< Channel 4 half transfer flag  
 214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF4                DMA_IFCR_CTEIF4       /*!< Channel 4 transfer error flag 
 215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF5                 DMA_IFCR_CGIF5        /*!< Channel 5 global flag         
 216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF5                DMA_IFCR_CTCIF5       /*!< Channel 5 transfer complete fl
 217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF5                DMA_IFCR_CHTIF5       /*!< Channel 5 half transfer flag  
 218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF5                DMA_IFCR_CTEIF5       /*!< Channel 5 transfer error flag 
 219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF6                 DMA_IFCR_CGIF6        /*!< Channel 6 global flag         
 220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF6                DMA_IFCR_CTCIF6       /*!< Channel 6 transfer complete fl
 221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF6                DMA_IFCR_CHTIF6       /*!< Channel 6 half transfer flag  
 222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF6                DMA_IFCR_CTEIF6       /*!< Channel 6 transfer error flag 
 223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF7                 DMA_IFCR_CGIF7        /*!< Channel 7 global flag         
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 90


 224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF7                DMA_IFCR_CTCIF7       /*!< Channel 7 transfer complete fl
 225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF7                DMA_IFCR_CHTIF7       /*!< Channel 7 half transfer flag  
 226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF7                DMA_IFCR_CTEIF7       /*!< Channel 7 transfer error flag 
 227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @}
 229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_GET_FLAG Get Flags Defines
 232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief    Flags defines which can be used with LL_DMA_ReadReg function
 233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @{
 234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_GIF1                   DMA_ISR_GIF1          /*!< Channel 1 global flag         
 236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF1                  DMA_ISR_TCIF1         /*!< Channel 1 transfer complete fl
 237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF1                  DMA_ISR_HTIF1         /*!< Channel 1 half transfer flag  
 238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF1                  DMA_ISR_TEIF1         /*!< Channel 1 transfer error flag 
 239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_GIF2                   DMA_ISR_GIF2          /*!< Channel 2 global flag         
 240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF2                  DMA_ISR_TCIF2         /*!< Channel 2 transfer complete fl
 241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF2                  DMA_ISR_HTIF2         /*!< Channel 2 half transfer flag  
 242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF2                  DMA_ISR_TEIF2         /*!< Channel 2 transfer error flag 
 243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_GIF3                   DMA_ISR_GIF3          /*!< Channel 3 global flag         
 244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF3                  DMA_ISR_TCIF3         /*!< Channel 3 transfer complete fl
 245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF3                  DMA_ISR_HTIF3         /*!< Channel 3 half transfer flag  
 246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF3                  DMA_ISR_TEIF3         /*!< Channel 3 transfer error flag 
 247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_GIF4                   DMA_ISR_GIF4          /*!< Channel 4 global flag         
 248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF4                  DMA_ISR_TCIF4         /*!< Channel 4 transfer complete fl
 249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF4                  DMA_ISR_HTIF4         /*!< Channel 4 half transfer flag  
 250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF4                  DMA_ISR_TEIF4         /*!< Channel 4 transfer error flag 
 251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_GIF5                   DMA_ISR_GIF5          /*!< Channel 5 global flag         
 252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF5                  DMA_ISR_TCIF5         /*!< Channel 5 transfer complete fl
 253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF5                  DMA_ISR_HTIF5         /*!< Channel 5 half transfer flag  
 254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF5                  DMA_ISR_TEIF5         /*!< Channel 5 transfer error flag 
 255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_GIF6                   DMA_ISR_GIF6          /*!< Channel 6 global flag         
 256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF6                  DMA_ISR_TCIF6         /*!< Channel 6 transfer complete fl
 257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF6                  DMA_ISR_HTIF6         /*!< Channel 6 half transfer flag  
 258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF6                  DMA_ISR_TEIF6         /*!< Channel 6 transfer error flag 
 259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_GIF7                   DMA_ISR_GIF7          /*!< Channel 7 global flag         
 260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF7                  DMA_ISR_TCIF7         /*!< Channel 7 transfer complete fl
 261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF7                  DMA_ISR_HTIF7         /*!< Channel 7 half transfer flag  
 262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF7                  DMA_ISR_TEIF7         /*!< Channel 7 transfer error flag 
 263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @}
 265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_IT IT Defines
 268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief    IT defines which can be used with LL_DMA_ReadReg and  LL_DMA_WriteReg functions
 269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @{
 270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_CCR_TCIE                   DMA_CCR_TCIE          /*!< Transfer complete interrupt */
 272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_CCR_HTIE                   DMA_CCR_HTIE          /*!< Half Transfer interrupt     */
 273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_CCR_TEIE                   DMA_CCR_TEIE          /*!< Transfer error interrupt    */
 274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @}
 276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_CHANNEL CHANNEL
 279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @{
 280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 91


 281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_CHANNEL_1                  0x00000000U /*!< DMA Channel 1 */
 282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_CHANNEL_2                  0x00000001U /*!< DMA Channel 2 */
 283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_CHANNEL_3                  0x00000002U /*!< DMA Channel 3 */
 284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_CHANNEL_4                  0x00000003U /*!< DMA Channel 4 */
 285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_CHANNEL_5                  0x00000004U /*!< DMA Channel 5 */
 286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_CHANNEL_6                  0x00000005U /*!< DMA Channel 6 */
 287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_CHANNEL_7                  0x00000006U /*!< DMA Channel 7 */
 288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
 289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_CHANNEL_ALL                0xFFFF0000U /*!< DMA Channel all (used only for function 
 290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @}
 293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_DIRECTION Transfer Direction
 296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @{
 297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_DIRECTION_PERIPH_TO_MEMORY 0x00000000U             /*!< Peripheral to memory directi
 299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_DIRECTION_MEMORY_TO_PERIPH DMA_CCR_DIR             /*!< Memory to peripheral directi
 300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_DIRECTION_MEMORY_TO_MEMORY DMA_CCR_MEM2MEM         /*!< Memory to memory direction  
 301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @}
 303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MODE Transfer mode
 306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @{
 307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_MODE_NORMAL                0x00000000U             /*!< Normal Mode                 
 309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_MODE_CIRCULAR              DMA_CCR_CIRC            /*!< Circular Mode               
 310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @}
 312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PERIPH Peripheral increment mode
 315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @{
 316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_PERIPH_INCREMENT           DMA_CCR_PINC            /*!< Peripheral increment mode En
 318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_PERIPH_NOINCREMENT         0x00000000U             /*!< Peripheral increment mode Di
 319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @}
 321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MEMORY Memory increment mode
 324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @{
 325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_MEMORY_INCREMENT           DMA_CCR_MINC            /*!< Memory increment mode Enable
 327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_MEMORY_NOINCREMENT         0x00000000U             /*!< Memory increment mode Disabl
 328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @}
 330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PDATAALIGN Peripheral data alignment
 333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @{
 334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_BYTE            0x00000000U             /*!< Peripheral data alignment : 
 336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_HALFWORD        DMA_CCR_PSIZE_0         /*!< Peripheral data alignment : 
 337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_WORD            DMA_CCR_PSIZE_1         /*!< Peripheral data alignment : 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 92


 338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @}
 340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MDATAALIGN Memory data alignment
 343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @{
 344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_BYTE            0x00000000U             /*!< Memory data alignment : Byte
 346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_HALFWORD        DMA_CCR_MSIZE_0         /*!< Memory data alignment : Half
 347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_WORD            DMA_CCR_MSIZE_1         /*!< Memory data alignment : Word
 348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @}
 350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PRIORITY Transfer Priority level
 353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @{
 354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_PRIORITY_LOW               0x00000000U             /*!< Priority level : Low       *
 356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_PRIORITY_MEDIUM            DMA_CCR_PL_0            /*!< Priority level : Medium    *
 357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_PRIORITY_HIGH              DMA_CCR_PL_1            /*!< Priority level : High      *
 358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_PRIORITY_VERYHIGH          DMA_CCR_PL              /*!< Priority level : Very_High *
 359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @}
 361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #if !defined  (DMAMUX1)
 364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_REQUEST Transfer peripheral request
 365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @{
 366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_REQUEST_0                  0x00000000U /*!< DMA peripheral request 0  */
 368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_REQUEST_1                  0x00000001U /*!< DMA peripheral request 1  */
 369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_REQUEST_2                  0x00000002U /*!< DMA peripheral request 2  */
 370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_REQUEST_3                  0x00000003U /*!< DMA peripheral request 3  */
 371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_REQUEST_4                  0x00000004U /*!< DMA peripheral request 4  */
 372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_REQUEST_5                  0x00000005U /*!< DMA peripheral request 5  */
 373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_REQUEST_6                  0x00000006U /*!< DMA peripheral request 6  */
 374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_REQUEST_7                  0x00000007U /*!< DMA peripheral request 7  */
 375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @}
 377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #endif /* !defined DMAMUX1 */
 379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @}
 381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /* Exported macro ------------------------------------------------------------*/
 384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Macros DMA Exported Macros
 385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @{
 386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EM_WRITE_READ Common Write and read registers macros
 389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @{
 390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Write a value in DMA register
 393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  __INSTANCE__ DMA Instance
 394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  __REG__ Register to be written
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 93


 395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  __VALUE__ Value to be written in the register
 396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
 397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Read a value in DMA register
 402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  __INSTANCE__ DMA Instance
 403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  __REG__ Register to be read
 404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval Register value
 405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define LL_DMA_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @}
 409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EM_CONVERT_DMAxCHANNELy Convert DMAxChannely
 412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @{
 413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Convert DMAx_Channely into DMAx
 416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  __CHANNEL_INSTANCE__ DMAx_Channely
 417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval DMAx
 418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #if defined(DMA2)
 420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define __LL_DMA_GET_INSTANCE(__CHANNEL_INSTANCE__)   \
 421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) > ((uint32_t)DMA1_Channel7)) ?  DMA2 : DMA1)
 422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #else
 423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define __LL_DMA_GET_INSTANCE(__CHANNEL_INSTANCE__)  (DMA1)
 424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #endif
 425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Convert DMAx_Channely into LL_DMA_CHANNEL_y
 428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  __CHANNEL_INSTANCE__ DMAx_Channely
 429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval LL_DMA_CHANNEL_y
 430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #if defined (DMA2)
 432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #if defined (DMA2_Channel6) && defined (DMA2_Channel7)
 433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel1)) ? LL_DMA_CHANNEL_1 : \
 436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel2)) ? LL_DMA_CHANNEL_2 : \
 438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel3)) ? LL_DMA_CHANNEL_3 : \
 440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel4)) ? LL_DMA_CHANNEL_4 : \
 442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel5)) ? LL_DMA_CHANNEL_5 : \
 444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel6)) ? LL_DMA_CHANNEL_6 : \
 445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel6)) ? LL_DMA_CHANNEL_6 : \
 446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  LL_DMA_CHANNEL_7)
 447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #else
 448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel1)) ? LL_DMA_CHANNEL_1 : \
 451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 94


 452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel2)) ? LL_DMA_CHANNEL_2 : \
 453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel3)) ? LL_DMA_CHANNEL_3 : \
 455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel4)) ? LL_DMA_CHANNEL_4 : \
 457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel5)) ? LL_DMA_CHANNEL_5 : \
 459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel6)) ? LL_DMA_CHANNEL_6 : \
 460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  LL_DMA_CHANNEL_7)
 461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #endif
 462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #else
 463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel6)) ? LL_DMA_CHANNEL_6 : \
 470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  LL_DMA_CHANNEL_7)
 471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #endif
 472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Convert DMA Instance DMAx and LL_DMA_CHANNEL_y into DMAx_Channely
 475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  __DMA_INSTANCE__ DMAx
 476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  __CHANNEL__ LL_DMA_CHANNEL_y
 477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval DMAx_Channely
 478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #if defined (DMA2)
 480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #if defined (DMA2_Channel6) && defined (DMA2_Channel7)
 481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  DMA2_Channel7)
 496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #else
 497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 95


 509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  DMA1_Channel7)
 510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #endif
 511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #else
 512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  DMA1_Channel7)
 520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #endif
 521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @}
 524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @}
 528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /* Exported functions --------------------------------------------------------*/
 531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Functions DMA Exported Functions
 532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  * @{
 533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****  */
 534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EF_Configuration Configuration
 536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @{
 537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Enable DMA channel.
 540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_EnableChannel
 541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
 551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_EnableChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   SET_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_EN);
 556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Disable DMA channel.
 560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_DisableChannel
 561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 96


 566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
 571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_DisableChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   CLEAR_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_EN
 576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Check if DMA channel is enabled or disabled.
 580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_IsEnabledChannel
 581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
 591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsEnabledChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                   DMA_CCR_EN) == (DMA_CCR_EN)) ? 1UL : 0UL);
 597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Configure all parameters link to DMA transfer.
 601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_ConfigTransfer\n
 602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_ConfigTransfer\n
 603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         CCR          CIRC          LL_DMA_ConfigTransfer\n
 604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         CCR          PINC          LL_DMA_ConfigTransfer\n
 605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         CCR          MINC          LL_DMA_ConfigTransfer\n
 606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         CCR          PSIZE         LL_DMA_ConfigTransfer\n
 607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         CCR          MSIZE         LL_DMA_ConfigTransfer\n
 608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         CCR          PL            LL_DMA_ConfigTransfer
 609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Configuration This parameter must be a combination of all the following values:
 619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY or @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH o
 620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL or @ref LL_DMA_MODE_CIRCULAR
 621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT or @ref LL_DMA_PERIPH_NOINCREMENT
 622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT or @ref LL_DMA_MEMORY_NOINCREMENT
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 97


 623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE or @ref LL_DMA_PDATAALIGN_HALFWORD or @ref LL_DMA_PDAT
 624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE or @ref LL_DMA_MDATAALIGN_HALFWORD or @ref LL_DMA_MDAT
 625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW or @ref LL_DMA_PRIORITY_MEDIUM or @ref LL_DMA_PRIORITY_HI
 626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
 627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ConfigTransfer(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Configurat
 629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM | DMA_CCR_CIRC | DMA_CCR_PINC | DMA_CCR_MINC | DMA_CCR_P
 633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              Configuration);
 634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Set Data transfer direction (read from peripheral or from memory).
 638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_SetDataTransferDirection\n
 639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_SetDataTransferDirection
 640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Direction This parameter can be one of the following values:
 650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
 654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetDataTransferDirection(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t 
 656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Data transfer direction (read from peripheral or from memory).
 664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_GetDataTransferDirection\n
 665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_GetDataTransferDirection
 666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 98


 680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetDataTransferDirection(DMA_TypeDef *DMAx, uint32_t Channel)
 681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                    DMA_CCR_DIR | DMA_CCR_MEM2MEM));
 685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Set DMA mode circular or normal.
 689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @note The circular buffer mode cannot be used if the memory-to-memory
 690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * data transfer is configured on the selected Channel.
 691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          CIRC          LL_DMA_SetMode
 692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Mode This parameter can be one of the following values:
 702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL
 703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_CIRCULAR
 704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
 705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Mode)
 707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_C
 710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              Mode);
 711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get DMA mode circular or normal.
 715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          CIRC          LL_DMA_GetMode
 716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL
 727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_CIRCULAR
 728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMode(DMA_TypeDef *DMAx, uint32_t Channel)
 730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                    DMA_CCR_CIRC));
 734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 99


 737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Set Peripheral increment mode.
 738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          PINC          LL_DMA_SetPeriphIncMode
 739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  PeriphOrM2MSrcIncMode This parameter can be one of the following values:
 749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT
 750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
 751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
 752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphIncMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphOr
 754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     uint32_t dma_base_addr = (uint32_t)DMAx;
 756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR
 757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Peripheral increment mode.
 762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          PINC          LL_DMA_GetPeriphIncMode
 763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT
 774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
 775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphIncMode(DMA_TypeDef *DMAx, uint32_t Channel)
 777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                    DMA_CCR_PINC));
 781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Set Memory increment mode.
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          MINC          LL_DMA_SetMemoryIncMode
 786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 100


 794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  MemoryOrM2MDstIncMode This parameter can be one of the following values:
 796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT
 797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
 798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
 799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemoryIncMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryOr
 801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_M
 804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Memory increment mode.
 809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          MINC          LL_DMA_GetMemoryIncMode
 810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT
 821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
 822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemoryIncMode(DMA_TypeDef *DMAx, uint32_t Channel)
 824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                    DMA_CCR_MINC));
 828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Set Peripheral size.
 832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          PSIZE         LL_DMA_SetPeriphSize
 833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  PeriphOrM2MSrcDataSize This parameter can be one of the following values:
 843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE
 844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
 845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_WORD
 846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
 847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphSize(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphOrM2M
 849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 101


 851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_P
 852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Peripheral size.
 857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          PSIZE         LL_DMA_GetPeriphSize
 858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE
 869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
 870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_WORD
 871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphSize(DMA_TypeDef *DMAx, uint32_t Channel)
 873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                    DMA_CCR_PSIZE));
 877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Set Memory size.
 881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          MSIZE         LL_DMA_SetMemorySize
 882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  MemoryOrM2MDstDataSize This parameter can be one of the following values:
 892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE
 893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
 894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_WORD
 895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
 896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemorySize(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryOrM2M
 898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_M
 901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Memory size.
 906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          MSIZE         LL_DMA_GetMemorySize
 907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 102


 908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE
 918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
 919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_WORD
 920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemorySize(DMA_TypeDef *DMAx, uint32_t Channel)
 922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                    DMA_CCR_MSIZE));
 926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Set Channel priority level.
 930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          PL            LL_DMA_SetChannelPriorityLevel
 931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Priority This parameter can be one of the following values:
 941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW
 942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_MEDIUM
 943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_HIGH
 944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_VERYHIGH
 945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
 946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetChannelPriorityLevel(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t P
 948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_P
 951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              Priority);
 952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel priority level.
 956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          PL            LL_DMA_GetChannelPriorityLevel
 957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 103


 965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW
 968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_MEDIUM
 969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_HIGH
 970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_VERYHIGH
 971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetChannelPriorityLevel(DMA_TypeDef *DMAx, uint32_t Channel)
 973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                    DMA_CCR_PL));
 977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
 979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
 980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Set Number of data to transfer.
 981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @note   This action has no effect if
 982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         channel is enabled.
 983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CNDTR        NDT           LL_DMA_SetDataLength
 984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  NbData Between Min_Data = 0 and Max_Data = 0x0000FFFF
 994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
 995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
 996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetDataLength(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t NbData)
 997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CNDTR,
1000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              DMA_CNDTR_NDT, NbData);
1001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Number of data to transfer.
1005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @note   Once the channel is enabled, the return value indicate the
1006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         remaining bytes to be transmitted.
1007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CNDTR        NDT           LL_DMA_GetDataLength
1008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetDataLength(DMA_TypeDef *DMAx, uint32_t Channel)
1020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 104


1022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CNDTR,
1023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                    DMA_CNDTR_NDT));
1024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Configure the Source and Destination addresses.
1028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @note   Each peripheral using DMA provides an API to get directly the register address (LL_PPP_
1030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_ConfigAddresses\n
1031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         CMAR         MA            LL_DMA_ConfigAddresses
1032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  SrcAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DstAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Direction This parameter can be one of the following values:
1044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
1045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
1046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
1047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
1048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ConfigAddresses(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t SrcAddres
1050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                                             uint32_t DstAddress, uint32_t Direction)
1051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   /* Direction Memory to Periph */
1054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   if (Direction == LL_DMA_DIRECTION_MEMORY_TO_PERIPH)
1055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   {
1056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CMAR, SrcAddr
1057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CPAR, DstAddr
1058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   }
1059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   /* Direction Periph to Memory and Memory to Memory */
1060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   else
1061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   {
1062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CPAR, SrcAddr
1063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CMAR, DstAddr
1064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   }
1065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Set the Memory address.
1069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_SetMemoryAddress
1072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 105


1079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
1083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemoryAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
1085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CMAR, MemoryAdd
1088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Set the Peripheral address.
1092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_SetPeriphAddress
1095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  PeriphAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
1106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphAd
1108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CPAR, PeriphAdd
1111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Memory address.
1115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_GetMemoryAddress
1117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemoryAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CMAR));
1132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Peripheral address.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 106


1136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_GetPeriphAddress
1138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CPAR));
1153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Set the Memory to Memory Source address.
1157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_SetM2MSrcAddress
1160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
1171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetM2MSrcAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
1173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CPAR, MemoryAdd
1176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Set the Memory to Memory Destination address.
1180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_SetM2MDstAddress
1183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 107


1193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
1194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetM2MDstAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
1196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CMAR, MemoryAdd
1199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get the Memory to Memory Source address.
1203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_GetM2MSrcAddress
1205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetM2MSrcAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CPAR));
1220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get the Memory to Memory Destination address.
1224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_GetM2MDstAddress
1226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetM2MDstAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CMAR));
1241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #if defined(DMAMUX1)
1244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Set DMA request for DMA Channels on DMAMUX Channel x.
1246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @note   DMAMUX channel 0 to 6 are mapped to DMA1 channel 1 to 7.
1247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         DMAMUX channel 7 to 13 are mapped to DMA2 channel 1 to 7.
1248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CxCR         DMAREQ_ID     LL_DMA_SetPeriphRequest
1249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 108


1250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Request This parameter can be one of the following values:
1259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_MEM2MEM
1260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR0
1261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR1
1262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR2
1263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR3
1264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_ADC1
1265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_ADC2
1266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DAC1_CH1
1267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DAC1_CH2
1268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM6_UP
1269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM7_UP
1270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI1_RX
1271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI1_TX
1272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI2_RX
1273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI2_TX
1274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI3_RX
1275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI3_TX
1276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C1_RX
1277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C1_TX
1278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C2_RX
1279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C2_TX
1280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C3_RX
1281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C3_TX
1282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C4_RX
1283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C4_TX
1284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART1_RX
1285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART1_TX
1286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART2_RX
1287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART2_TX
1288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART3_RX
1289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART3_TX
1290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UART4_RX
1291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UART4_TX
1292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UART5_RX
1293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UART5_TX
1294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_LPUART1_RX
1295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_LPUART1_TX
1296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SAI1_A
1297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SAI1_B
1298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SAI2_A
1299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SAI2_B
1300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_OSPI1
1301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_OSPI2
1302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH1
1303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH2
1304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH3
1305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH4
1306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_UP
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 109


1307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_TRIG
1308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_COM
1309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_CH1
1310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_CH2
1311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_CH3
1312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_CH4
1313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_UP
1314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_TRIG
1315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_COM
1316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH1
1317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH2
1318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH3
1319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH4
1320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_UP
1321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_CH1
1322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_CH2
1323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_CH3
1324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_CH4
1325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_UP
1326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_TRIG
1327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM4_CH1
1328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM4_CH2
1329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM4_CH3
1330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM4_CH4
1331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM4_UP
1332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_CH1
1333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_CH2
1334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_CH3
1335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_CH4
1336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_UP
1337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_TRIG
1338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM15_CH1
1339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM15_UP
1340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM15_TRIG
1341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM15_COM
1342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM16_CH1
1343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM16_UP
1344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM17_CH1
1345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM17_UP
1346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DFSDM1_FLT0
1347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DFSDM1_FLT1
1348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DFSDM1_FLT2
1349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DFSDM1_FLT3
1350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DCMI
1351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DCMI_PSSI
1352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_AES_IN
1353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_AES_OUT
1354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_HASH_IN
1355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
1356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphRequest(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Request)
1358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dmamux_ccr_offset = ((((uint32_t)DMAx ^ (uint32_t)DMA1) >> 10U) * 7U);
1360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   MODIFY_REG((DMAMUX1_Channel0 + Channel + dmamux_ccr_offset)->CCR, DMAMUX_CxCR_DMAREQ_ID, Request)
1361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 110


1364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get DMA request for DMA Channels on DMAMUX Channel x.
1365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @note   DMAMUX channel 0 to 6 are mapped to DMA1 channel 1 to 7.
1366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         DMAMUX channel 7 to 13 are mapped to DMA2 channel 1 to 7.
1367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CxCR         DMAREQ_ID     LL_DMA_GetPeriphRequest
1368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
1378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_MEM2MEM
1379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR0
1380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR1
1381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR2
1382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR3
1383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_ADC1
1384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_ADC2
1385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DAC1_CH1
1386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DAC1_CH2
1387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM6_UP
1388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM7_UP
1389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI1_RX
1390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI1_TX
1391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI2_RX
1392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI2_TX
1393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI3_RX
1394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI3_TX
1395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C1_RX
1396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C1_TX
1397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C2_RX
1398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C2_TX
1399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C3_RX
1400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C3_TX
1401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C4_RX
1402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C4_TX
1403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART1_RX
1404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART1_TX
1405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART2_RX
1406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART2_TX
1407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART3_RX
1408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART3_TX
1409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UART4_RX
1410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UART4_TX
1411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UART5_RX
1412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UART5_TX
1413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_LPUART1_RX
1414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_LPUART1_TX
1415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SAI1_A
1416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SAI1_B
1417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SAI2_A
1418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SAI2_B
1419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_OSPI1
1420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_OSPI2
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 111


1421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH1
1422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH2
1423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH3
1424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH4
1425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_UP
1426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_TRIG
1427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_COM
1428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_CH1
1429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_CH2
1430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_CH3
1431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_CH4
1432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_UP
1433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_TRIG
1434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_COM
1435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH1
1436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH2
1437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH3
1438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH4
1439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_UP
1440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_CH1
1441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_CH2
1442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_CH3
1443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_CH4
1444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_UP
1445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_TRIG
1446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM4_CH1
1447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM4_CH2
1448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM4_CH3
1449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM4_CH4
1450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM4_UP
1451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_CH1
1452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_CH2
1453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_CH3
1454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_CH4
1455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_UP
1456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_TRIG
1457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM15_CH1
1458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM15_UP
1459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM15_TRIG
1460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM15_COM
1461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM16_CH1
1462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM16_UP
1463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM17_CH1
1464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM17_UP
1465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DFSDM1_FLT0
1466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DFSDM1_FLT1
1467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DFSDM1_FLT2
1468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DFSDM1_FLT3
1469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DCMI
1470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DCMI_PSSI
1471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_AES_IN
1472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_AES_OUT
1473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_HASH_IN
1474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphRequest(DMA_TypeDef *DMAx, uint32_t Channel)
1476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dmamux_ccr_offset = ((((uint32_t)DMAx ^ (uint32_t)DMA1) >> 10U) * 7U);
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 112


1478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return (READ_BIT((DMAMUX1_Channel0 + Channel + dmamux_ccr_offset)->CCR, DMAMUX_CxCR_DMAREQ_ID));
1479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #else
1482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Set DMA request for DMA instance on Channel x.
1484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @note   Please refer to Reference Manual to get the available mapping of Request value link to 
1485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CSELR        C1S           LL_DMA_SetPeriphRequest\n
1486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         CSELR        C2S           LL_DMA_SetPeriphRequest\n
1487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         CSELR        C3S           LL_DMA_SetPeriphRequest\n
1488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         CSELR        C4S           LL_DMA_SetPeriphRequest\n
1489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         CSELR        C5S           LL_DMA_SetPeriphRequest\n
1490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         CSELR        C6S           LL_DMA_SetPeriphRequest\n
1491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         CSELR        C7S           LL_DMA_SetPeriphRequest
1492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  PeriphRequest This parameter can be one of the following values:
1502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_0
1503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_1
1504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_2
1505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_3
1506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_4
1507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_5
1508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_6
1509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_7
1510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
1511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphRequest(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphRe
 146              		.loc 4 1512 22 view .LVU39
 147              	.LBB264:
1513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Request_TypeDef *)((uint32_t)((uint32_t)DMAx + DMA_CSELR_OFFSET)))->CSELR,
 148              		.loc 4 1514 3 view .LVU40
 149 0074 634B     		ldr	r3, .L10
 150 0076 D3F8A820 		ldr	r2, [r3, #168]
 151 007a 22F47022 		bic	r2, r2, #983040
 152              	.LVL5:
 153              	.LBB265:
 154              	.LBI265:
 155              		.file 5 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 113


  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 114


  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 115


 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 116


 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 117


 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 118


 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 119


 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 120


 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 121


 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 122


 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 123


 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 124


 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 125


 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 126


 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 127


 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 128


 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 129


 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 959:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 967:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 969:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 976:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 130


 980:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 981:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1010:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
1027:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1028:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1032:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 131


1037:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1047:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 156              		.loc 5 1048 31 view .LVU41
 157              	.LBB266:
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1050:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 158              		.loc 5 1050 3 view .LVU42
1051:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 159              		.loc 5 1055 4 view .LVU43
 160 007e 4FF47023 		mov	r3, #983040
 161              		.syntax unified
 162              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 163 0082 93FAA3F3 		rbit r3, r3
 164              	@ 0 "" 2
 165              	.LVL6:
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1062:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1068:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 166              		.loc 5 1068 3 view .LVU44
 167              		.loc 5 1068 3 is_stmt 0 view .LVU45
 168              		.thumb
 169              		.syntax unified
 170              	.LBE266:
 171              	.LBE265:
 172              	.LBB267:
 173              	.LBI267:
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 132


1076:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 174              		.loc 5 1078 30 is_stmt 1 view .LVU46
 175              	.LBB268:
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 176              		.loc 5 1089 3 view .LVU47
 177              		.loc 5 1089 6 is_stmt 0 view .LVU48
 178 0086 002B     		cmp	r3, #0
 179 0088 00F0B780 		beq	.L7
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
1092:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1093:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 180              		.loc 5 1093 3 is_stmt 1 view .LVU49
 181              		.loc 5 1093 10 is_stmt 0 view .LVU50
 182 008c B3FA83F3 		clz	r3, r3
 183              	.LVL7:
 184              	.L2:
 185              		.loc 5 1093 10 view .LVU51
 186              	.LBE268:
 187              	.LBE267:
 188              		.loc 4 1514 3 view .LVU52
 189 0090 0221     		movs	r1, #2
 190 0092 01FA03F3 		lsl	r3, r1, r3
 191 0096 1A43     		orrs	r2, r2, r3
 192 0098 5A4B     		ldr	r3, .L10
 193 009a C3F8A820 		str	r2, [r3, #168]
 194              	.LVL8:
 195              		.loc 4 1514 3 view .LVU53
 196              	.LBE264:
 197              	.LBE263:
  68:Core/Src/usart.c ****     LL_DMA_SetDataTransferDirection(DMA1, LL_DMA_CHANNEL_5, LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
 198              		.loc 1 68 5 is_stmt 1 view .LVU54
 199              	.LBB272:
 200              	.LBI272:
 655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 201              		.loc 4 655 22 view .LVU55
 202              	.LBB273:
 657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 203              		.loc 4 657 3 view .LVU56
 658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 204              		.loc 4 658 3 view .LVU57
 205 009e 9A6D     		ldr	r2, [r3, #88]
 206 00a0 22F48042 		bic	r2, r2, #16384
 207 00a4 22F01002 		bic	r2, r2, #16
 208 00a8 9A65     		str	r2, [r3, #88]
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 133


 209              	.LVL9:
 658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 210              		.loc 4 658 3 is_stmt 0 view .LVU58
 211              	.LBE273:
 212              	.LBE272:
  69:Core/Src/usart.c ****     LL_DMA_SetChannelPriorityLevel(DMA1, LL_DMA_CHANNEL_5, LL_DMA_PRIORITY_LOW);
 213              		.loc 1 69 5 is_stmt 1 view .LVU59
 214              	.LBB274:
 215              	.LBI274:
 947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 216              		.loc 4 947 22 view .LVU60
 217              	.LBB275:
 949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_P
 218              		.loc 4 949 3 view .LVU61
 950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              Priority);
 219              		.loc 4 950 3 view .LVU62
 220 00aa 9A6D     		ldr	r2, [r3, #88]
 221 00ac 22F44052 		bic	r2, r2, #12288
 222 00b0 9A65     		str	r2, [r3, #88]
 223              	.LVL10:
 950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              Priority);
 224              		.loc 4 950 3 is_stmt 0 view .LVU63
 225              	.LBE275:
 226              	.LBE274:
  70:Core/Src/usart.c ****     LL_DMA_SetMode(DMA1, LL_DMA_CHANNEL_5, LL_DMA_MODE_NORMAL);
 227              		.loc 1 70 5 is_stmt 1 view .LVU64
 228              	.LBB276:
 229              	.LBI276:
 706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 230              		.loc 4 706 22 view .LVU65
 231              	.LBB277:
 708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_C
 232              		.loc 4 708 3 view .LVU66
 709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              Mode);
 233              		.loc 4 709 3 view .LVU67
 234 00b2 9A6D     		ldr	r2, [r3, #88]
 235 00b4 22F02002 		bic	r2, r2, #32
 236 00b8 9A65     		str	r2, [r3, #88]
 237              	.LVL11:
 709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              Mode);
 238              		.loc 4 709 3 is_stmt 0 view .LVU68
 239              	.LBE277:
 240              	.LBE276:
  71:Core/Src/usart.c ****     LL_DMA_SetPeriphIncMode(DMA1, LL_DMA_CHANNEL_5, LL_DMA_PERIPH_NOINCREMENT);
 241              		.loc 1 71 5 is_stmt 1 view .LVU69
 242              	.LBB278:
 243              	.LBI278:
 753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 244              		.loc 4 753 22 view .LVU70
 245              	.LBB279:
 755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR
 246              		.loc 4 755 5 view .LVU71
 756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 247              		.loc 4 756 5 view .LVU72
 248 00ba 9A6D     		ldr	r2, [r3, #88]
 249 00bc 22F04002 		bic	r2, r2, #64
 250 00c0 9A65     		str	r2, [r3, #88]
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 134


 251              	.LVL12:
 756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 252              		.loc 4 756 5 is_stmt 0 view .LVU73
 253              	.LBE279:
 254              	.LBE278:
  72:Core/Src/usart.c ****     LL_DMA_SetMemoryIncMode(DMA1, LL_DMA_CHANNEL_5, LL_DMA_MEMORY_INCREMENT);
 255              		.loc 1 72 5 is_stmt 1 view .LVU74
 256              	.LBB280:
 257              	.LBI280:
 800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 258              		.loc 4 800 22 view .LVU75
 259              	.LBB281:
 802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_M
 260              		.loc 4 802 3 view .LVU76
 803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 261              		.loc 4 803 3 view .LVU77
 262 00c2 9A6D     		ldr	r2, [r3, #88]
 263 00c4 42F08002 		orr	r2, r2, #128
 264 00c8 9A65     		str	r2, [r3, #88]
 265              	.LVL13:
 803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 266              		.loc 4 803 3 is_stmt 0 view .LVU78
 267              	.LBE281:
 268              	.LBE280:
  73:Core/Src/usart.c ****     LL_DMA_SetPeriphSize(DMA1, LL_DMA_CHANNEL_5, LL_DMA_PDATAALIGN_BYTE);
 269              		.loc 1 73 5 is_stmt 1 view .LVU79
 270              	.LBB282:
 271              	.LBI282:
 848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 272              		.loc 4 848 22 view .LVU80
 273              	.LBB283:
 850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_P
 274              		.loc 4 850 3 view .LVU81
 851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 275              		.loc 4 851 3 view .LVU82
 276 00ca 9A6D     		ldr	r2, [r3, #88]
 277 00cc 22F44072 		bic	r2, r2, #768
 278 00d0 9A65     		str	r2, [r3, #88]
 279              	.LVL14:
 851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 280              		.loc 4 851 3 is_stmt 0 view .LVU83
 281              	.LBE283:
 282              	.LBE282:
  74:Core/Src/usart.c ****     LL_DMA_SetMemorySize(DMA1, LL_DMA_CHANNEL_5, LL_DMA_MDATAALIGN_BYTE);
 283              		.loc 1 74 5 is_stmt 1 view .LVU84
 284              	.LBB284:
 285              	.LBI284:
 897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 286              		.loc 4 897 22 view .LVU85
 287              	.LBB285:
 899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_M
 288              		.loc 4 899 3 view .LVU86
 900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 289              		.loc 4 900 3 view .LVU87
 290 00d2 9A6D     		ldr	r2, [r3, #88]
 291 00d4 22F44062 		bic	r2, r2, #3072
 292 00d8 9A65     		str	r2, [r3, #88]
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 135


 293              	.LVL15:
 900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 294              		.loc 4 900 3 is_stmt 0 view .LVU88
 295              	.LBE285:
 296              	.LBE284:
  75:Core/Src/usart.c ****     LL_DMA_SetPeriphAddress(DMA1, LL_DMA_CHANNEL_5, LL_USART_DMA_GetRegAddr(USART1, LL_USART_DMA_RE
 297              		.loc 1 75 5 is_stmt 1 view .LVU89
 298              	.LBB286:
 299              	.LBI286:
 300              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h"
   1:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @file    stm32l4xx_ll_usart.h
   4:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief   Header file of USART LL module.
   6:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ******************************************************************************
   7:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @attention
   8:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *
   9:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * Copyright (c) 2017 STMicroelectronics.
  10:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * All rights reserved.
  11:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *
  12:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * in the root directory of this software component.
  14:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *
  16:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ******************************************************************************
  17:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
  18:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  19:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #ifndef STM32L4xx_LL_USART_H
  21:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define STM32L4xx_LL_USART_H
  22:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  23:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #ifdef __cplusplus
  24:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** extern "C" {
  25:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif
  26:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  27:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #include "stm32l4xx.h"
  29:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  30:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @addtogroup STM32L4xx_LL_Driver
  31:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
  32:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
  33:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  34:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined (USART1) || defined (USART2) || defined (USART3) || defined (UART4) || defined (UART5)
  35:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  36:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL USART
  37:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
  38:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
  39:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  40:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
  43:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_Private_Variables USART Private Variables
  44:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
  45:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
  46:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Array used to get the USART prescaler division decimal values versus @ref USART_LL_EC_PRESCALER 
  47:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** static const uint32_t USART_PRESCALER_TAB[] =
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 136


  48:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
  49:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   1UL,
  50:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   2UL,
  51:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   4UL,
  52:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   6UL,
  53:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   8UL,
  54:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   10UL,
  55:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   12UL,
  56:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   16UL,
  57:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   32UL,
  58:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   64UL,
  59:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   128UL,
  60:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   256UL
  61:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** };
  62:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
  63:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
  64:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
  65:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
  66:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  67:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Private constants ---------------------------------------------------------*/
  68:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Private macros ------------------------------------------------------------*/
  69:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  70:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_Private_Macros USART Private Macros
  71:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
  72:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
  73:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
  74:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
  75:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
  76:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
  77:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  78:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Exported types ------------------------------------------------------------*/
  79:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  80:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_ES_INIT USART Exported Init structures
  81:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
  82:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
  83:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  84:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
  85:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief LL USART Init Structure definition
  86:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
  87:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** typedef struct
  88:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
  89:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
  90:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t PrescalerValue;            /*!< Specifies the Prescaler to compute the communication bau
  91:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PRESCA
  92:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  93:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
  94:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            function @ref LL_USART_SetPrescaler().*/
  95:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
  96:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  97:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t BaudRate;                  /*!< This field defines expected Usart communication baud rat
  98:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
  99:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
 100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            function @ref LL_USART_SetBaudRate().*/
 101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t DataWidth;                 /*!< Specifies the number of data bits transmitted or receive
 103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DATAWI
 104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 137


 105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
 106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            function @ref LL_USART_SetDataWidth().*/
 107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t StopBits;                  /*!< Specifies the number of stop bits transmitted.
 109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_STOPBI
 110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
 112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            function @ref LL_USART_SetStopBitsLength().*/
 113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t Parity;                    /*!< Specifies the parity mode.
 115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PARITY
 116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
 118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            function @ref LL_USART_SetParity().*/
 119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t TransferDirection;         /*!< Specifies whether the Receive and/or Transmit mode is en
 121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DIRECT
 122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
 124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            function @ref LL_USART_SetTransferDirection().*/
 125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t HardwareFlowControl;       /*!< Specifies whether the hardware flow control mode is enab
 127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_HWCONT
 128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
 130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            function @ref LL_USART_SetHWFlowCtrl().*/
 131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t OverSampling;              /*!< Specifies whether USART oversampling mode is 16 or 8.
 133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_OVERSA
 134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
 136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            function @ref LL_USART_SetOverSampling().*/
 137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** } LL_USART_InitTypeDef;
 139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief LL USART Clock Init Structure definition
 142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** typedef struct
 144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t ClockOutput;               /*!< Specifies whether the USART clock is enabled or disabled
 146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_CLOCK.
 147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            @ref LL_USART_EnableSCLKOutput() or @ref LL_USART_Disabl
 150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            For more details, refer to description of this function.
 151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t ClockPolarity;             /*!< Specifies the steady state of the serial clock.
 153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_POLARI
 154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            functions @ref LL_USART_SetClockPolarity().
 157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            For more details, refer to description of this function.
 158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t ClockPhase;                /*!< Specifies the clock transition on which the bit capture 
 160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PHASE.
 161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 138


 162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            functions @ref LL_USART_SetClockPhase().
 164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            For more details, refer to description of this function.
 165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t LastBitClockPulse;         /*!< Specifies whether the clock pulse corresponding to the l
 167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            data bit (MSB) has to be output on the SCLK pin in synch
 168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_LASTCL
 169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            functions @ref LL_USART_SetLastClkPulseOutput().
 172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                            For more details, refer to description of this function.
 173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** } LL_USART_ClockInitTypeDef;
 175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USE_FULL_LL_DRIVER */
 180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Exported constants --------------------------------------------------------*/
 182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Constants USART Exported Constants
 183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_CLEAR_FLAG Clear Flags Defines
 187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief    Flags defines which can be used with LL_USART_WriteReg function
 188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_PECF                       USART_ICR_PECF                /*!< Parity error cle
 191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_FECF                       USART_ICR_FECF                /*!< Framing error cl
 192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_NECF                       USART_ICR_NECF                /*!< Noise error dete
 193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_ORECF                      USART_ICR_ORECF               /*!< Overrun error cl
 194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_IDLECF                     USART_ICR_IDLECF              /*!< Idle line detect
 195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_TXFECF                     USART_ICR_TXFECF              /*!< TX FIFO Empty cl
 197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_TCCF                       USART_ICR_TCCF                /*!< Transmission com
 199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_TCBGT_SUPPORT)
 200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_TCBGTCF                    USART_ICR_TCBGTCF             /*!< Transmission com
 201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_TCBGT_SUPPORT */
 202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_LBDCF                      USART_ICR_LBDCF               /*!< LIN break detect
 203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_CTSCF                      USART_ICR_CTSCF               /*!< CTS clear flag *
 204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_RTOCF                      USART_ICR_RTOCF               /*!< Receiver timeout
 205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_EOBCF                      USART_ICR_EOBCF               /*!< End of block cle
 206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR2_SLVEN)
 207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_UDRCF                      USART_ICR_UDRCF               /*!< SPI Slave Underr
 208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR2_SLVEN */
 209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_CMCF                       USART_ICR_CMCF                /*!< Character match 
 210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ICR_WUCF                       USART_ICR_WUCF                /*!< Wakeup from Stop
 211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_GET_FLAG Get Flags Defines
 216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief    Flags defines which can be used with LL_USART_ReadReg function
 217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 139


 219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_PE                         USART_ISR_PE                  /*!< Parity error fla
 220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_FE                         USART_ISR_FE                  /*!< Framing error fl
 221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_NE                         USART_ISR_NE                  /*!< Noise detected f
 222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_ORE                        USART_ISR_ORE                 /*!< Overrun error fl
 223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_IDLE                       USART_ISR_IDLE                /*!< Idle line detect
 224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_RXNE_RXFNE                 USART_ISR_RXNE_RXFNE          /*!< Read data regist
 226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
 227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_RXNE                       USART_ISR_RXNE                /*!< Read data regist
 228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_TC                         USART_ISR_TC                  /*!< Transmission com
 230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_TXE_TXFNF                  USART_ISR_TXE_TXFNF           /*!< Transmit data re
 232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
 233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_TXE                        USART_ISR_TXE                 /*!< Transmit data re
 234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_LBDF                       USART_ISR_LBDF                /*!< LIN break detect
 236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_CTSIF                      USART_ISR_CTSIF               /*!< CTS interrupt fl
 237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_CTS                        USART_ISR_CTS                 /*!< CTS flag */
 238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_RTOF                       USART_ISR_RTOF                /*!< Receiver timeout
 239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_EOBF                       USART_ISR_EOBF                /*!< End of block fla
 240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR2_SLVEN)
 241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_UDR                        USART_ISR_UDR                 /*!< SPI Slave underr
 242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR2_SLVEN */
 243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_ABRE                       USART_ISR_ABRE                /*!< Auto baud rate e
 244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_ABRF                       USART_ISR_ABRF                /*!< Auto baud rate f
 245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_BUSY                       USART_ISR_BUSY                /*!< Busy flag */
 246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_CMF                        USART_ISR_CMF                 /*!< Character match 
 247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_SBKF                       USART_ISR_SBKF                /*!< Send break flag 
 248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_RWU                        USART_ISR_RWU                 /*!< Receiver wakeup 
 249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_WUF                        USART_ISR_WUF                 /*!< Wakeup from Stop
 250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_TEACK                      USART_ISR_TEACK               /*!< Transmit enable 
 251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_REACK                      USART_ISR_REACK               /*!< Receive enable a
 252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_TXFE                       USART_ISR_TXFE                /*!< TX FIFO empty fl
 254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_RXFF                       USART_ISR_RXFF                /*!< RX FIFO full fla
 255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_TCBGT_SUPPORT)
 257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_TCBGT                      USART_ISR_TCBGT               /*!< Transmission com
 258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_TCBGT_SUPPORT */
 259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_RXFT                       USART_ISR_RXFT                /*!< RX FIFO threshol
 261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ISR_TXFT                       USART_ISR_TXFT                /*!< TX FIFO threshol
 262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_IT IT Defines
 268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief    IT defines which can be used with LL_USART_ReadReg and  LL_USART_WriteReg functions
 269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_IDLEIE                     USART_CR1_IDLEIE              /*!< IDLE interrupt e
 272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_RXNEIE_RXFNEIE             USART_CR1_RXNEIE_RXFNEIE      /*!< Read data regist
 274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
 275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_RXNEIE                     USART_CR1_RXNEIE              /*!< Read data regist
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 140


 276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_TCIE                       USART_CR1_TCIE                /*!< Transmission com
 278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_TXEIE_TXFNFIE              USART_CR1_TXEIE_TXFNFIE       /*!< Transmit data re
 280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
 281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_TXEIE                      USART_CR1_TXEIE               /*!< Transmit data re
 282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_PEIE                       USART_CR1_PEIE                /*!< Parity error */
 284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_CMIE                       USART_CR1_CMIE                /*!< Character match 
 285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_RTOIE                      USART_CR1_RTOIE               /*!< Receiver timeout
 286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_EOBIE                      USART_CR1_EOBIE               /*!< End of Block int
 287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_TXFEIE                     USART_CR1_TXFEIE              /*!< TX FIFO empty in
 289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR1_RXFFIE                     USART_CR1_RXFFIE              /*!< RX FIFO full int
 290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR2_LBDIE                      USART_CR2_LBDIE               /*!< LIN break detect
 292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR3_EIE                        USART_CR3_EIE                 /*!< Error interrupt 
 293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR3_CTSIE                      USART_CR3_CTSIE               /*!< CTS interrupt en
 294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR3_WUFIE                      USART_CR3_WUFIE               /*!< Wakeup from Stop
 295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR3_TXFTIE                     USART_CR3_TXFTIE              /*!< TX FIFO threshol
 297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_TCBGT_SUPPORT)
 299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR3_TCBGTIE                    USART_CR3_TCBGTIE             /*!< Transmission com
 300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_TCBGT_SUPPORT */
 301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CR3_RXFTIE                     USART_CR3_RXFTIE              /*!< RX FIFO threshol
 303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_FIFOTHRESHOLD FIFO Threshold
 310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_1_8              0x00000000U /*!< FIFO reaches 1/8 of its depth */
 313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_1_4              0x00000001U /*!< FIFO reaches 1/4 of its depth */
 314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_1_2              0x00000002U /*!< FIFO reaches 1/2 of its depth */
 315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_3_4              0x00000003U /*!< FIFO reaches 3/4 of its depth */
 316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_7_8              0x00000004U /*!< FIFO reaches 7/8 of its depth */
 317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_8_8              0x00000005U /*!< FIFO becomes empty for TX and full
 318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_DIRECTION Communication Direction
 324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DIRECTION_NONE                 0x00000000U                        /*!< Transmitter
 327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DIRECTION_RX                   USART_CR1_RE                       /*!< Transmitter
 328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DIRECTION_TX                   USART_CR1_TE                       /*!< Transmitter
 329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DIRECTION_TX_RX                (USART_CR1_TE |USART_CR1_RE)       /*!< Transmitter
 330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 141


 333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_PARITY Parity Control
 335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PARITY_NONE                    0x00000000U                          /*!< Parity co
 338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PARITY_EVEN                    USART_CR1_PCE                        /*!< Parity co
 339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PARITY_ODD                     (USART_CR1_PCE | USART_CR1_PS)       /*!< Parity co
 340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_WAKEUP Wakeup
 345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_WAKEUP_IDLELINE                0x00000000U           /*!<  USART wake up from Mute
 348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_WAKEUP_ADDRESSMARK             USART_CR1_WAKE        /*!<  USART wake up from Mute
 349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_DATAWIDTH Datawidth
 354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DATAWIDTH_7B                   USART_CR1_M1            /*!< 7 bits word length : S
 357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DATAWIDTH_8B                   0x00000000U             /*!< 8 bits word length : S
 358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DATAWIDTH_9B                   USART_CR1_M0            /*!< 9 bits word length : S
 359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_OVERSAMPLING Oversampling
 364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_16                0x00000000U            /*!< Oversampling by 16 */
 367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_8                 USART_CR1_OVER8        /*!< Oversampling by 8 */
 368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
 373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_CLOCK Clock Signal
 374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CLOCK_DISABLE                  0x00000000U            /*!< Clock signal not provid
 378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_CLOCK_ENABLE                   USART_CR2_CLKEN        /*!< Clock signal provided *
 379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
 383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_LASTCLKPULSE Last Clock Pulse
 385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_NO_OUTPUT         0x00000000U           /*!< The clock pulse of the l
 388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_OUTPUT            USART_CR2_LBCL        /*!< The clock pulse of the l
 389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 142


 390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_PHASE Clock Phase
 394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PHASE_1EDGE                    0x00000000U           /*!< The first clock transiti
 397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PHASE_2EDGE                    USART_CR2_CPHA        /*!< The second clock transit
 398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_POLARITY Clock Polarity
 403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_POLARITY_LOW                   0x00000000U           /*!< Steady low value on SCLK
 406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_POLARITY_HIGH                  USART_CR2_CPOL        /*!< Steady high value on SCL
 407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
 412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_PRESCALER Clock Source Prescaler
 413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV1                 0x00000000U                                        
 416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV2                 (USART_PRESC_PRESCALER_0)                          
 417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV4                 (USART_PRESC_PRESCALER_1)                          
 418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV6                 (USART_PRESC_PRESCALER_1 | USART_PRESC_PRESCALER_0)
 419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV8                 (USART_PRESC_PRESCALER_2)                          
 420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV10                (USART_PRESC_PRESCALER_2 | USART_PRESC_PRESCALER_0)
 421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV12                (USART_PRESC_PRESCALER_2 | USART_PRESC_PRESCALER_1)
 422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV16                (USART_PRESC_PRESCALER_2 | USART_PRESC_PRESCALER_1 
 423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV32                (USART_PRESC_PRESCALER_3)                          
 424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV64                (USART_PRESC_PRESCALER_3 | USART_PRESC_PRESCALER_0)
 425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV128               (USART_PRESC_PRESCALER_3 | USART_PRESC_PRESCALER_1)
 426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV256               (USART_PRESC_PRESCALER_3 | USART_PRESC_PRESCALER_1 
 427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
 432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_STOPBITS Stop Bits
 433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_STOPBITS_0_5                   USART_CR2_STOP_0                           /*!< 0.5
 436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_STOPBITS_1                     0x00000000U                                /*!< 1 s
 437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_STOPBITS_1_5                   (USART_CR2_STOP_0 | USART_CR2_STOP_1)      /*!< 1.5
 438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_STOPBITS_2                     USART_CR2_STOP_1                           /*!< 2 s
 439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_TXRX TX RX Pins Swap
 444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_TXRX_STANDARD                  0x00000000U           /*!< TX/RX pins are used as d
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 143


 447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_TXRX_SWAPPED                   (USART_CR2_SWAP)      /*!< TX and RX pins functions
 448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_RXPIN_LEVEL RX Pin Active Level Inversion
 453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_RXPIN_LEVEL_STANDARD           0x00000000U           /*!< RX pin signal works usin
 456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_RXPIN_LEVEL_INVERTED           (USART_CR2_RXINV)     /*!< RX pin signal values are
 457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_TXPIN_LEVEL TX Pin Active Level Inversion
 462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_TXPIN_LEVEL_STANDARD           0x00000000U           /*!< TX pin signal works usin
 465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_TXPIN_LEVEL_INVERTED           (USART_CR2_TXINV)     /*!< TX pin signal values are
 466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_BINARY_LOGIC Binary Data Inversion
 471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_BINARY_LOGIC_POSITIVE          0x00000000U           /*!< Logical data from the da
 474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_BINARY_LOGIC_NEGATIVE          USART_CR2_DATAINV     /*!< Logical data from the da
 475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_BITORDER Bit Order
 480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_BITORDER_LSBFIRST              0x00000000U           /*!< data is transmitted/rece
 483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_BITORDER_MSBFIRST              USART_CR2_MSBFIRST    /*!< data is transmitted/rece
 484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_AUTOBAUD_DETECT_ON Autobaud Detection
 489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_STARTBIT    0x00000000U                                 /*!< Me
 492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE USART_CR2_ABRMODE_0                         /*!< Fa
 493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME    USART_CR2_ABRMODE_1                         /*!< 0x
 494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_55_FRAME    (USART_CR2_ABRMODE_1 | USART_CR2_ABRMODE_0) /*!< 0x
 495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_ADDRESS_DETECT Address Length Detection
 500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ADDRESS_DETECT_4B              0x00000000U           /*!< 4-bit address detection 
 503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ADDRESS_DETECT_7B              USART_CR2_ADDM7       /*!< 7-bit address detection 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 144


 504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_HWCONTROL Hardware Control
 509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_HWCONTROL_NONE                 0x00000000U                          /*!< CTS and R
 512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS                  USART_CR3_RTSE                       /*!< RTS outpu
 513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_HWCONTROL_CTS                  USART_CR3_CTSE                       /*!< CTS mode 
 514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS_CTS              (USART_CR3_RTSE | USART_CR3_CTSE)    /*!< CTS and R
 515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_WAKEUP_ON Wakeup Activation
 520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_ADDRESS              0x00000000U                             /*!< Wake u
 523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_STARTBIT             USART_CR3_WUS_1                         /*!< Wake u
 524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_RXNE                 (USART_CR3_WUS_0 | USART_CR3_WUS_1)     /*!< Wake u
 525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_IRDA_POWER IrDA Power
 530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_IRDA_POWER_NORMAL              0x00000000U           /*!< IrDA normal power mode *
 533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_IRDA_POWER_LOW                 USART_CR3_IRLP        /*!< IrDA low power mode */
 534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_LINBREAK_DETECT LIN Break Detection Length
 539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_10B            0x00000000U           /*!< 10-bit break detection m
 542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_11B            USART_CR2_LBDL        /*!< 11-bit break detection m
 543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_DE_POLARITY Driver Enable Polarity
 548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DE_POLARITY_HIGH               0x00000000U           /*!< DE signal is active high
 551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DE_POLARITY_LOW                USART_CR3_DEP         /*!< DE signal is active low 
 552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EC_DMA_REG_DATA DMA Register Data
 557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DMA_REG_DATA_TRANSMIT          0x00000000U          /*!< Get address of data regis
 560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DMA_REG_DATA_RECEIVE           0x00000001U          /*!< Get address of data regis
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 145


 561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Exported macro ------------------------------------------------------------*/
 570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Macros USART Exported Macros
 571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EM_WRITE_READ Common Write and read registers Macros
 575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Write a value in USART register
 580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __REG__ Register to be written
 582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __VALUE__ Value to be written in the register
 583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VAL
 586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Read a value in USART register
 589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __REG__ Register to be read
 591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Register value
 592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EM_Exported_Macros_Helper Exported_Macros_Helper
 599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         expected Baud Rate in 8 bits sampling mode (32 bits value of USARTDIV is returned)
 605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   @if USART_PRESC_PRESCALER
 607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __PRESCALER__ This parameter can be one of the following values:
 608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
 609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
 610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
 611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
 612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
 613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
 614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
 615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
 616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
 617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 146


 618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
 619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
 620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   @endif
 621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_8 case
 623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
 625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING8(__PERIPHCLK__, __PRESCALER__, __BAUDRATE__) \
 626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   (((((__PERIPHCLK__)/(USART_PRESCALER_TAB[(__PRESCALER__)]))*2U)\
 627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     + ((__BAUDRATE__)/2U))/(__BAUDRATE__))
 628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
 629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING8(__PERIPHCLK__, __BAUDRATE__) ((((__PERIPHCLK__)*2U)\
 630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                                                 + ((__BAUDRATE__)/2U))/(__BAUDRATE_
 631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
 632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         expected Baud Rate in 16 bits sampling mode (32 bits value of USARTDIV is returned)
 636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   @if USART_PRESC_PRESCALER
 638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __PRESCALER__ This parameter can be one of the following values:
 639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
 640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
 641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
 642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
 643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
 644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
 645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
 646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
 647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
 648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
 649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
 650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
 651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   @endif
 652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_16 case
 654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
 656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING16(__PERIPHCLK__, __PRESCALER__, __BAUDRATE__) \
 657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ((((__PERIPHCLK__)/(USART_PRESCALER_TAB[(__PRESCALER__)]))\
 658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     + ((__BAUDRATE__)/2U))/(__BAUDRATE__))
 659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
 660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING16(__PERIPHCLK__, __BAUDRATE__) (((__PERIPHCLK__) + ((__BAUDRATE__)/
 661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
 662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
 669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Exported functions --------------------------------------------------------*/
 672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Functions USART Exported Functions
 674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 147


 675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration Configuration functions
 678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
 679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  USART Enable
 683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Enable
 684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Enable(USART_TypeDef *USARTx)
 688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_UE);
 690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  USART Disable (all USART prescalers and outputs are disabled)
 694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   When USART is disabled, USART prescalers and outputs are stopped immediately,
 695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         and current operations are discarded. The configuration of the USART is kept, but all t
 696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         flags, in the USARTx_ISR are set to their default values.
 697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Disable
 698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Disable(USART_TypeDef *USARTx)
 702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_UE);
 704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if USART is enabled
 708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_IsEnabled
 709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabled(const USART_TypeDef *USARTx)
 713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_UE) == (USART_CR1_UE)) ? 1UL : 0UL);
 715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
 718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  FIFO Mode Enable
 720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          FIFOEN        LL_USART_EnableFIFO
 723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableFIFO(USART_TypeDef *USARTx)
 727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_FIFOEN);
 729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 148


 732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  FIFO Mode Disable
 733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          FIFOEN        LL_USART_DisableFIFO
 736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableFIFO(USART_TypeDef *USARTx)
 740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_FIFOEN);
 742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if FIFO Mode is enabled
 746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          FIFOEN        LL_USART_IsEnabledFIFO
 749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledFIFO(const USART_TypeDef *USARTx)
 753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_FIFOEN) == (USART_CR1_FIFOEN)) ? 1UL : 0UL);
 755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure TX FIFO Threshold
 759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          TXFTCFG       LL_USART_SetTXFIFOThreshold
 762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Threshold This parameter can be one of the following values:
 764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
 769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTXFIFOThreshold(USART_TypeDef *USARTx, uint32_t Threshold)
 773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_MODIFY_REG(USARTx->CR3, USART_CR3_TXFTCFG, Threshold << USART_CR3_TXFTCFG_Pos);
 775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return TX FIFO Threshold Configuration
 779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          TXFTCFG       LL_USART_GetTXFIFOThreshold
 782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 149


 789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTXFIFOThreshold(const USART_TypeDef *USARTx)
 792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
 794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure RX FIFO Threshold
 798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          RXFTCFG       LL_USART_SetRXFIFOThreshold
 801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Threshold This parameter can be one of the following values:
 803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
 808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetRXFIFOThreshold(USART_TypeDef *USARTx, uint32_t Threshold)
 812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_MODIFY_REG(USARTx->CR3, USART_CR3_RXFTCFG, Threshold << USART_CR3_RXFTCFG_Pos);
 814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return RX FIFO Threshold Configuration
 818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          RXFTCFG       LL_USART_GetRXFIFOThreshold
 821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
 828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetRXFIFOThreshold(const USART_TypeDef *USARTx)
 831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
 833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure TX and RX FIFOs Threshold
 837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          TXFTCFG       LL_USART_ConfigFIFOsThreshold\n
 840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          RXFTCFG       LL_USART_ConfigFIFOsThreshold
 841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  TXThreshold This parameter can be one of the following values:
 843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 150


 846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
 848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  RXThreshold This parameter can be one of the following values:
 850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
 855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigFIFOsThreshold(USART_TypeDef *USARTx, uint32_t TXThreshold, uin
 859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_MODIFY_REG(USARTx->CR3, USART_CR3_TXFTCFG | USART_CR3_RXFTCFG, (TXThreshold << USART_CR3_T
 861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                     (RXThreshold << USART_CR3_RXFTCFG_Pos));
 862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
 865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  USART enabled in STOP Mode.
 867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   When this function is enabled, USART is able to wake up the MCU from Stop mode, provide
 868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         USART clock selection is HSI or LSE in RCC.
 869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_EnableInStopMode
 872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableInStopMode(USART_TypeDef *USARTx)
 876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_UESM);
 878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  USART disabled in STOP Mode.
 882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   When this function is disabled, USART is not able to wake up the MCU from Stop mode
 883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_DisableInStopMode
 886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableInStopMode(USART_TypeDef *USARTx)
 890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_UESM);
 892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if USART is enabled in STOP Mode (able to wake up MCU from Stop mode or not)
 896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_IsEnabledInStopMode
 899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledInStopMode(const USART_TypeDef *USARTx)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 151


 903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_UESM) == (USART_CR1_UESM)) ? 1UL : 0UL);
 905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR3_UCESM)
 908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  USART Clock enabled in STOP Mode
 910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   When this function is called, USART Clock is enabled while in STOP mode
 911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          UCESM         LL_USART_EnableClockInStopMode
 912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableClockInStopMode(USART_TypeDef *USARTx)
 916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR3, USART_CR3_UCESM);
 918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  USART clock disabled in STOP Mode
 922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   When this function is called, USART Clock is disabled while in STOP mode
 923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          UCESM         LL_USART_DisableClockInStopMode
 924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableClockInStopMode(USART_TypeDef *USARTx)
 928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR3, USART_CR3_UCESM);
 930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if USART clock is enabled in STOP Mode
 934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          UCESM         LL_USART_IsClockEnabledInStopMode
 935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsClockEnabledInStopMode(const USART_TypeDef *USARTx)
 939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_UCESM) == (USART_CR3_UCESM));
 941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR3_UCESM */
 944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Receiver Enable (Receiver is enabled and begins searching for a start bit)
 946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_EnableDirectionRx
 947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionRx(USART_TypeDef *USARTx)
 951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_RE);
 953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Receiver Disable
 957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_DisableDirectionRx
 958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 152


 960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionRx(USART_TypeDef *USARTx)
 962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_RE);
 964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Transmitter Enable
 968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_EnableDirectionTx
 969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionTx(USART_TypeDef *USARTx)
 973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_TE);
 975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Transmitter Disable
 979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_DisableDirectionTx
 980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
 982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
 983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionTx(USART_TypeDef *USARTx)
 984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_TE);
 986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
 989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure simultaneously enabled/disabled states
 990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         of Transmitter and Receiver
 991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_SetTransferDirection\n
 992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR1          TE            LL_USART_SetTransferDirection
 993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
 994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  TransferDirection This parameter can be one of the following values:
 995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
 999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTransferDirection(USART_TypeDef *USARTx, uint32_t TransferDirectio
1002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_MODIFY_REG(USARTx->CR1, USART_CR1_RE | USART_CR1_TE, TransferDirection);
1004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return enabled/disabled states of Transmitter and Receiver
1008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_GetTransferDirection\n
1009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR1          TE            LL_USART_GetTransferDirection
1010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
1013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
1014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
1015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
1016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 153


1017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTransferDirection(const USART_TypeDef *USARTx)
1018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_RE | USART_CR1_TE));
1020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure Parity (enabled/disabled and parity mode if enabled).
1024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   This function selects if hardware parity control (generation and detection) is enabled 
1025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         When the parity control is enabled (Odd or Even), computed parity bit is inserted at th
1026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (9th or 8th bit depending on data width) and parity is checked on the received data.
1027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_SetParity\n
1028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR1          PCE           LL_USART_SetParity
1029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
1031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
1032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
1033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
1034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetParity(USART_TypeDef *USARTx, uint32_t Parity)
1037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE, Parity);
1039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Parity configuration (enabled/disabled and parity mode if enabled)
1043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_GetParity\n
1044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR1          PCE           LL_USART_GetParity
1045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
1048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
1049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
1050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetParity(const USART_TypeDef *USARTx)
1052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE));
1054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Receiver Wake Up method from Mute mode.
1058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_SetWakeUpMethod
1059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Method This parameter can be one of the following values:
1061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
1062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
1063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetWakeUpMethod(USART_TypeDef *USARTx, uint32_t Method)
1066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_WAKE, Method);
1068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Receiver Wake Up method from Mute mode
1072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_GetWakeUpMethod
1073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 154


1074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
1076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
1077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetWakeUpMethod(const USART_TypeDef *USARTx)
1079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_WAKE));
1081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Word length (i.e. nb of data bits, excluding start and stop bits)
1085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          M0            LL_USART_SetDataWidth\n
1086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR1          M1            LL_USART_SetDataWidth
1087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
1089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B
1090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
1091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
1092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDataWidth(USART_TypeDef *USARTx, uint32_t DataWidth)
1095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_M, DataWidth);
1097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Word length (i.e. nb of data bits, excluding start and stop bits)
1101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          M0            LL_USART_GetDataWidth\n
1102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR1          M1            LL_USART_GetDataWidth
1103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B
1106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
1107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
1108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDataWidth(const USART_TypeDef *USARTx)
1110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_M));
1112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Allow switch between Mute Mode and Active mode
1116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_EnableMuteMode
1117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableMuteMode(USART_TypeDef *USARTx)
1121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_MME);
1123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Prevent Mute Mode use. Set Receiver in active mode permanently.
1127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_DisableMuteMode
1128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 155


1131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableMuteMode(USART_TypeDef *USARTx)
1132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_MME);
1134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if switch between Mute Mode and Active mode is allowed
1138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_IsEnabledMuteMode
1139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledMuteMode(const USART_TypeDef *USARTx)
1143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_MME) == (USART_CR1_MME)) ? 1UL : 0UL);
1145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Oversampling to 8-bit or 16-bit mode
1149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_SetOverSampling
1150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetOverSampling(USART_TypeDef *USARTx, uint32_t OverSampling)
1157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_OVER8, OverSampling);
1159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Oversampling mode
1163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_GetOverSampling
1164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetOverSampling(const USART_TypeDef *USARTx)
1170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_OVER8));
1172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure if Clock pulse of the last data bit is output to the SCLK pin or not
1176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_SetLastClkPulseOutput
1179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  LastBitClockPulse This parameter can be one of the following values:
1181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
1182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
1183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLastClkPulseOutput(USART_TypeDef *USARTx, uint32_t LastBitClockPul
1186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBCL, LastBitClockPulse);
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 156


1188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Retrieve Clock pulse of the last data bit output configuration
1192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (Last bit Clock pulse output to the SCLK pin or not)
1193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_GetLastClkPulseOutput
1196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
1199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
1200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLastClkPulseOutput(const USART_TypeDef *USARTx)
1202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBCL));
1204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Select the phase of the clock output on the SCLK pin in synchronous mode
1208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_SetClockPhase
1211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  ClockPhase This parameter can be one of the following values:
1213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
1214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
1215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPhase(USART_TypeDef *USARTx, uint32_t ClockPhase)
1218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA, ClockPhase);
1220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return phase of the clock output on the SCLK pin in synchronous mode
1224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_GetClockPhase
1227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
1230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
1231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPhase(const USART_TypeDef *USARTx)
1233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPHA));
1235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Select the polarity of the clock output on the SCLK pin in synchronous mode
1239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_SetClockPolarity
1242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  ClockPolarity This parameter can be one of the following values:
1244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 157


1245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
1246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPolarity(USART_TypeDef *USARTx, uint32_t ClockPolarity)
1249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPOL, ClockPolarity);
1251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return polarity of the clock output on the SCLK pin in synchronous mode
1255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_GetClockPolarity
1258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
1261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
1262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPolarity(const USART_TypeDef *USARTx)
1264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPOL));
1266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure Clock signal format (Phase Polarity and choice about output of last bit clock
1270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clock Phase configuration using @ref LL_USART_SetClockPhase() function
1274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clock Polarity configuration using @ref LL_USART_SetClockPolarity() function
1275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Output of Last bit Clock pulse configuration using @ref LL_USART_SetLastClkPulseOutpu
1276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_ConfigClock\n
1277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          CPOL          LL_USART_ConfigClock\n
1278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          LBCL          LL_USART_ConfigClock
1279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Phase This parameter can be one of the following values:
1281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
1282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
1283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Polarity This parameter can be one of the following values:
1284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
1285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
1286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  LBCPOutput This parameter can be one of the following values:
1287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
1288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
1289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigClock(USART_TypeDef *USARTx, uint32_t Phase, uint32_t Polarity,
1292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA | USART_CR2_CPOL | USART_CR2_LBCL, Phase | Polarity | LBCP
1294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
1297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure Clock source prescaler for baudrate generator and oversampling
1299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
1300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
1301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll PRESC        PRESCALER     LL_USART_SetPrescaler
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 158


1302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PrescalerValue This parameter can be one of the following values:
1304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
1305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
1306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
1307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
1308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
1309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
1310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
1311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
1312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
1313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
1314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
1315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
1316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
1319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->PRESC, USART_PRESC_PRESCALER, (uint16_t)PrescalerValue);
1321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Retrieve the Clock source prescaler for baudrate generator and oversampling
1325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
1326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
1327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll PRESC        PRESCALER     LL_USART_GetPrescaler
1328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
1331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
1332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
1333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
1334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
1335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
1336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
1337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
1338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
1339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
1340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
1341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
1342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetPrescaler(const USART_TypeDef *USARTx)
1344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->PRESC, USART_PRESC_PRESCALER));
1346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
1349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Clock output on SCLK pin
1351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_EnableSCLKOutput
1354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSCLKOutput(USART_TypeDef *USARTx)
1358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 159


1359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_CLKEN);
1360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Clock output on SCLK pin
1364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_DisableSCLKOutput
1367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSCLKOutput(USART_TypeDef *USARTx)
1371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_CLKEN);
1373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if Clock output on SCLK pin is enabled
1377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_IsEnabledSCLKOutput
1380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSCLKOutput(const USART_TypeDef *USARTx)
1384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_CLKEN) == (USART_CR2_CLKEN)) ? 1UL : 0UL);
1386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set the length of the stop bits
1390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_SetStopBitsLength
1391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
1393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
1394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
1396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetStopBitsLength(USART_TypeDef *USARTx, uint32_t StopBits)
1400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
1402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Retrieve the length of the stop bits
1406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_GetStopBitsLength
1407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
1410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
1412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetStopBitsLength(const USART_TypeDef *USARTx)
1415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 160


1416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_STOP));
1417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure Character frame format (Datawidth, Parity control, Stop Bits)
1421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Data Width configuration using @ref LL_USART_SetDataWidth() function
1423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Parity Control and mode configuration using @ref LL_USART_SetParity() function
1424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Stop bits configuration using @ref LL_USART_SetStopBitsLength() function
1425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_ConfigCharacter\n
1426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR1          PCE           LL_USART_ConfigCharacter\n
1427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR1          M0            LL_USART_ConfigCharacter\n
1428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR1          M1            LL_USART_ConfigCharacter\n
1429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigCharacter
1430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
1432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B
1433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
1434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
1435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
1436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
1437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
1438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
1439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
1440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
1441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
1443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigCharacter(USART_TypeDef *USARTx, uint32_t DataWidth, uint32_t P
1447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                               uint32_t StopBits)
1448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE | USART_CR1_M, Parity | DataWidth);
1450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
1451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure TX/RX pins swapping setting.
1455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          SWAP          LL_USART_SetTXRXSwap
1456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  SwapConfig This parameter can be one of the following values:
1458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_STANDARD
1459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_SWAPPED
1460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTXRXSwap(USART_TypeDef *USARTx, uint32_t SwapConfig)
1463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_SWAP, SwapConfig);
1465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Retrieve TX/RX pins swapping configuration.
1469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          SWAP          LL_USART_GetTXRXSwap
1470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_STANDARD
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 161


1473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_SWAPPED
1474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTXRXSwap(const USART_TypeDef *USARTx)
1476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_SWAP));
1478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure RX pin active level logic
1482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          RXINV         LL_USART_SetRXPinLevel
1483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PinInvMethod This parameter can be one of the following values:
1485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_STANDARD
1486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_INVERTED
1487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetRXPinLevel(USART_TypeDef *USARTx, uint32_t PinInvMethod)
1490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_RXINV, PinInvMethod);
1492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Retrieve RX pin active level logic configuration
1496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          RXINV         LL_USART_GetRXPinLevel
1497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_STANDARD
1500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_INVERTED
1501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetRXPinLevel(const USART_TypeDef *USARTx)
1503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_RXINV));
1505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure TX pin active level logic
1509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          TXINV         LL_USART_SetTXPinLevel
1510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PinInvMethod This parameter can be one of the following values:
1512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_STANDARD
1513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_INVERTED
1514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTXPinLevel(USART_TypeDef *USARTx, uint32_t PinInvMethod)
1517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_TXINV, PinInvMethod);
1519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Retrieve TX pin active level logic configuration
1523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          TXINV         LL_USART_GetTXPinLevel
1524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_STANDARD
1527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_INVERTED
1528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTXPinLevel(const USART_TypeDef *USARTx)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 162


1530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_TXINV));
1532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure Binary data logic.
1536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Allow to define how Logical data from the data register are send/received :
1537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         either in positive/direct logic (1=H, 0=L) or in negative/inverse logic (1=L, 0=H)
1538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          DATAINV       LL_USART_SetBinaryDataLogic
1539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  DataLogic This parameter can be one of the following values:
1541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_POSITIVE
1542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_NEGATIVE
1543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBinaryDataLogic(USART_TypeDef *USARTx, uint32_t DataLogic)
1546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_DATAINV, DataLogic);
1548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Retrieve Binary data configuration
1552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          DATAINV       LL_USART_GetBinaryDataLogic
1553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_POSITIVE
1556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_NEGATIVE
1557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBinaryDataLogic(const USART_TypeDef *USARTx)
1559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_DATAINV));
1561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure transfer bit order (either Less or Most Significant Bit First)
1565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   MSB First means data is transmitted/received with the MSB first, following the start bi
1566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LSB First means data is transmitted/received with data bit 0 first, following the start
1567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          MSBFIRST      LL_USART_SetTransferBitOrder
1568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  BitOrder This parameter can be one of the following values:
1570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_LSBFIRST
1571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_MSBFIRST
1572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTransferBitOrder(USART_TypeDef *USARTx, uint32_t BitOrder)
1575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_MSBFIRST, BitOrder);
1577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return transfer bit order (either Less or Most Significant Bit First)
1581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   MSB First means data is transmitted/received with the MSB first, following the start bi
1582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LSB First means data is transmitted/received with data bit 0 first, following the start
1583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          MSBFIRST      LL_USART_GetTransferBitOrder
1584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_LSBFIRST
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 163


1587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_MSBFIRST
1588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTransferBitOrder(const USART_TypeDef *USARTx)
1590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_MSBFIRST));
1592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Auto Baud-Rate Detection
1596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_EnableAutoBaudRate
1599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableAutoBaudRate(USART_TypeDef *USARTx)
1603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_ABREN);
1605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Auto Baud-Rate Detection
1609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_DisableAutoBaudRate
1612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableAutoBaudRate(USART_TypeDef *USARTx)
1616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_ABREN);
1618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if Auto Baud-Rate Detection mechanism is enabled
1622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_IsEnabledAutoBaud
1625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledAutoBaud(const USART_TypeDef *USARTx)
1629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_ABREN) == (USART_CR2_ABREN)) ? 1UL : 0UL);
1631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Auto Baud-Rate mode bits
1635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          ABRMODE       LL_USART_SetAutoBaudRateMode
1638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  AutoBaudRateMode This parameter can be one of the following values:
1640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_STARTBIT
1641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE
1642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME
1643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_55_FRAME
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 164


1644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetAutoBaudRateMode(USART_TypeDef *USARTx, uint32_t AutoBaudRateMode)
1647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_ABRMODE, AutoBaudRateMode);
1649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Auto Baud-Rate mode
1653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          ABRMODE       LL_USART_GetAutoBaudRateMode
1656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_STARTBIT
1659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE
1660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME
1661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_55_FRAME
1662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetAutoBaudRateMode(USART_TypeDef *USARTx)
1664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ABRMODE));
1666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Receiver Timeout
1670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_EnableRxTimeout
1671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableRxTimeout(USART_TypeDef *USARTx)
1675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_RTOEN);
1677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Receiver Timeout
1681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_DisableRxTimeout
1682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableRxTimeout(USART_TypeDef *USARTx)
1686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_RTOEN);
1688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if Receiver Timeout feature is enabled
1692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_IsEnabledRxTimeout
1693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledRxTimeout(const USART_TypeDef *USARTx)
1697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_RTOEN) == (USART_CR2_RTOEN)) ? 1UL : 0UL);
1699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 165


1701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Address of the USART node.
1703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   This is used in multiprocessor communication during Mute mode or Stop mode,
1704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         for wake up with address mark detection.
1705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   4bits address node is used when 4-bit Address Detection is selected in ADDM7.
1706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (b7-b4 should be set to 0)
1707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         8bits address node is used when 7-bit Address Detection is selected in ADDM7.
1708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (This is used in multiprocessor communication during Mute mode or Stop mode,
1709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         for wake up with 7-bit address mark detection.
1710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         The MSB of the character sent by the transmitter should be equal to 1.
1711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         It may also be used for character detection during normal reception,
1712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Mute mode inactive (for example, end of block detection in ModBus protocol).
1713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         In this case, the whole received character (8-bit) is compared to the ADD[7:0]
1714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         value and CMF flag is set on match)
1715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_ConfigNodeAddress\n
1716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          ADDM7         LL_USART_ConfigNodeAddress
1717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  AddressLen This parameter can be one of the following values:
1719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_4B
1720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_7B
1721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  NodeAddress 4 or 7 bit Address of the USART node.
1722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigNodeAddress(USART_TypeDef *USARTx, uint32_t AddressLen, uint32_
1725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_ADD | USART_CR2_ADDM7,
1727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****              (uint32_t)(AddressLen | (NodeAddress << USART_CR2_ADD_Pos)));
1728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return 8 bit Address of the USART node as set in ADD field of CR2.
1732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   If 4-bit Address Detection is selected in ADDM7,
1733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         only 4bits (b3-b0) of returned value are relevant (b31-b4 are not relevant)
1734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         If 7-bit Address Detection is selected in ADDM7,
1735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         only 8bits (b7-b0) of returned value are relevant (b31-b8 are not relevant)
1736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_GetNodeAddress
1737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Address of the USART node (Value between Min_Data=0 and Max_Data=255)
1739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetNodeAddress(const USART_TypeDef *USARTx)
1741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ADD) >> USART_CR2_ADD_Pos);
1743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Length of Node Address used in Address Detection mode (7-bit or 4-bit)
1747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          ADDM7         LL_USART_GetNodeAddressLen
1748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_4B
1751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_7B
1752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetNodeAddressLen(const USART_TypeDef *USARTx)
1754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ADDM7));
1756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 166


1758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable RTS HW Flow Control
1760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_EnableRTSHWFlowCtrl
1763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableRTSHWFlowCtrl(USART_TypeDef *USARTx)
1767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_RTSE);
1769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable RTS HW Flow Control
1773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_DisableRTSHWFlowCtrl
1776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableRTSHWFlowCtrl(USART_TypeDef *USARTx)
1780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_RTSE);
1782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable CTS HW Flow Control
1786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_EnableCTSHWFlowCtrl
1789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableCTSHWFlowCtrl(USART_TypeDef *USARTx)
1793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_CTSE);
1795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable CTS HW Flow Control
1799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_DisableCTSHWFlowCtrl
1802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableCTSHWFlowCtrl(USART_TypeDef *USARTx)
1806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_CTSE);
1808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure HW Flow Control mode (both CTS and RTS)
1812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_SetHWFlowCtrl\n
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 167


1815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_SetHWFlowCtrl
1816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  HardwareFlowControl This parameter can be one of the following values:
1818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
1819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
1820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
1821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
1822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetHWFlowCtrl(USART_TypeDef *USARTx, uint32_t HardwareFlowControl)
1825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE, HardwareFlowControl);
1827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return HW Flow Control configuration (both CTS and RTS)
1831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_GetHWFlowCtrl\n
1834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_GetHWFlowCtrl
1835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
1838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
1839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
1840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
1841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetHWFlowCtrl(const USART_TypeDef *USARTx)
1843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE));
1845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable One bit sampling method
1849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_EnableOneBitSamp
1850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableOneBitSamp(USART_TypeDef *USARTx)
1854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_ONEBIT);
1856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable One bit sampling method
1860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_DisableOneBitSamp
1861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableOneBitSamp(USART_TypeDef *USARTx)
1865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_ONEBIT);
1867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if One bit sampling method is enabled
1871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_IsEnabledOneBitSamp
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 168


1872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledOneBitSamp(const USART_TypeDef *USARTx)
1876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_ONEBIT) == (USART_CR3_ONEBIT)) ? 1UL : 0UL);
1878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Overrun detection
1882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_EnableOverrunDetect
1883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableOverrunDetect(USART_TypeDef *USARTx)
1887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_OVRDIS);
1889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Overrun detection
1893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_DisableOverrunDetect
1894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableOverrunDetect(USART_TypeDef *USARTx)
1898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_OVRDIS);
1900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if Overrun detection is enabled
1904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_IsEnabledOverrunDetect
1905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledOverrunDetect(const USART_TypeDef *USARTx)
1909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_OVRDIS) != USART_CR3_OVRDIS) ? 1UL : 0UL);
1911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Select event type for Wake UP Interrupt Flag (WUS[1:0] bits)
1915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
1916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
1917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          WUS           LL_USART_SetWKUPType
1918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Type This parameter can be one of the following values:
1920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_ADDRESS
1921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_STARTBIT
1922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_RXNE
1923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetWKUPType(USART_TypeDef *USARTx, uint32_t Type)
1926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_WUS, Type);
1928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 169


1929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return event type for Wake UP Interrupt Flag (WUS[1:0] bits)
1932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
1933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
1934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          WUS           LL_USART_GetWKUPType
1935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_ADDRESS
1938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_STARTBIT
1939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_RXNE
1940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetWKUPType(const USART_TypeDef *USARTx)
1942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
1943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_WUS));
1944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
1945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
1947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure USART BRR register for achieving expected Baud Rate value.
1948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Compute and set USARTDIV value in BRR Register (full BRR content)
1949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         according to used Peripheral Clock, Oversampling mode, and expected Baud Rate values
1950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Peripheral clock and Baud rate values provided as function parameters should be valid
1951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (Baud rate value != 0)
1952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   In case of oversampling by 16 and 8, BRR content must be greater than or equal to 16d.
1953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_SetBaudRate
1954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
1955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   @if USART_PRESC_PRESCALER
1957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PrescalerValue This parameter can be one of the following values:
1958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
1959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
1960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
1961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
1962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
1963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
1964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
1965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
1966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
1967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
1968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
1969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
1970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   @endif
1971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  BaudRate Baud Rate
1975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
1976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
1977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
1978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t Presc
1979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                           uint32_t OverSampling,
1980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                           uint32_t BaudRate)
1981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
1982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t OverS
1983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                           uint32_t BaudRate)
1984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
1985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 170


1986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t usartdiv;
1987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t brrtemp;
1988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
1989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
1990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   if (PrescalerValue > LL_USART_PRESCALER_DIV256)
1991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   {
1992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     /* Do not overstep the size of USART_PRESCALER_TAB */
1993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   }
1994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   else if (BaudRate == 0U)
1995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   {
1996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     /* Can Not divide per 0 */
1997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   }
1998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   else if (OverSampling == LL_USART_OVERSAMPLING_8)
1999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
2000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   if (OverSampling == LL_USART_OVERSAMPLING_8)
2001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
2002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   {
2003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
2004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     usartdiv = (uint16_t)(__LL_USART_DIV_SAMPLING8(PeriphClk, (uint8_t)PrescalerValue, BaudRate));
2005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
2006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     usartdiv = (uint16_t)(__LL_USART_DIV_SAMPLING8(PeriphClk, BaudRate));
2007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
2008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     brrtemp = usartdiv & 0xFFF0U;
2009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
2010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     USARTx->BRR = brrtemp;
2011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   }
2012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   else
2013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   {
2014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
2015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING16(PeriphClk, (uint8_t)PrescalerValue, BaudRate
2016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
2017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING16(PeriphClk, BaudRate));
2018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
2019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   }
2020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return current Baud Rate value, according to USARTDIV present in BRR register
2024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (full BRR content), and to used Peripheral Clock and Oversampling mode values
2025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   In case of non-initialized or invalid value stored in BRR register, value 0 will be ret
2026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   In case of oversampling by 16 and 8, BRR content must be greater than or equal to 16d.
2027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_GetBaudRate
2028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
2030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   @if USART_PRESC_PRESCALER
2031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PrescalerValue This parameter can be one of the following values:
2032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
2033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
2034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
2035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
2036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
2037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
2038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
2039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
2040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
2041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
2042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 171


2043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
2044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   @endif
2045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
2046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
2047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
2048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Baud Rate
2049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
2051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBaudRate(const USART_TypeDef *USARTx, uint32_t PeriphClk, uint
2052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****                                               uint32_t OverSampling)
2053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
2054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBaudRate(const USART_TypeDef *USARTx, uint32_t PeriphClk, uint
2055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
2056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t usartdiv;
2058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t brrresult = 0x0U;
2059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
2060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t periphclkpresc = (uint32_t)(PeriphClk / (USART_PRESCALER_TAB[(uint8_t)PrescalerValue]));
2061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
2062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   usartdiv = USARTx->BRR;
2064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   if (usartdiv == 0U)
2066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   {
2067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     /* Do not perform a division by 0 */
2068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   }
2069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   else if (OverSampling == LL_USART_OVERSAMPLING_8)
2070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   {
2071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     usartdiv = (uint16_t)((usartdiv & 0xFFF0U) | ((usartdiv & 0x0007U) << 1U)) ;
2072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     if (usartdiv != 0U)
2073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     {
2074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
2075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****       brrresult = (periphclkpresc * 2U) / usartdiv;
2076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
2077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****       brrresult = (PeriphClk * 2U) / usartdiv;
2078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
2079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     }
2080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   }
2081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   else
2082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   {
2083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     if ((usartdiv & 0xFFFFU) != 0U)
2084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     {
2085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_PRESC_PRESCALER)
2086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****       brrresult = periphclkpresc / usartdiv;
2087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
2088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****       brrresult = PeriphClk / usartdiv;
2089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_PRESC_PRESCALER */
2090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     }
2091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   }
2092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (brrresult);
2093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Receiver Time Out Value (expressed in nb of bits duration)
2097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll RTOR         RTO           LL_USART_SetRxTimeout
2098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Timeout Value between Min_Data=0x00 and Max_Data=0x00FFFFFF
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 172


2100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetRxTimeout(USART_TypeDef *USARTx, uint32_t Timeout)
2103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->RTOR, USART_RTOR_RTO, Timeout);
2105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Get Receiver Time Out Value (expressed in nb of bits duration)
2109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll RTOR         RTO           LL_USART_GetRxTimeout
2110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x00FFFFFF
2112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetRxTimeout(const USART_TypeDef *USARTx)
2114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->RTOR, USART_RTOR_RTO));
2116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Block Length value in reception
2120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll RTOR         BLEN          LL_USART_SetBlockLength
2121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  BlockLength Value between Min_Data=0x00 and Max_Data=0xFF
2123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBlockLength(USART_TypeDef *USARTx, uint32_t BlockLength)
2126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->RTOR, USART_RTOR_BLEN, BlockLength << USART_RTOR_BLEN_Pos);
2128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Get Block Length value in reception
2132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll RTOR         BLEN          LL_USART_GetBlockLength
2133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
2135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBlockLength(const USART_TypeDef *USARTx)
2137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->RTOR, USART_RTOR_BLEN) >> USART_RTOR_BLEN_Pos);
2139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
2143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_IRDA Configuration functions related to Irda feature
2146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
2147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable IrDA mode
2151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_EnableIrda
2154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 173


2157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIrda(USART_TypeDef *USARTx)
2158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_IREN);
2160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable IrDA mode
2164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_DisableIrda
2167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIrda(USART_TypeDef *USARTx)
2171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_IREN);
2173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if IrDA mode is enabled
2177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_IsEnabledIrda
2180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIrda(const USART_TypeDef *USARTx)
2184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_IREN) == (USART_CR3_IREN)) ? 1UL : 0UL);
2186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Configure IrDA Power Mode (Normal or Low Power)
2190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          IRLP          LL_USART_SetIrdaPowerMode
2193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PowerMode This parameter can be one of the following values:
2195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_NORMAL
2196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_LOW
2197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetIrdaPowerMode(USART_TypeDef *USARTx, uint32_t PowerMode)
2200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_IRLP, PowerMode);
2202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Retrieve IrDA Power Mode configuration (Normal or Low Power)
2206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          IRLP          LL_USART_GetIrdaPowerMode
2209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
2211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_NORMAL
2212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
2213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 174


2214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetIrdaPowerMode(const USART_TypeDef *USARTx)
2215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_IRLP));
2217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Irda prescaler value, used for dividing the USART clock source
2221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         to achieve the Irda Low Power frequency (8 bits value)
2222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_SetIrdaPrescaler
2225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PrescalerValue Value between Min_Data=0x00 and Max_Data=0xFF
2227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetIrdaPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
2230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_PSC, (uint16_t)PrescalerValue);
2232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Irda prescaler value, used for dividing the USART clock source
2236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         to achieve the Irda Low Power frequency (8 bits value)
2237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_GetIrdaPrescaler
2240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Irda prescaler value (Value between Min_Data=0x00 and Max_Data=0xFF)
2242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetIrdaPrescaler(const USART_TypeDef *USARTx)
2244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_PSC));
2246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
2250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_Smartcard Configuration functions related to Smartcard feat
2253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
2254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Smartcard NACK transmission
2258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_EnableSmartcardNACK
2261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSmartcardNACK(USART_TypeDef *USARTx)
2265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_NACK);
2267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Smartcard NACK transmission
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 175


2271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_DisableSmartcardNACK
2274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSmartcardNACK(USART_TypeDef *USARTx)
2278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_NACK);
2280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if Smartcard NACK transmission is enabled
2284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_IsEnabledSmartcardNACK
2287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSmartcardNACK(const USART_TypeDef *USARTx)
2291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_NACK) == (USART_CR3_NACK)) ? 1UL : 0UL);
2293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Smartcard mode
2297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_EnableSmartcard
2300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSmartcard(USART_TypeDef *USARTx)
2304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_SCEN);
2306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Smartcard mode
2310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_DisableSmartcard
2313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSmartcard(USART_TypeDef *USARTx)
2317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_SCEN);
2319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if Smartcard mode is enabled
2323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_IsEnabledSmartcard
2326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 176


2328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSmartcard(const USART_TypeDef *USARTx)
2330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_SCEN) == (USART_CR3_SCEN)) ? 1UL : 0UL);
2332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Smartcard Auto-Retry Count value (SCARCNT[2:0] bits)
2336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   This bit-field specifies the number of retries in transmit and receive, in Smartcard mo
2339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         In transmission mode, it specifies the number of automatic retransmission retries, befo
2340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         generating a transmission error (FE bit set).
2341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         In reception mode, it specifies the number or erroneous reception trials, before genera
2342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         reception error (RXNE and PE bits set)
2343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          SCARCNT       LL_USART_SetSmartcardAutoRetryCount
2344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  AutoRetryCount Value between Min_Data=0 and Max_Data=7
2346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardAutoRetryCount(USART_TypeDef *USARTx, uint32_t AutoRetryC
2349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_SCARCNT, AutoRetryCount << USART_CR3_SCARCNT_Pos);
2351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Smartcard Auto-Retry Count value (SCARCNT[2:0] bits)
2355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          SCARCNT       LL_USART_GetSmartcardAutoRetryCount
2358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Smartcard Auto-Retry Count value (Value between Min_Data=0 and Max_Data=7)
2360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardAutoRetryCount(const USART_TypeDef *USARTx)
2362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_SCARCNT) >> USART_CR3_SCARCNT_Pos);
2364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Smartcard prescaler value, used for dividing the USART clock
2368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         source to provide the SMARTCARD Clock (5 bits value)
2369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_SetSmartcardPrescaler
2372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  PrescalerValue Value between Min_Data=0 and Max_Data=31
2374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
2377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_PSC, (uint16_t)PrescalerValue);
2379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Smartcard prescaler value, used for dividing the USART clock
2383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         source to provide the SMARTCARD Clock (5 bits value)
2384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 177


2385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_GetSmartcardPrescaler
2387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Smartcard prescaler value (Value between Min_Data=0 and Max_Data=31)
2389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardPrescaler(const USART_TypeDef *USARTx)
2391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_PSC));
2393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set Smartcard Guard time value, expressed in nb of baud clocks periods
2397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (GT[7:0] bits : Guard time value)
2398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll GTPR         GT            LL_USART_SetSmartcardGuardTime
2401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  GuardTime Value between Min_Data=0x00 and Max_Data=0xFF
2403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardGuardTime(USART_TypeDef *USARTx, uint32_t GuardTime)
2406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_GT, (uint16_t)(GuardTime << USART_GTPR_GT_Pos));
2408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Smartcard Guard time value, expressed in nb of baud clocks periods
2412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (GT[7:0] bits : Guard time value)
2413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll GTPR         GT            LL_USART_GetSmartcardGuardTime
2416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Smartcard Guard time value (Value between Min_Data=0x00 and Max_Data=0xFF)
2418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardGuardTime(const USART_TypeDef *USARTx)
2420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_GT) >> USART_GTPR_GT_Pos);
2422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
2426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_HalfDuplex Configuration functions related to Half Duplex f
2429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
2430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Single Wire Half-Duplex mode
2434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
2435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_EnableHalfDuplex
2437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableHalfDuplex(USART_TypeDef *USARTx)
2441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 178


2442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_HDSEL);
2443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Single Wire Half-Duplex mode
2447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
2448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_DisableHalfDuplex
2450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableHalfDuplex(USART_TypeDef *USARTx)
2454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_HDSEL);
2456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if Single Wire Half-Duplex mode is enabled
2460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
2461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_IsEnabledHalfDuplex
2463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledHalfDuplex(const USART_TypeDef *USARTx)
2467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_HDSEL) == (USART_CR3_HDSEL)) ? 1UL : 0UL);
2469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
2473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR2_SLVEN)
2476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_SPI_SLAVE Configuration functions related to SPI Slave feat
2477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
2478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable SPI Synchronous Slave mode
2481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
2482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
2483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          SLVEN         LL_USART_EnableSPISlave
2484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSPISlave(USART_TypeDef *USARTx)
2488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_SLVEN);
2490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable SPI Synchronous Slave mode
2494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
2495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
2496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          SLVEN         LL_USART_DisableSPISlave
2497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 179


2499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSPISlave(USART_TypeDef *USARTx)
2501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_SLVEN);
2503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if  SPI Synchronous Slave mode is enabled
2507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
2508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
2509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          SLVEN         LL_USART_IsEnabledSPISlave
2510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSPISlave(const USART_TypeDef *USARTx)
2514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_SLVEN) == (USART_CR2_SLVEN)) ? 1UL : 0UL);
2516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable SPI Slave Selection using NSS input pin
2520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
2521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
2522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   SPI Slave Selection depends on NSS input pin
2523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (The slave is selected when NSS is low and deselected when NSS is high).
2524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          DIS_NSS       LL_USART_EnableSPISlaveSelect
2525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSPISlaveSelect(USART_TypeDef *USARTx)
2529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_DIS_NSS);
2531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable SPI Slave Selection using NSS input pin
2535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
2536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
2537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   SPI Slave will be always selected and NSS input pin will be ignored.
2538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          DIS_NSS       LL_USART_DisableSPISlaveSelect
2539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSPISlaveSelect(USART_TypeDef *USARTx)
2543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_DIS_NSS);
2545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if  SPI Slave Selection depends on NSS input pin
2549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
2550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
2551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          DIS_NSS       LL_USART_IsEnabledSPISlaveSelect
2552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSPISlaveSelect(const USART_TypeDef *USARTx)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 180


2556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_DIS_NSS) != (USART_CR2_DIS_NSS)) ? 1UL : 0UL);
2558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
2562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR2_SLVEN */
2565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_LIN Configuration functions related to LIN feature
2566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
2567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set LIN Break Detection Length
2571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LBDL          LL_USART_SetLINBrkDetectionLen
2574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  LINBDLength This parameter can be one of the following values:
2576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_10B
2577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_11B
2578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLINBrkDetectionLen(USART_TypeDef *USARTx, uint32_t LINBDLength)
2581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBDL, LINBDLength);
2583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return LIN Break Detection Length
2587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LBDL          LL_USART_GetLINBrkDetectionLen
2590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
2592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_10B
2593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_11B
2594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLINBrkDetectionLen(const USART_TypeDef *USARTx)
2596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBDL));
2598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable LIN mode
2602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_EnableLIN
2605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableLIN(USART_TypeDef *USARTx)
2609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LINEN);
2611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 181


2613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable LIN mode
2615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_DisableLIN
2618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableLIN(USART_TypeDef *USARTx)
2622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_LINEN);
2624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if LIN mode is enabled
2628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_IsEnabledLIN
2631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledLIN(const USART_TypeDef *USARTx)
2635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_LINEN) == (USART_CR2_LINEN)) ? 1UL : 0UL);
2637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
2641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_DE Configuration functions related to Driver Enable feature
2644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
2645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set DEDT (Driver Enable De-Assertion Time), Time value expressed on 5 bits ([4:0] bits)
2649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          DEDT          LL_USART_SetDEDeassertionTime
2652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Time Value between Min_Data=0 and Max_Data=31
2654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDEDeassertionTime(USART_TypeDef *USARTx, uint32_t Time)
2657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_DEDT, Time << USART_CR1_DEDT_Pos);
2659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return DEDT (Driver Enable De-Assertion Time)
2663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          DEDT          LL_USART_GetDEDeassertionTime
2666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Time value expressed on 5 bits ([4:0] bits) : Value between Min_Data=0 and Max_Data=31
2668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDEDeassertionTime(const USART_TypeDef *USARTx)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 182


2670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_DEDT) >> USART_CR1_DEDT_Pos);
2672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Set DEAT (Driver Enable Assertion Time), Time value expressed on 5 bits ([4:0] bits).
2676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          DEAT          LL_USART_SetDEAssertionTime
2679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Time Value between Min_Data=0 and Max_Data=31
2681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDEAssertionTime(USART_TypeDef *USARTx, uint32_t Time)
2684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_DEAT, Time << USART_CR1_DEAT_Pos);
2686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return DEAT (Driver Enable Assertion Time)
2690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          DEAT          LL_USART_GetDEAssertionTime
2693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Time value expressed on 5 bits ([4:0] bits) : Value between Min_Data=0 and Max_Data=31
2695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDEAssertionTime(const USART_TypeDef *USARTx)
2697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_DEAT) >> USART_CR1_DEAT_Pos);
2699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Driver Enable (DE) Mode
2703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          DEM           LL_USART_EnableDEMode
2706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDEMode(USART_TypeDef *USARTx)
2710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_DEM);
2712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Driver Enable (DE) Mode
2716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          DEM           LL_USART_DisableDEMode
2719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDEMode(USART_TypeDef *USARTx)
2723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_DEM);
2725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 183


2727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if Driver Enable (DE) Mode is enabled
2729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          DEM           LL_USART_IsEnabledDEMode
2732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledDEMode(const USART_TypeDef *USARTx)
2736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_DEM) == (USART_CR3_DEM)) ? 1UL : 0UL);
2738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Select Driver Enable Polarity
2742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          DEP           LL_USART_SetDESignalPolarity
2745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Polarity This parameter can be one of the following values:
2747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_HIGH
2748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_LOW
2749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDESignalPolarity(USART_TypeDef *USARTx, uint32_t Polarity)
2752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_DEP, Polarity);
2754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Return Driver Enable Polarity
2758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          DEP           LL_USART_GetDESignalPolarity
2761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
2763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_HIGH
2764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_LOW
2765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDESignalPolarity(const USART_TypeDef *USARTx)
2767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_DEP));
2769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
2773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_AdvancedConfiguration Advanced Configurations services
2776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
2777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Asynchronous Mode (UART)
2781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   In UART mode, the following bits must be kept cleared:
2782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
2783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 184


2784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
2785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
2786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
2789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
2791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
2792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Asynchronous Mode
2794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
2795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         dedicated functions
2796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigAsyncMode\n
2797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigAsyncMode\n
2798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigAsyncMode\n
2799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigAsyncMode\n
2800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigAsyncMode
2801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigAsyncMode(USART_TypeDef *USARTx)
2805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* In Asynchronous mode, the following bits must be kept cleared:
2807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - LINEN, CLKEN bits in the USART_CR2 register,
2808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - SCEN, IREN and HDSEL bits in the USART_CR3 register.
2809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
2811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
2812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Synchronous Mode
2816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   In Synchronous mode, the following bits must be kept cleared:
2817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
2818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
2819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
2820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         This function also sets the USART in Synchronous mode.
2822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
2823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
2824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
2826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
2827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
2828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Set CLKEN in CR2 using @ref LL_USART_EnableSCLKOutput() function
2830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Synchronous Mode
2831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, Clock Polarity, ...) should be set using
2832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         dedicated functions
2833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigSyncMode\n
2834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigSyncMode\n
2835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigSyncMode\n
2836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigSyncMode\n
2837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigSyncMode
2838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 185


2841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigSyncMode(USART_TypeDef *USARTx)
2842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* In Synchronous mode, the following bits must be kept cleared:
2844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - LINEN bit in the USART_CR2 register,
2845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - SCEN, IREN and HDSEL bits in the USART_CR3 register.
2846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN));
2848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
2849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* set the UART/USART in Synchronous mode */
2850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_CLKEN);
2851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in LIN Mode
2855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   In LIN mode, the following bits must be kept cleared:
2856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - STOP and CLKEN bits in the USART_CR2 register,
2857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
2858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
2859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         This function also set the UART/USART in LIN mode.
2861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
2866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
2867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
2868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Set LINEN in CR2 using @ref LL_USART_EnableLIN() function
2870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Other remaining configurations items related to LIN Mode
2871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (as Baud Rate, Word length, LIN Break Detection Length, ...) should be set using
2872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         dedicated functions
2873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_ConfigLINMode\n
2874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigLINMode\n
2875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          LINEN         LL_USART_ConfigLINMode\n
2876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigLINMode\n
2877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigLINMode\n
2878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigLINMode
2879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigLINMode(USART_TypeDef *USARTx)
2883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* In LIN mode, the following bits must be kept cleared:
2885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - STOP and CLKEN bits in the USART_CR2 register,
2886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - IREN, SCEN and HDSEL bits in the USART_CR3 register.
2887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_CLKEN | USART_CR2_STOP));
2889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN | USART_CR3_SCEN | USART_CR3_HDSEL));
2890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* Set the UART/USART in LIN mode */
2891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LINEN);
2892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Half Duplex Mode
2896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   In Half Duplex mode, the following bits must be kept cleared:
2897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 186


2898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
2899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
2900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
2901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         This function also sets the UART/USART in Half Duplex mode.
2902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
2903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
2906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
2908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
2909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Set HDSEL in CR3 using @ref LL_USART_EnableHalfDuplex() function
2910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Half Duplex Mode
2911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
2912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         dedicated functions
2913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigHalfDuplexMode\n
2914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigHalfDuplexMode\n
2915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigHalfDuplexMode\n
2916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigHalfDuplexMode\n
2917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigHalfDuplexMode
2918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigHalfDuplexMode(USART_TypeDef *USARTx)
2922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* In Half Duplex mode, the following bits must be kept cleared:
2924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - LINEN and CLKEN bits in the USART_CR2 register,
2925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - SCEN and IREN bits in the USART_CR3 register.
2926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
2928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN));
2929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* set the UART/USART in Half Duplex mode */
2930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_HDSEL);
2931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Smartcard Mode
2935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   In Smartcard mode, the following bits must be kept cleared:
2936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
2937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
2938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         This function also configures Stop bits to 1.5 bits and
2940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         sets the USART in Smartcard mode (SCEN bit).
2941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Clock Output is also enabled (CLKEN).
2942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
2946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
2947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Configure STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
2949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Set CLKEN in CR2 using @ref LL_USART_EnableSCLKOutput() function
2950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Set SCEN in CR3 using @ref LL_USART_EnableSmartcard() function
2951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Smartcard Mode
2952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
2953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         dedicated functions
2954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigSmartcardMode\n
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 187


2955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigSmartcardMode\n
2956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigSmartcardMode\n
2957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigSmartcardMode\n
2958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigSmartcardMode
2959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
2960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
2961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigSmartcardMode(USART_TypeDef *USARTx)
2963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
2964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* In Smartcard mode, the following bits must be kept cleared:
2965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - LINEN bit in the USART_CR2 register,
2966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - IREN and HDSEL bits in the USART_CR3 register.
2967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
2968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN));
2969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN | USART_CR3_HDSEL));
2970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* Configure Stop bits to 1.5 bits */
2971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* Synchronous mode is activated by default */
2972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, (USART_CR2_STOP_0 | USART_CR2_STOP_1 | USART_CR2_CLKEN));
2973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* set the UART/USART in Smartcard mode */
2974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_SCEN);
2975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
2976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
2977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
2978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Irda Mode
2979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   In IRDA mode, the following bits must be kept cleared:
2980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
2981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - STOP and CLKEN bits in the USART_CR2 register,
2982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
2983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         This function also sets the UART/USART in IRDA mode (IREN bit).
2985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
2989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
2991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Configure STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
2993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Set IREN in CR3 using @ref LL_USART_EnableIrda() function
2994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Irda Mode
2995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (as Baud Rate, Word length, Power mode, ...) should be set using
2996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         dedicated functions
2997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigIrdaMode\n
2998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigIrdaMode\n
2999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigIrdaMode\n
3000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigIrdaMode\n
3001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigIrdaMode\n
3002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigIrdaMode
3003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigIrdaMode(USART_TypeDef *USARTx)
3007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* In IRDA mode, the following bits must be kept cleared:
3009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - LINEN, STOP and CLKEN bits in the USART_CR2 register,
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - SCEN and HDSEL bits in the USART_CR3 register.
3011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 188


3012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN | USART_CR2_STOP));
3013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
3014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* set the UART/USART in IRDA mode */
3015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_IREN);
3016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Multi processor Mode
3020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (several USARTs connected in a network, one of the USARTs can be the master,
3021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         its TX output connected to the RX inputs of the other slaves USARTs).
3022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   In MultiProcessor mode, the following bits must be kept cleared:
3023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
3024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
3025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
3026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
3027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
3028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
3029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
3030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
3031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
3032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
3033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
3034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Multi processor Mode
3035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         (as Baud Rate, Wake Up Method, Node address, ...) should be set using
3036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         dedicated functions
3037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigMultiProcessMode\n
3038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigMultiProcessMode\n
3039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigMultiProcessMode\n
3040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigMultiProcessMode\n
3041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigMultiProcessMode
3042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigMultiProcessMode(USART_TypeDef *USARTx)
3046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   /* In Multi Processor mode, the following bits must be kept cleared:
3048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - LINEN and CLKEN bits in the USART_CR2 register,
3049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   - IREN, SCEN and HDSEL bits in the USART_CR3 register.
3050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
3052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
3053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
3057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_FLAG_Management FLAG_Management
3060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
3061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Parity Error Flag is set or not
3065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          PE            LL_USART_IsActiveFlag_PE
3066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 189


3069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_PE(const USART_TypeDef *USARTx)
3070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_PE) == (USART_ISR_PE)) ? 1UL : 0UL);
3072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Framing Error Flag is set or not
3076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          FE            LL_USART_IsActiveFlag_FE
3077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_FE(const USART_TypeDef *USARTx)
3081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_FE) == (USART_ISR_FE)) ? 1UL : 0UL);
3083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Noise error detected Flag is set or not
3087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          NE            LL_USART_IsActiveFlag_NE
3088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_NE(const USART_TypeDef *USARTx)
3092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_NE) == (USART_ISR_NE)) ? 1UL : 0UL);
3094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART OverRun Error Flag is set or not
3098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          ORE           LL_USART_IsActiveFlag_ORE
3099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_ORE(const USART_TypeDef *USARTx)
3103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_ORE) == (USART_ISR_ORE)) ? 1UL : 0UL);
3105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART IDLE line detected Flag is set or not
3109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          IDLE          LL_USART_IsActiveFlag_IDLE
3110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_IDLE(const USART_TypeDef *USARTx)
3114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_IDLE) == (USART_ISR_IDLE)) ? 1UL : 0UL);
3116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
3119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Legacy define */
3120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_IsActiveFlag_RXNE  LL_USART_IsActiveFlag_RXNE_RXFNE
3121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Read Data Register or USART RX FIFO Not Empty Flag is set or not
3124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
3125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 190


3126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          RXNE_RXFNE    LL_USART_IsActiveFlag_RXNE_RXFNE
3127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RXNE_RXFNE(const USART_TypeDef *USARTx)
3131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_RXNE_RXFNE) == (USART_ISR_RXNE_RXFNE)) ? 1UL : 0UL);
3133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
3136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Read Data Register Not Empty Flag is set or not
3138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          RXNE          LL_USART_IsActiveFlag_RXNE
3139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RXNE(const USART_TypeDef *USARTx)
3143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_RXNE) == (USART_ISR_RXNE)) ? 1UL : 0UL);
3145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
3148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Transmission Complete Flag is set or not
3150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          TC            LL_USART_IsActiveFlag_TC
3151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TC(const USART_TypeDef *USARTx)
3155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_TC) == (USART_ISR_TC)) ? 1UL : 0UL);
3157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
3160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Legacy define */
3161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_IsActiveFlag_TXE  LL_USART_IsActiveFlag_TXE_TXFNF
3162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Transmit Data Register Empty or USART TX FIFO Not Full Flag is set o
3165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
3166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
3167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          TXE_TXFNF     LL_USART_IsActiveFlag_TXE_TXFNF
3168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TXE_TXFNF(const USART_TypeDef *USARTx)
3172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_TXE_TXFNF) == (USART_ISR_TXE_TXFNF)) ? 1UL : 0UL);
3174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
3177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Transmit Data Register Empty Flag is set or not
3179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          TXE           LL_USART_IsActiveFlag_TXE
3180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 191


3183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TXE(const USART_TypeDef *USARTx)
3184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_TXE) == (USART_ISR_TXE)) ? 1UL : 0UL);
3186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
3189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART LIN Break Detection Flag is set or not
3191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
3192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
3193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          LBDF          LL_USART_IsActiveFlag_LBD
3194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_LBD(const USART_TypeDef *USARTx)
3198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_LBDF) == (USART_ISR_LBDF)) ? 1UL : 0UL);
3200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART CTS interrupt Flag is set or not
3204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
3205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
3206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          CTSIF         LL_USART_IsActiveFlag_nCTS
3207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_nCTS(const USART_TypeDef *USARTx)
3211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_CTSIF) == (USART_ISR_CTSIF)) ? 1UL : 0UL);
3213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART CTS Flag is set or not
3217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
3218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
3219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          CTS           LL_USART_IsActiveFlag_CTS
3220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_CTS(const USART_TypeDef *USARTx)
3224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_CTS) == (USART_ISR_CTS)) ? 1UL : 0UL);
3226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Receiver Time Out Flag is set or not
3230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          RTOF          LL_USART_IsActiveFlag_RTO
3231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RTO(const USART_TypeDef *USARTx)
3235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_RTOF) == (USART_ISR_RTOF)) ? 1UL : 0UL);
3237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 192


3240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART End Of Block Flag is set or not
3241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
3242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
3243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          EOBF          LL_USART_IsActiveFlag_EOB
3244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_EOB(const USART_TypeDef *USARTx)
3248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_EOBF) == (USART_ISR_EOBF)) ? 1UL : 0UL);
3250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR2_SLVEN)
3253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the SPI Slave Underrun error flag is set or not
3255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
3256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
3257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          UDR           LL_USART_IsActiveFlag_UDR
3258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_UDR(const USART_TypeDef *USARTx)
3262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_UDR) == (USART_ISR_UDR)) ? 1UL : 0UL);
3264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR2_SLVEN */
3267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Auto-Baud Rate Error Flag is set or not
3269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
3270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
3271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          ABRE          LL_USART_IsActiveFlag_ABRE
3272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_ABRE(const USART_TypeDef *USARTx)
3276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_ABRE) == (USART_ISR_ABRE)) ? 1UL : 0UL);
3278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Auto-Baud Rate Flag is set or not
3282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
3283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
3284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          ABRF          LL_USART_IsActiveFlag_ABR
3285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_ABR(const USART_TypeDef *USARTx)
3289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_ABRF) == (USART_ISR_ABRF)) ? 1UL : 0UL);
3291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Busy Flag is set or not
3295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          BUSY          LL_USART_IsActiveFlag_BUSY
3296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 193


3297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_BUSY(const USART_TypeDef *USARTx)
3300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_BUSY) == (USART_ISR_BUSY)) ? 1UL : 0UL);
3302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Character Match Flag is set or not
3306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          CMF           LL_USART_IsActiveFlag_CM
3307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_CM(const USART_TypeDef *USARTx)
3311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_CMF) == (USART_ISR_CMF)) ? 1UL : 0UL);
3313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Send Break Flag is set or not
3317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          SBKF          LL_USART_IsActiveFlag_SBK
3318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_SBK(const USART_TypeDef *USARTx)
3322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_SBKF) == (USART_ISR_SBKF)) ? 1UL : 0UL);
3324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Receive Wake Up from mute mode Flag is set or not
3328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          RWU           LL_USART_IsActiveFlag_RWU
3329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RWU(const USART_TypeDef *USARTx)
3333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_RWU) == (USART_ISR_RWU)) ? 1UL : 0UL);
3335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Wake Up from stop mode Flag is set or not
3339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
3340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
3341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          WUF           LL_USART_IsActiveFlag_WKUP
3342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_WKUP(const USART_TypeDef *USARTx)
3346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_WUF) == (USART_ISR_WUF)) ? 1UL : 0UL);
3348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Transmit Enable Acknowledge Flag is set or not
3352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          TEACK         LL_USART_IsActiveFlag_TEACK
3353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 194


3354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TEACK(const USART_TypeDef *USARTx)
3357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_TEACK) == (USART_ISR_TEACK)) ? 1UL : 0UL);
3359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Receive Enable Acknowledge Flag is set or not
3363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          REACK         LL_USART_IsActiveFlag_REACK
3364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_REACK(const USART_TypeDef *USARTx)
3368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_REACK) == (USART_ISR_REACK)) ? 1UL : 0UL);
3370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
3373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART TX FIFO Empty Flag is set or not
3375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
3376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
3377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          TXFE          LL_USART_IsActiveFlag_TXFE
3378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TXFE(const USART_TypeDef *USARTx)
3382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_TXFE) == (USART_ISR_TXFE)) ? 1UL : 0UL);
3384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART RX FIFO Full Flag is set or not
3388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
3389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
3390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          RXFF          LL_USART_IsActiveFlag_RXFF
3391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RXFF(const USART_TypeDef *USARTx)
3395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_RXFF) == (USART_ISR_RXFF)) ? 1UL : 0UL);
3397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
3400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_TCBGT_SUPPORT)
3401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Function available only on devices supporting Transmit Complete before Guard Time feature */
3402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the Smartcard Transmission Complete Before Guard Time Flag is set or not
3404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          TCBGT         LL_USART_IsActiveFlag_TCBGT
3405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TCBGT(const USART_TypeDef *USARTx)
3409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_TCBGT) == (USART_ISR_TCBGT)) ? 1UL : 0UL);
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 195


3411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_TCBGT_SUPPORT */
3414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
3415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART TX FIFO Threshold Flag is set or not
3417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
3418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
3419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          TXFT          LL_USART_IsActiveFlag_TXFT
3420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TXFT(const USART_TypeDef *USARTx)
3424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_TXFT) == (USART_ISR_TXFT)) ? 1UL : 0UL);
3426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART RX FIFO Threshold Flag is set or not
3430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
3431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
3432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ISR          RXFT          LL_USART_IsActiveFlag_RXFT
3433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RXFT(const USART_TypeDef *USARTx)
3437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_RXFT) == (USART_ISR_RXFT)) ? 1UL : 0UL);
3439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
3442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear Parity Error Flag
3444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          PECF          LL_USART_ClearFlag_PE
3445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_PE(USART_TypeDef *USARTx)
3449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_PECF);
3451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear Framing Error Flag
3455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          FECF          LL_USART_ClearFlag_FE
3456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_FE(USART_TypeDef *USARTx)
3460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_FECF);
3462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear Noise Error detected Flag
3466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          NECF          LL_USART_ClearFlag_NE
3467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 196


3468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_NE(USART_TypeDef *USARTx)
3471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_NECF);
3473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear OverRun Error Flag
3477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          ORECF         LL_USART_ClearFlag_ORE
3478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_ORE(USART_TypeDef *USARTx)
3482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_ORECF);
3484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear IDLE line detected Flag
3488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          IDLECF        LL_USART_ClearFlag_IDLE
3489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_IDLE(USART_TypeDef *USARTx)
3493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_IDLECF);
3495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
3498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear TX FIFO Empty Flag
3500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
3501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
3502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          TXFECF        LL_USART_ClearFlag_TXFE
3503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_TXFE(USART_TypeDef *USARTx)
3507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_TXFECF);
3509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
3512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear Transmission Complete Flag
3514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          TCCF          LL_USART_ClearFlag_TC
3515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_TC(USART_TypeDef *USARTx)
3519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_TCCF);
3521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_TCBGT_SUPPORT)
3524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Function available only on devices supporting Transmit Complete before Guard Time feature */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 197


3525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear Smartcard Transmission Complete Before Guard Time Flag
3527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          TCBGTCF       LL_USART_ClearFlag_TCBGT
3528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_TCBGT(USART_TypeDef *USARTx)
3532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_TCBGTCF);
3534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_TCBGT_SUPPORT */
3536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear LIN Break Detection Flag
3539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
3540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
3541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          LBDCF         LL_USART_ClearFlag_LBD
3542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_LBD(USART_TypeDef *USARTx)
3546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_LBDCF);
3548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear CTS Interrupt Flag
3552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
3553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
3554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          CTSCF         LL_USART_ClearFlag_nCTS
3555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_nCTS(USART_TypeDef *USARTx)
3559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_CTSCF);
3561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear Receiver Time Out Flag
3565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          RTOCF         LL_USART_ClearFlag_RTO
3566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_RTO(USART_TypeDef *USARTx)
3570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_RTOCF);
3572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear End Of Block Flag
3576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
3577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
3578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          EOBCF         LL_USART_ClearFlag_EOB
3579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 198


3582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_EOB(USART_TypeDef *USARTx)
3583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_EOBCF);
3585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR2_SLVEN)
3588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear SPI Slave Underrun Flag
3590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_SPI_SLAVE_INSTANCE(USARTx) can be used to check whether or not
3591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         SPI Slave mode feature is supported by the USARTx instance.
3592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          UDRCF         LL_USART_ClearFlag_UDR
3593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_UDR(USART_TypeDef *USARTx)
3597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_UDRCF);
3599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR2_SLVEN */
3602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear Character Match Flag
3604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          CMCF          LL_USART_ClearFlag_CM
3605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_CM(USART_TypeDef *USARTx)
3609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_CMCF);
3611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Clear Wake Up from stop mode Flag
3615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
3616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
3617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll ICR          WUCF          LL_USART_ClearFlag_WKUP
3618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_WKUP(USART_TypeDef *USARTx)
3622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_WUCF);
3624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
3628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_IT_Management IT_Management
3631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
3632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable IDLE Interrupt
3636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          IDLEIE        LL_USART_EnableIT_IDLE
3637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 199


3639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_IDLE(USART_TypeDef *USARTx)
3641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_IDLEIE);
3643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
3646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Legacy define */
3647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_EnableIT_RXNE  LL_USART_EnableIT_RXNE_RXFNE
3648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable RX Not Empty and RX FIFO Not Empty Interrupt
3651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
3652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
3653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1        RXNEIE_RXFNEIE  LL_USART_EnableIT_RXNE_RXFNE
3654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_RXNE_RXFNE(USART_TypeDef *USARTx)
3658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_RXNEIE_RXFNEIE);
3660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
3663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable RX Not Empty Interrupt
3665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          RXNEIE        LL_USART_EnableIT_RXNE
3666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_RXNE(USART_TypeDef *USARTx)
3670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_RXNEIE);
3672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
3675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Transmission Complete Interrupt
3677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          TCIE          LL_USART_EnableIT_TC
3678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_TC(USART_TypeDef *USARTx)
3682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_TCIE);
3684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
3687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Legacy define */
3688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_EnableIT_TXE  LL_USART_EnableIT_TXE_TXFNF
3689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable TX Empty and TX FIFO Not Full Interrupt
3692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
3693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
3694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1         TXEIE_TXFNFIE  LL_USART_EnableIT_TXE_TXFNF
3695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 200


3696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_TXE_TXFNF(USART_TypeDef *USARTx)
3699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_TXEIE_TXFNFIE);
3701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
3704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable TX Empty Interrupt
3706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          TXEIE         LL_USART_EnableIT_TXE
3707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_TXE(USART_TypeDef *USARTx)
3711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_TXEIE);
3713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
3716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Parity Error Interrupt
3718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          PEIE          LL_USART_EnableIT_PE
3719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_PE(USART_TypeDef *USARTx)
3723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_PEIE);
3725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Character Match Interrupt
3729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          CMIE          LL_USART_EnableIT_CM
3730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_CM(USART_TypeDef *USARTx)
3734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_CMIE);
3736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Receiver Timeout Interrupt
3740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          RTOIE         LL_USART_EnableIT_RTO
3741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_RTO(USART_TypeDef *USARTx)
3745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_RTOIE);
3747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable End Of Block Interrupt
3751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
3752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 201


3753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          EOBIE         LL_USART_EnableIT_EOB
3754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_EOB(USART_TypeDef *USARTx)
3758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_EOBIE);
3760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
3763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable TX FIFO Empty Interrupt
3765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
3766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
3767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          TXFEIE        LL_USART_EnableIT_TXFE
3768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_TXFE(USART_TypeDef *USARTx)
3772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_TXFEIE);
3774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable RX FIFO Full Interrupt
3778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          RXFFIE        LL_USART_EnableIT_RXFF
3779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_RXFF(USART_TypeDef *USARTx)
3783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_RXFFIE);
3785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
3788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable LIN Break Detection Interrupt
3790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
3791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
3792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LBDIE         LL_USART_EnableIT_LBD
3793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_LBD(USART_TypeDef *USARTx)
3797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LBDIE);
3799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Error Interrupt
3803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   When set, Error Interrupt Enable Bit is enabling interrupt generation in case of a fram
3804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         error, overrun error or noise flag (FE=1 or ORE=1 or NF=1 in the USARTx_ISR register).
3805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           0: Interrupt is inhibited
3806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           1: An interrupt is generated when FE=1 or ORE=1 or NF=1 in the USARTx_ISR register.
3807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          EIE           LL_USART_EnableIT_ERROR
3808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 202


3810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_ERROR(USART_TypeDef *USARTx)
3812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR3, USART_CR3_EIE);
3814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable CTS Interrupt
3818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
3819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
3820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          CTSIE         LL_USART_EnableIT_CTS
3821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_CTS(USART_TypeDef *USARTx)
3825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR3, USART_CR3_CTSIE);
3827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Wake Up from Stop Mode Interrupt
3831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
3832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
3833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          WUFIE         LL_USART_EnableIT_WKUP
3834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_WKUP(USART_TypeDef *USARTx)
3838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR3, USART_CR3_WUFIE);
3840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
3843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable TX FIFO Threshold Interrupt
3845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
3846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
3847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          TXFTIE        LL_USART_EnableIT_TXFT
3848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_TXFT(USART_TypeDef *USARTx)
3852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR3, USART_CR3_TXFTIE);
3854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
3857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_TCBGT_SUPPORT)
3858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Function available only on devices supporting Transmit Complete before Guard Time feature */
3859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable Smartcard Transmission Complete Before Guard Time Interrupt
3861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
3862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
3863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          TCBGTIE       LL_USART_EnableIT_TCBGT
3864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 203


3867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_TCBGT(USART_TypeDef *USARTx)
3868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR3, USART_CR3_TCBGTIE);
3870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_TCBGT_SUPPORT */
3872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
3874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable RX FIFO Threshold Interrupt
3876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
3877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
3878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          RXFTIE        LL_USART_EnableIT_RXFT
3879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_RXFT(USART_TypeDef *USARTx)
3883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR3, USART_CR3_RXFTIE);
3885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
3888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable IDLE Interrupt
3890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          IDLEIE        LL_USART_DisableIT_IDLE
3891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_IDLE(USART_TypeDef *USARTx)
3895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_IDLEIE);
3897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
3900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Legacy define */
3901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DisableIT_RXNE  LL_USART_DisableIT_RXNE_RXFNE
3902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable RX Not Empty and RX FIFO Not Empty Interrupt
3905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
3906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
3907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1        RXNEIE_RXFNEIE  LL_USART_DisableIT_RXNE_RXFNE
3908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_RXNE_RXFNE(USART_TypeDef *USARTx)
3912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_RXNEIE_RXFNEIE);
3914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
3917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable RX Not Empty Interrupt
3919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          RXNEIE        LL_USART_DisableIT_RXNE
3920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_RXNE(USART_TypeDef *USARTx)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 204


3924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_RXNEIE);
3926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
3929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Transmission Complete Interrupt
3931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          TCIE          LL_USART_DisableIT_TC
3932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_TC(USART_TypeDef *USARTx)
3936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_TCIE);
3938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
3941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Legacy define */
3942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_DisableIT_TXE  LL_USART_DisableIT_TXE_TXFNF
3943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable TX Empty and TX FIFO Not Full Interrupt
3946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
3947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
3948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1        TXEIE_TXFNFIE  LL_USART_DisableIT_TXE_TXFNF
3949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_TXE_TXFNF(USART_TypeDef *USARTx)
3953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_TXEIE_TXFNFIE);
3955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
3958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable TX Empty Interrupt
3960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          TXEIE         LL_USART_DisableIT_TXE
3961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_TXE(USART_TypeDef *USARTx)
3965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_TXEIE);
3967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
3970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Parity Error Interrupt
3972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          PEIE          LL_USART_DisableIT_PE
3973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_PE(USART_TypeDef *USARTx)
3977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_PEIE);
3979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 205


3981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Character Match Interrupt
3983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          CMIE          LL_USART_DisableIT_CM
3984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_CM(USART_TypeDef *USARTx)
3988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
3989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_CMIE);
3990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
3991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
3992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
3993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Receiver Timeout Interrupt
3994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          RTOIE         LL_USART_DisableIT_RTO
3995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
3996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
3997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
3998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_RTO(USART_TypeDef *USARTx)
3999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_RTOIE);
4001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable End Of Block Interrupt
4005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
4006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
4007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          EOBIE         LL_USART_DisableIT_EOB
4008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
4010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_EOB(USART_TypeDef *USARTx)
4012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_EOBIE);
4014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
4017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable TX FIFO Empty Interrupt
4019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
4020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
4021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          TXFEIE        LL_USART_DisableIT_TXFE
4022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
4024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_TXFE(USART_TypeDef *USARTx)
4026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_TXFEIE);
4028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable RX FIFO Full Interrupt
4032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
4033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
4034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          RXFFIE        LL_USART_DisableIT_RXFF
4035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
4037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 206


4038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_RXFF(USART_TypeDef *USARTx)
4039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_RXFFIE);
4041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
4044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable LIN Break Detection Interrupt
4046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
4047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
4048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LBDIE         LL_USART_DisableIT_LBD
4049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
4051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_LBD(USART_TypeDef *USARTx)
4053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_LBDIE);
4055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Error Interrupt
4059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   When set, Error Interrupt Enable Bit is enabling interrupt generation in case of a fram
4060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         error, overrun error or noise flag (FE=1 or ORE=1 or NF=1 in the USARTx_ISR register).
4061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           0: Interrupt is inhibited
4062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *           1: An interrupt is generated when FE=1 or ORE=1 or NF=1 in the USARTx_ISR register.
4063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          EIE           LL_USART_DisableIT_ERROR
4064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
4066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_ERROR(USART_TypeDef *USARTx)
4068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR3, USART_CR3_EIE);
4070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable CTS Interrupt
4074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
4075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
4076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          CTSIE         LL_USART_DisableIT_CTS
4077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
4079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_CTS(USART_TypeDef *USARTx)
4081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR3, USART_CR3_CTSIE);
4083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Wake Up from Stop Mode Interrupt
4087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
4088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
4089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          WUFIE         LL_USART_DisableIT_WKUP
4090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
4092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_WKUP(USART_TypeDef *USARTx)
4094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 207


4095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR3, USART_CR3_WUFIE);
4096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
4099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable TX FIFO Threshold Interrupt
4101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
4102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
4103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          TXFTIE        LL_USART_DisableIT_TXFT
4104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
4106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_TXFT(USART_TypeDef *USARTx)
4108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR3, USART_CR3_TXFTIE);
4110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
4113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_TCBGT_SUPPORT)
4114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Function available only on devices supporting Transmit Complete before Guard Time feature */
4115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable Smartcard Transmission Complete Before Guard Time Interrupt
4117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
4118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
4119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          TCBGTIE       LL_USART_DisableIT_TCBGT
4120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
4122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_TCBGT(USART_TypeDef *USARTx)
4124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR3, USART_CR3_TCBGTIE);
4126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_TCBGT_SUPPORT */
4128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
4130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable RX FIFO Threshold Interrupt
4132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
4133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
4134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          RXFTIE        LL_USART_DisableIT_RXFT
4135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
4137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_RXFT(USART_TypeDef *USARTx)
4139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR3, USART_CR3_RXFTIE);
4141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
4144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART IDLE Interrupt  source is enabled or disabled.
4146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          IDLEIE        LL_USART_IsEnabledIT_IDLE
4147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
4149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_IDLE(const USART_TypeDef *USARTx)
4151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 208


4152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_IDLEIE) == (USART_CR1_IDLEIE)) ? 1UL : 0UL);
4153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
4156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Legacy define */
4157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_IsEnabledIT_RXNE  LL_USART_IsEnabledIT_RXNE_RXFNE
4158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART RX Not Empty and USART RX FIFO Not Empty Interrupt is enabled or dis
4161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
4162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
4163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1        RXNEIE_RXFNEIE  LL_USART_IsEnabledIT_RXNE_RXFNE
4164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
4166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_RXNE_RXFNE(const USART_TypeDef *USARTx)
4168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_RXNEIE_RXFNEIE) == (USART_CR1_RXNEIE_RXFNEIE)) ? 1UL : 0
4170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
4173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART RX Not Empty Interrupt is enabled or disabled.
4175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          RXNEIE        LL_USART_IsEnabledIT_RXNE
4176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
4178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_RXNE(const USART_TypeDef *USARTx)
4180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_RXNEIE) == (USART_CR1_RXNEIE)) ? 1U : 0U);
4182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
4185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Transmission Complete Interrupt is enabled or disabled.
4187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          TCIE          LL_USART_IsEnabledIT_TC
4188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
4190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_TC(const USART_TypeDef *USARTx)
4192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_TCIE) == (USART_CR1_TCIE)) ? 1UL : 0UL);
4194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
4197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Legacy define */
4198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #define LL_USART_IsEnabledIT_TXE  LL_USART_IsEnabledIT_TXE_TXFNF
4199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART TX Empty and USART TX FIFO Not Full Interrupt is enabled or disabled
4202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
4203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
4204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1         TXEIE_TXFNFIE  LL_USART_IsEnabledIT_TXE_TXFNF
4205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
4207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_TXE_TXFNF(const USART_TypeDef *USARTx)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 209


4209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_TXEIE_TXFNFIE) == (USART_CR1_TXEIE_TXFNFIE)) ? 1UL : 0UL
4211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #else
4214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART TX Empty Interrupt is enabled or disabled.
4216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          TXEIE         LL_USART_IsEnabledIT_TXE
4217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
4219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_TXE(const USART_TypeDef *USARTx)
4221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_TXEIE) == (USART_CR1_TXEIE)) ? 1U : 0U);
4223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
4226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Parity Error Interrupt is enabled or disabled.
4228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          PEIE          LL_USART_IsEnabledIT_PE
4229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
4231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_PE(const USART_TypeDef *USARTx)
4233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_PEIE) == (USART_CR1_PEIE)) ? 1UL : 0UL);
4235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Character Match Interrupt is enabled or disabled.
4239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          CMIE          LL_USART_IsEnabledIT_CM
4240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
4242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_CM(const USART_TypeDef *USARTx)
4244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_CMIE) == (USART_CR1_CMIE)) ? 1UL : 0UL);
4246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Receiver Timeout Interrupt is enabled or disabled.
4250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          RTOIE         LL_USART_IsEnabledIT_RTO
4251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
4253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_RTO(const USART_TypeDef *USARTx)
4255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_RTOIE) == (USART_CR1_RTOIE)) ? 1UL : 0UL);
4257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART End Of Block Interrupt is enabled or disabled.
4261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
4262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
4263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          EOBIE         LL_USART_IsEnabledIT_EOB
4264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 210


4266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_EOB(const USART_TypeDef *USARTx)
4268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_EOBIE) == (USART_CR1_EOBIE)) ? 1UL : 0UL);
4270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
4273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART TX FIFO Empty Interrupt is enabled or disabled
4275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
4276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
4277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          TXFEIE        LL_USART_IsEnabledIT_TXFE
4278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
4280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_TXFE(const USART_TypeDef *USARTx)
4282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_TXFEIE) == (USART_CR1_TXFEIE)) ? 1UL : 0UL);
4284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART RX FIFO Full Interrupt is enabled or disabled
4288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
4289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
4290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR1          RXFFIE        LL_USART_IsEnabledIT_RXFF
4291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
4293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_RXFF(const USART_TypeDef *USARTx)
4295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_RXFFIE) == (USART_CR1_RXFFIE)) ? 1UL : 0UL);
4297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
4300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART LIN Break Detection Interrupt is enabled or disabled.
4302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
4303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
4304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR2          LBDIE         LL_USART_IsEnabledIT_LBD
4305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
4307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_LBD(const USART_TypeDef *USARTx)
4309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_LBDIE) == (USART_CR2_LBDIE)) ? 1UL : 0UL);
4311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Error Interrupt is enabled or disabled.
4315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          EIE           LL_USART_IsEnabledIT_ERROR
4316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
4318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_ERROR(const USART_TypeDef *USARTx)
4320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_EIE) == (USART_CR3_EIE)) ? 1UL : 0UL);
4322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 211


4323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART CTS Interrupt is enabled or disabled.
4326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
4327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
4328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          CTSIE         LL_USART_IsEnabledIT_CTS
4329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
4331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_CTS(const USART_TypeDef *USARTx)
4333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_CTSIE) == (USART_CR3_CTSIE)) ? 1UL : 0UL);
4335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the USART Wake Up from Stop Mode Interrupt is enabled or disabled.
4339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
4340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
4341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          WUFIE         LL_USART_IsEnabledIT_WKUP
4342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
4344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_WKUP(const USART_TypeDef *USARTx)
4346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_WUFIE) == (USART_CR3_WUFIE)) ? 1UL : 0UL);
4348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
4351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if USART TX FIFO Threshold Interrupt is enabled or disabled
4353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
4354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
4355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          TXFTIE        LL_USART_IsEnabledIT_TXFT
4356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
4358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_TXFT(const USART_TypeDef *USARTx)
4360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_TXFTIE) == (USART_CR3_TXFTIE)) ? 1UL : 0UL);
4362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
4365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_TCBGT_SUPPORT)
4366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /* Function available only on devices supporting Transmit Complete before Guard Time feature */
4367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if the Smartcard Transmission Complete Before Guard Time Interrupt is enabled or 
4369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
4370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
4371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          TCBGTIE       LL_USART_IsEnabledIT_TCBGT
4372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
4374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_TCBGT(const USART_TypeDef *USARTx)
4376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_TCBGTIE) == (USART_CR3_TCBGTIE)) ? 1UL : 0UL);
4378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_TCBGT_SUPPORT */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 212


4380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #if defined(USART_CR1_FIFOEN)
4382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if USART RX FIFO Threshold Interrupt is enabled or disabled
4384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @note   Macro IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
4385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
4386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          RXFTIE        LL_USART_IsEnabledIT_RXFT
4387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
4389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_RXFT(const USART_TypeDef *USARTx)
4391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_RXFTIE) == (USART_CR3_RXFTIE)) ? 1UL : 0UL);
4393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** #endif /* USART_CR1_FIFOEN */
4396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @}
4398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /** @defgroup USART_LL_EF_DMA_Management DMA_Management
4401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @{
4402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable DMA Mode for reception
4406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          DMAR          LL_USART_EnableDMAReq_RX
4407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
4409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDMAReq_RX(USART_TypeDef *USARTx)
4411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR3, USART_CR3_DMAR);
4413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable DMA Mode for reception
4417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          DMAR          LL_USART_DisableDMAReq_RX
4418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
4420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDMAReq_RX(USART_TypeDef *USARTx)
4422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR3, USART_CR3_DMAR);
4424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if DMA Mode is enabled for reception
4428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          DMAR          LL_USART_IsEnabledDMAReq_RX
4429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
4431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledDMAReq_RX(const USART_TypeDef *USARTx)
4433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_DMAR) == (USART_CR3_DMAR)) ? 1UL : 0UL);
4435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 213


4437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable DMA Mode for transmission
4439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          DMAT          LL_USART_EnableDMAReq_TX
4440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
4442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDMAReq_TX(USART_TypeDef *USARTx)
4444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR3, USART_CR3_DMAT);
4446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable DMA Mode for transmission
4450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          DMAT          LL_USART_DisableDMAReq_TX
4451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
4453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDMAReq_TX(USART_TypeDef *USARTx)
4455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR3, USART_CR3_DMAT);
4457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Check if DMA Mode is enabled for transmission
4461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          DMAT          LL_USART_IsEnabledDMAReq_TX
4462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
4464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledDMAReq_TX(const USART_TypeDef *USARTx)
4466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_DMAT) == (USART_CR3_DMAT)) ? 1UL : 0UL);
4468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Enable DMA Disabling on Reception Error
4472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          DDRE          LL_USART_EnableDMADeactOnRxErr
4473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
4475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDMADeactOnRxErr(USART_TypeDef *USARTx)
4477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_DDRE);
4479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Disable DMA Disabling on Reception Error
4483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          DDRE          LL_USART_DisableDMADeactOnRxErr
4484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval None
4486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDMADeactOnRxErr(USART_TypeDef *USARTx)
4488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_DDRE);
4490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Indicate if DMA Disabling on Reception Error is disabled
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 214


4494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll CR3          DDRE          LL_USART_IsEnabledDMADeactOnRxErr
4495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
4497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledDMADeactOnRxErr(const USART_TypeDef *USARTx)
4499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_DDRE) == (USART_CR3_DDRE)) ? 1UL : 0UL);
4501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
4502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** /**
4504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @brief  Get the data register address used for DMA transfer
4505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll RDR          RDR           LL_USART_DMA_GetRegAddr\n
4506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @rmtoll TDR          TDR           LL_USART_DMA_GetRegAddr
4507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  USARTx USART Instance
4508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @param  Direction This parameter can be one of the following values:
4509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DMA_REG_DATA_TRANSMIT
4510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   *         @arg @ref LL_USART_DMA_REG_DATA_RECEIVE
4511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   * @retval Address of data register
4512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   */
4513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_DMA_GetRegAddr(const USART_TypeDef *USARTx, uint32_t Direction)
 301              		.loc 6 4513 26 view .LVU90
 302              	.LBB287:
4514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
4515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   uint32_t data_reg_addr;
 303              		.loc 6 4515 3 view .LVU91
4516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   if (Direction == LL_USART_DMA_REG_DATA_TRANSMIT)
 304              		.loc 6 4517 3 view .LVU92
4518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   {
4519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     /* return address of TDR register */
4520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     data_reg_addr = (uint32_t) &(USARTx->TDR);
4521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   }
4522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   else
4523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   {
4524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     /* return address of RDR register */
4525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****     data_reg_addr = (uint32_t) &(USARTx->RDR);
 305              		.loc 6 4525 5 view .LVU93
 306              		.loc 6 4525 32 is_stmt 0 view .LVU94
 307 00da 4B4A     		ldr	r2, .L10+4
 308              	.LVL16:
4526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   }
4527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
4528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   return data_reg_addr;
 309              		.loc 6 4528 3 is_stmt 1 view .LVU95
 310              		.loc 6 4528 3 is_stmt 0 view .LVU96
 311              	.LBE287:
 312              	.LBE286:
 313              	.LBB288:
 314              	.LBI288:
1107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 315              		.loc 4 1107 22 is_stmt 1 view .LVU97
 316              	.LBB289:
1109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CPAR, PeriphAdd
 317              		.loc 4 1109 3 view .LVU98
1110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 318              		.loc 4 1110 3 view .LVU99
 319 00dc 1A66     		str	r2, [r3, #96]
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 215


 320              	.LVL17:
1110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 321              		.loc 4 1110 3 is_stmt 0 view .LVU100
 322              	.LBE289:
 323              	.LBE288:
  76:Core/Src/usart.c ****     LL_DMA_SetMemoryAddress(DMA1, LL_DMA_CHANNEL_5, (uint32_t)Buffs.RxBuffer_DMA);
 324              		.loc 1 76 5 is_stmt 1 view .LVU101
 325 00de 4B4A     		ldr	r2, .L10+8
 326              	.LVL18:
 327              	.LBB290:
 328              	.LBI290:
1084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 329              		.loc 4 1084 22 view .LVU102
 330              	.LBB291:
1086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CMAR, MemoryAdd
 331              		.loc 4 1086 3 view .LVU103
1087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 332              		.loc 4 1087 3 view .LVU104
 333 00e0 5A66     		str	r2, [r3, #100]
 334              	.LVL19:
1087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 335              		.loc 4 1087 3 is_stmt 0 view .LVU105
 336              	.LBE291:
 337              	.LBE290:
  77:Core/Src/usart.c ****     LL_DMA_SetDataLength(DMA1, LL_DMA_CHANNEL_5, ARRAY_LEN(Buffs.RxBuffer_DMA));
 338              		.loc 1 77 5 is_stmt 1 view .LVU106
 339              	.LBB292:
 340              	.LBI292:
 996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 341              		.loc 4 996 22 view .LVU107
 342              	.LBB293:
 998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CNDTR,
 343              		.loc 4 998 3 view .LVU108
 999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              DMA_CNDTR_NDT, NbData);
 344              		.loc 4 999 3 view .LVU109
 345 00e2 DA6D     		ldr	r2, [r3, #92]
 346 00e4 120C     		lsrs	r2, r2, #16
 347 00e6 1204     		lsls	r2, r2, #16
 348 00e8 42F40062 		orr	r2, r2, #2048
 349 00ec DA65     		str	r2, [r3, #92]
 350              	.LVL20:
 999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              DMA_CNDTR_NDT, NbData);
 351              		.loc 4 999 3 is_stmt 0 view .LVU110
 352              	.LBE293:
 353              	.LBE292:
  78:Core/Src/usart.c ****     /* USART1_TX Init */
  79:Core/Src/usart.c ****     LL_DMA_SetPeriphRequest(DMA1, LL_DMA_CHANNEL_4, LL_DMA_REQUEST_2);
 354              		.loc 1 79 5 is_stmt 1 view .LVU111
 355              	.LBB294:
 356              	.LBI294:
1512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 357              		.loc 4 1512 22 view .LVU112
 358              	.LBB295:
 359              		.loc 4 1514 3 view .LVU113
 360 00ee D3F8A820 		ldr	r2, [r3, #168]
 361 00f2 22F47042 		bic	r2, r2, #61440
 362              	.LVL21:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 216


 363              	.LBB296:
 364              	.LBI296:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 365              		.loc 5 1048 31 view .LVU114
 366              	.LBB297:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367              		.loc 5 1050 3 view .LVU115
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 368              		.loc 5 1055 4 view .LVU116
 369 00f6 4FF47043 		mov	r3, #61440
 370              		.syntax unified
 371              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 372 00fa 93FAA3F3 		rbit r3, r3
 373              	@ 0 "" 2
 374              	.LVL22:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375              		.loc 5 1068 3 view .LVU117
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 376              		.loc 5 1068 3 is_stmt 0 view .LVU118
 377              		.thumb
 378              		.syntax unified
 379              	.LBE297:
 380              	.LBE296:
 381              	.LBB298:
 382              	.LBI298:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 383              		.loc 5 1078 30 is_stmt 1 view .LVU119
 384              	.LBB299:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 385              		.loc 5 1089 3 view .LVU120
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 386              		.loc 5 1089 6 is_stmt 0 view .LVU121
 387 00fe 002B     		cmp	r3, #0
 388 0100 7DD0     		beq	.L8
 389              		.loc 5 1093 3 is_stmt 1 view .LVU122
 390              		.loc 5 1093 10 is_stmt 0 view .LVU123
 391 0102 B3FA83F3 		clz	r3, r3
 392              	.LVL23:
 393              	.L3:
 394              		.loc 5 1093 10 view .LVU124
 395              	.LBE299:
 396              	.LBE298:
 397              		.loc 4 1514 3 view .LVU125
 398 0106 0221     		movs	r1, #2
 399 0108 01FA03F3 		lsl	r3, r1, r3
 400 010c 1A43     		orrs	r2, r2, r3
 401 010e 3D4B     		ldr	r3, .L10
 402 0110 C3F8A820 		str	r2, [r3, #168]
 403              	.LVL24:
 404              		.loc 4 1514 3 view .LVU126
 405              	.LBE295:
 406              	.LBE294:
  80:Core/Src/usart.c ****     LL_DMA_SetDataTransferDirection(DMA1, LL_DMA_CHANNEL_4, LL_DMA_DIRECTION_MEMORY_TO_PERIPH);
 407              		.loc 1 80 5 is_stmt 1 view .LVU127
 408              	.LBB303:
 409              	.LBI303:
 655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 217


 410              		.loc 4 655 22 view .LVU128
 411              	.LBB304:
 657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 412              		.loc 4 657 3 view .LVU129
 658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 413              		.loc 4 658 3 view .LVU130
 414 0114 5A6C     		ldr	r2, [r3, #68]
 415 0116 22F48042 		bic	r2, r2, #16384
 416 011a 22F01002 		bic	r2, r2, #16
 417 011e 42F01002 		orr	r2, r2, #16
 418 0122 5A64     		str	r2, [r3, #68]
 419              	.LVL25:
 658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 420              		.loc 4 658 3 is_stmt 0 view .LVU131
 421              	.LBE304:
 422              	.LBE303:
  81:Core/Src/usart.c ****     LL_DMA_SetChannelPriorityLevel(DMA1, LL_DMA_CHANNEL_4, LL_DMA_PRIORITY_LOW);
 423              		.loc 1 81 5 is_stmt 1 view .LVU132
 424              	.LBB305:
 425              	.LBI305:
 947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 426              		.loc 4 947 22 view .LVU133
 427              	.LBB306:
 949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_P
 428              		.loc 4 949 3 view .LVU134
 950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              Priority);
 429              		.loc 4 950 3 view .LVU135
 430 0124 5A6C     		ldr	r2, [r3, #68]
 431 0126 22F44052 		bic	r2, r2, #12288
 432 012a 5A64     		str	r2, [r3, #68]
 433              	.LVL26:
 950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              Priority);
 434              		.loc 4 950 3 is_stmt 0 view .LVU136
 435              	.LBE306:
 436              	.LBE305:
  82:Core/Src/usart.c ****     LL_DMA_SetMode(DMA1, LL_DMA_CHANNEL_4, LL_DMA_MODE_NORMAL);
 437              		.loc 1 82 5 is_stmt 1 view .LVU137
 438              	.LBB307:
 439              	.LBI307:
 706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 440              		.loc 4 706 22 view .LVU138
 441              	.LBB308:
 708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_C
 442              		.loc 4 708 3 view .LVU139
 709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              Mode);
 443              		.loc 4 709 3 view .LVU140
 444 012c 5A6C     		ldr	r2, [r3, #68]
 445 012e 22F02002 		bic	r2, r2, #32
 446 0132 5A64     		str	r2, [r3, #68]
 447              	.LVL27:
 709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              Mode);
 448              		.loc 4 709 3 is_stmt 0 view .LVU141
 449              	.LBE308:
 450              	.LBE307:
  83:Core/Src/usart.c ****     LL_DMA_SetPeriphIncMode(DMA1, LL_DMA_CHANNEL_4, LL_DMA_PERIPH_NOINCREMENT);
 451              		.loc 1 83 5 is_stmt 1 view .LVU142
 452              	.LBB309:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 218


 453              	.LBI309:
 753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 454              		.loc 4 753 22 view .LVU143
 455              	.LBB310:
 755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR
 456              		.loc 4 755 5 view .LVU144
 756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 457              		.loc 4 756 5 view .LVU145
 458 0134 5A6C     		ldr	r2, [r3, #68]
 459 0136 22F04002 		bic	r2, r2, #64
 460 013a 5A64     		str	r2, [r3, #68]
 461              	.LVL28:
 756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 462              		.loc 4 756 5 is_stmt 0 view .LVU146
 463              	.LBE310:
 464              	.LBE309:
  84:Core/Src/usart.c ****     LL_DMA_SetMemoryIncMode(DMA1, LL_DMA_CHANNEL_4, LL_DMA_MEMORY_INCREMENT);
 465              		.loc 1 84 5 is_stmt 1 view .LVU147
 466              	.LBB311:
 467              	.LBI311:
 800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 468              		.loc 4 800 22 view .LVU148
 469              	.LBB312:
 802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_M
 470              		.loc 4 802 3 view .LVU149
 803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 471              		.loc 4 803 3 view .LVU150
 472 013c 5A6C     		ldr	r2, [r3, #68]
 473 013e 42F08002 		orr	r2, r2, #128
 474 0142 5A64     		str	r2, [r3, #68]
 475              	.LVL29:
 803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 476              		.loc 4 803 3 is_stmt 0 view .LVU151
 477              	.LBE312:
 478              	.LBE311:
  85:Core/Src/usart.c ****     LL_DMA_SetPeriphSize(DMA1, LL_DMA_CHANNEL_4, LL_DMA_PDATAALIGN_BYTE);
 479              		.loc 1 85 5 is_stmt 1 view .LVU152
 480              	.LBB313:
 481              	.LBI313:
 848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 482              		.loc 4 848 22 view .LVU153
 483              	.LBB314:
 850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_P
 484              		.loc 4 850 3 view .LVU154
 851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 485              		.loc 4 851 3 view .LVU155
 486 0144 5A6C     		ldr	r2, [r3, #68]
 487 0146 22F44072 		bic	r2, r2, #768
 488 014a 5A64     		str	r2, [r3, #68]
 489              	.LVL30:
 851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 490              		.loc 4 851 3 is_stmt 0 view .LVU156
 491              	.LBE314:
 492              	.LBE313:
  86:Core/Src/usart.c ****     LL_DMA_SetMemorySize(DMA1, LL_DMA_CHANNEL_4, LL_DMA_MDATAALIGN_BYTE);
 493              		.loc 1 86 5 is_stmt 1 view .LVU157
 494              	.LBB315:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 219


 495              	.LBI315:
 897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 496              		.loc 4 897 22 view .LVU158
 497              	.LBB316:
 899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_M
 498              		.loc 4 899 3 view .LVU159
 900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 499              		.loc 4 900 3 view .LVU160
 500 014c 5A6C     		ldr	r2, [r3, #68]
 501 014e 22F44062 		bic	r2, r2, #3072
 502 0152 5A64     		str	r2, [r3, #68]
 503              	.LVL31:
 900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 504              		.loc 4 900 3 is_stmt 0 view .LVU161
 505              	.LBE316:
 506              	.LBE315:
  87:Core/Src/usart.c ****     LL_DMA_SetPeriphAddress(DMA1, LL_DMA_CHANNEL_4, LL_USART_DMA_GetRegAddr(USART1, LL_USART_DMA_RE
 507              		.loc 1 87 5 is_stmt 1 view .LVU162
 508              	.LBB317:
 509              	.LBI317:
4513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 510              		.loc 6 4513 26 view .LVU163
 511              	.LBB318:
4515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** 
 512              		.loc 6 4515 3 view .LVU164
4517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   {
 513              		.loc 6 4517 3 view .LVU165
4520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   }
 514              		.loc 6 4520 5 view .LVU166
4520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   }
 515              		.loc 6 4520 32 is_stmt 0 view .LVU167
 516 0154 2E4A     		ldr	r2, .L10+12
 517              	.LVL32:
 518              		.loc 6 4528 3 is_stmt 1 view .LVU168
 519              		.loc 6 4528 3 is_stmt 0 view .LVU169
 520              	.LBE318:
 521              	.LBE317:
 522              	.LBB319:
 523              	.LBI319:
1107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 524              		.loc 4 1107 22 is_stmt 1 view .LVU170
 525              	.LBB320:
1109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CPAR, PeriphAdd
 526              		.loc 4 1109 3 view .LVU171
1110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 527              		.loc 4 1110 3 view .LVU172
 528 0156 DA64     		str	r2, [r3, #76]
 529              	.LVL33:
1110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 530              		.loc 4 1110 3 is_stmt 0 view .LVU173
 531              	.LBE320:
 532              	.LBE319:
  88:Core/Src/usart.c **** 
  89:Core/Src/usart.c ****     LL_DMA_EnableIT_TC(DMA1, LL_DMA_CHANNEL_4);
 533              		.loc 1 89 5 is_stmt 1 view .LVU174
 534              	.LBB321:
 535              	.LBI321:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 220


1515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****              DMA_CSELR_C1S << ((Channel) * 4U), PeriphRequest << DMA_POSITION_CSELR_CXS);
1516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get DMA request for DMA instance on Channel x.
1520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CSELR        C1S           LL_DMA_GetPeriphRequest\n
1521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         CSELR        C2S           LL_DMA_GetPeriphRequest\n
1522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         CSELR        C3S           LL_DMA_GetPeriphRequest\n
1523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         CSELR        C4S           LL_DMA_GetPeriphRequest\n
1524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         CSELR        C5S           LL_DMA_GetPeriphRequest\n
1525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         CSELR        C6S           LL_DMA_GetPeriphRequest\n
1526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         CSELR        C7S           LL_DMA_GetPeriphRequest
1527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
1537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_0
1538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_1
1539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_2
1540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_3
1541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_4
1542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_5
1543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_6
1544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_7
1545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphRequest(DMA_TypeDef *DMAx, uint32_t Channel)
1547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return (READ_BIT(((DMA_Request_TypeDef *)((uint32_t)((uint32_t)DMAx + DMA_CSELR_OFFSET)))->CSELR,
1549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                    DMA_CSELR_C1S << ((Channel) * 4U)) >> DMA_POSITION_CSELR_CXS);
1550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** #endif /* DMAMUX1 */
1553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @}
1555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EF_FLAG_Management FLAG_Management
1558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @{
1559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 1 global interrupt flag.
1563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          GIF1          LL_DMA_IsActiveFlag_GI1
1564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI1(DMA_TypeDef *DMAx)
1568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_GIF1) == (DMA_ISR_GIF1)) ? 1UL : 0UL);
1570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 221


1572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 2 global interrupt flag.
1574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          GIF2          LL_DMA_IsActiveFlag_GI2
1575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI2(DMA_TypeDef *DMAx)
1579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_GIF2) == (DMA_ISR_GIF2)) ? 1UL : 0UL);
1581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 3 global interrupt flag.
1585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          GIF3          LL_DMA_IsActiveFlag_GI3
1586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI3(DMA_TypeDef *DMAx)
1590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_GIF3) == (DMA_ISR_GIF3)) ? 1UL : 0UL);
1592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 4 global interrupt flag.
1596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          GIF4          LL_DMA_IsActiveFlag_GI4
1597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI4(DMA_TypeDef *DMAx)
1601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_GIF4) == (DMA_ISR_GIF4)) ? 1UL : 0UL);
1603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 5 global interrupt flag.
1607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          GIF5          LL_DMA_IsActiveFlag_GI5
1608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI5(DMA_TypeDef *DMAx)
1612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_GIF5) == (DMA_ISR_GIF5)) ? 1UL : 0UL);
1614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 6 global interrupt flag.
1618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          GIF6          LL_DMA_IsActiveFlag_GI6
1619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI6(DMA_TypeDef *DMAx)
1623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_GIF6) == (DMA_ISR_GIF6)) ? 1UL : 0UL);
1625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 7 global interrupt flag.
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 222


1629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          GIF7          LL_DMA_IsActiveFlag_GI7
1630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI7(DMA_TypeDef *DMAx)
1634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_GIF7) == (DMA_ISR_GIF7)) ? 1UL : 0UL);
1636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 1 transfer complete flag.
1640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          TCIF1         LL_DMA_IsActiveFlag_TC1
1641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC1(DMA_TypeDef *DMAx)
1645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TCIF1) == (DMA_ISR_TCIF1)) ? 1UL : 0UL);
1647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 2 transfer complete flag.
1651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          TCIF2         LL_DMA_IsActiveFlag_TC2
1652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC2(DMA_TypeDef *DMAx)
1656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TCIF2) == (DMA_ISR_TCIF2)) ? 1UL : 0UL);
1658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 3 transfer complete flag.
1662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          TCIF3         LL_DMA_IsActiveFlag_TC3
1663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC3(DMA_TypeDef *DMAx)
1667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TCIF3) == (DMA_ISR_TCIF3)) ? 1UL : 0UL);
1669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 4 transfer complete flag.
1673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          TCIF4         LL_DMA_IsActiveFlag_TC4
1674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC4(DMA_TypeDef *DMAx)
1678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TCIF4) == (DMA_ISR_TCIF4)) ? 1UL : 0UL);
1680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 5 transfer complete flag.
1684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          TCIF5         LL_DMA_IsActiveFlag_TC5
1685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 223


1686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC5(DMA_TypeDef *DMAx)
1689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TCIF5) == (DMA_ISR_TCIF5)) ? 1UL : 0UL);
1691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 6 transfer complete flag.
1695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          TCIF6         LL_DMA_IsActiveFlag_TC6
1696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC6(DMA_TypeDef *DMAx)
1700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TCIF6) == (DMA_ISR_TCIF6)) ? 1UL : 0UL);
1702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 7 transfer complete flag.
1706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          TCIF7         LL_DMA_IsActiveFlag_TC7
1707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC7(DMA_TypeDef *DMAx)
1711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TCIF7) == (DMA_ISR_TCIF7)) ? 1UL : 0UL);
1713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 1 half transfer flag.
1717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          HTIF1         LL_DMA_IsActiveFlag_HT1
1718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT1(DMA_TypeDef *DMAx)
1722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_HTIF1) == (DMA_ISR_HTIF1)) ? 1UL : 0UL);
1724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 2 half transfer flag.
1728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          HTIF2         LL_DMA_IsActiveFlag_HT2
1729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT2(DMA_TypeDef *DMAx)
1733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_HTIF2) == (DMA_ISR_HTIF2)) ? 1UL : 0UL);
1735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 3 half transfer flag.
1739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          HTIF3         LL_DMA_IsActiveFlag_HT3
1740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 224


1743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT3(DMA_TypeDef *DMAx)
1744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_HTIF3) == (DMA_ISR_HTIF3)) ? 1UL : 0UL);
1746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 4 half transfer flag.
1750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          HTIF4         LL_DMA_IsActiveFlag_HT4
1751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT4(DMA_TypeDef *DMAx)
1755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_HTIF4) == (DMA_ISR_HTIF4)) ? 1UL : 0UL);
1757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 5 half transfer flag.
1761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          HTIF5         LL_DMA_IsActiveFlag_HT5
1762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT5(DMA_TypeDef *DMAx)
1766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_HTIF5) == (DMA_ISR_HTIF5)) ? 1UL : 0UL);
1768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 6 half transfer flag.
1772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          HTIF6         LL_DMA_IsActiveFlag_HT6
1773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT6(DMA_TypeDef *DMAx)
1777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_HTIF6) == (DMA_ISR_HTIF6)) ? 1UL : 0UL);
1779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 7 half transfer flag.
1783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          HTIF7         LL_DMA_IsActiveFlag_HT7
1784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT7(DMA_TypeDef *DMAx)
1788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_HTIF7) == (DMA_ISR_HTIF7)) ? 1UL : 0UL);
1790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 1 transfer error flag.
1794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          TEIF1         LL_DMA_IsActiveFlag_TE1
1795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE1(DMA_TypeDef *DMAx)
1799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 225


1800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TEIF1) == (DMA_ISR_TEIF1)) ? 1UL : 0UL);
1801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 2 transfer error flag.
1805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          TEIF2         LL_DMA_IsActiveFlag_TE2
1806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE2(DMA_TypeDef *DMAx)
1810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TEIF2) == (DMA_ISR_TEIF2)) ? 1UL : 0UL);
1812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 3 transfer error flag.
1816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          TEIF3         LL_DMA_IsActiveFlag_TE3
1817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE3(DMA_TypeDef *DMAx)
1821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TEIF3) == (DMA_ISR_TEIF3)) ? 1UL : 0UL);
1823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 4 transfer error flag.
1827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          TEIF4         LL_DMA_IsActiveFlag_TE4
1828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE4(DMA_TypeDef *DMAx)
1832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TEIF4) == (DMA_ISR_TEIF4)) ? 1UL : 0UL);
1834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 5 transfer error flag.
1838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          TEIF5         LL_DMA_IsActiveFlag_TE5
1839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE5(DMA_TypeDef *DMAx)
1843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TEIF5) == (DMA_ISR_TEIF5)) ? 1UL : 0UL);
1845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 6 transfer error flag.
1849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          TEIF6         LL_DMA_IsActiveFlag_TE6
1850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE6(DMA_TypeDef *DMAx)
1854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TEIF6) == (DMA_ISR_TEIF6)) ? 1UL : 0UL);
1856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 226


1857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 7 transfer error flag.
1860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          TEIF7         LL_DMA_IsActiveFlag_TE7
1861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE7(DMA_TypeDef *DMAx)
1865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TEIF7) == (DMA_ISR_TEIF7)) ? 1UL : 0UL);
1867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 1 global interrupt flag.
1871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @note Do not Clear Channel 1 global interrupt flag when the channel in ON.
1872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     Instead clear specific flags transfer complete, half transfer & transfer
1873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     error flag with LL_DMA_ClearFlag_TC1, LL_DMA_ClearFlag_HT1,
1874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     LL_DMA_ClearFlag_TE1. bug 2.4.1/2.5.1 in Product Errata Sheet.
1875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CGIF1         LL_DMA_ClearFlag_GI1
1876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
1878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI1(DMA_TypeDef *DMAx)
1880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF1);
1882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 2 global interrupt flag.
1886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @note Do not Clear Channel 2 global interrupt flag when the channel in ON.
1887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     Instead clear specific flags transfer complete, half transfer & transfer
1888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     error flag with LL_DMA_ClearFlag_TC2, LL_DMA_ClearFlag_HT2,
1889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     LL_DMA_ClearFlag_TE2. bug id 2.4.1/2.5.1 in Product Errata Sheet.
1890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CGIF2         LL_DMA_ClearFlag_GI2
1891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
1893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI2(DMA_TypeDef *DMAx)
1895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF2);
1897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 3 global interrupt flag.
1901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @note Do not Clear Channel 3 global interrupt flag when the channel in ON.
1902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     Instead clear specific flags transfer complete, half transfer & transfer
1903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     error flag with LL_DMA_ClearFlag_TC3, LL_DMA_ClearFlag_HT3,
1904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     LL_DMA_ClearFlag_TE3. bug id 2.4.1/2.5.1 in Product Errata Sheet.
1905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CGIF3         LL_DMA_ClearFlag_GI3
1906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
1908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI3(DMA_TypeDef *DMAx)
1910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF3);
1912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 227


1914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 4 global interrupt flag.
1916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @note Do not Clear Channel 4 global interrupt flag when the channel in ON.
1917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     Instead clear specific flags transfer complete, half transfer & transfer
1918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     error flag with LL_DMA_ClearFlag_TC4, LL_DMA_ClearFlag_HT4,
1919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     LL_DMA_ClearFlag_TE4. bug id 2.4.1/2.5.1 in Product Errata Sheet.
1920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CGIF4         LL_DMA_ClearFlag_GI4
1921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
1923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI4(DMA_TypeDef *DMAx)
1925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF4);
1927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 5 global interrupt flag.
1931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @note Do not Clear Channel 5 global interrupt flag when the channel in ON.
1932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     Instead clear specific flags transfer complete, half transfer & transfer
1933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     error flag with LL_DMA_ClearFlag_TC5, LL_DMA_ClearFlag_HT5,
1934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     LL_DMA_ClearFlag_TE5. bug id 2.4.1/2.5.1 in Product Errata Sheet.
1935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CGIF5         LL_DMA_ClearFlag_GI5
1936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
1938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI5(DMA_TypeDef *DMAx)
1940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF5);
1942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 6 global interrupt flag.
1946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @note Do not Clear Channel 6 global interrupt flag when the channel in ON.
1947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     Instead clear specific flags transfer complete, half transfer & transfer
1948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     error flag with LL_DMA_ClearFlag_TC6, LL_DMA_ClearFlag_HT6,
1949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     LL_DMA_ClearFlag_TE6. bug id 2.4.1/2.5.1 in Product Errata Sheet.
1950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CGIF6         LL_DMA_ClearFlag_GI6
1951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
1953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI6(DMA_TypeDef *DMAx)
1955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF6);
1957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 7 global interrupt flag.
1961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @note Do not Clear Channel 7 global interrupt flag when the channel in ON.
1962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     Instead clear specific flags transfer complete, half transfer & transfer
1963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     error flag with LL_DMA_ClearFlag_TC7, LL_DMA_ClearFlag_HT7,
1964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****     LL_DMA_ClearFlag_TE7. bug id 2.4.1/2.5.1 in Product Errata Sheet.
1965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CGIF7         LL_DMA_ClearFlag_GI7
1966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
1968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI7(DMA_TypeDef *DMAx)
1970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 228


1971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF7);
1972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 1  transfer complete flag.
1976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF1        LL_DMA_ClearFlag_TC1
1977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
1979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC1(DMA_TypeDef *DMAx)
1981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF1);
1983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 2  transfer complete flag.
1987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF2        LL_DMA_ClearFlag_TC2
1988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
1990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
1991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC2(DMA_TypeDef *DMAx)
1992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
1993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF2);
1994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
1995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
1996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
1997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 3  transfer complete flag.
1998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF3        LL_DMA_ClearFlag_TC3
1999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
2001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
2002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC3(DMA_TypeDef *DMAx)
2003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
2004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF3);
2005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
2006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
2007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
2008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 4  transfer complete flag.
2009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF4        LL_DMA_ClearFlag_TC4
2010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
2012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
2013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC4(DMA_TypeDef *DMAx)
2014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
2015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF4);
2016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
2017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
2018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
2019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 5  transfer complete flag.
2020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF5        LL_DMA_ClearFlag_TC5
2021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
2023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
2024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC5(DMA_TypeDef *DMAx)
2025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
2026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF5);
2027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 229


2028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
2029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
2030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 6  transfer complete flag.
2031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF6        LL_DMA_ClearFlag_TC6
2032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
2034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
2035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC6(DMA_TypeDef *DMAx)
2036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
2037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF6);
2038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
2039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
2040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
2041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 7  transfer complete flag.
2042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF7        LL_DMA_ClearFlag_TC7
2043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
2045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
2046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC7(DMA_TypeDef *DMAx)
2047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
2048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF7);
2049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
2050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
2051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
2052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 1  half transfer flag.
2053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF1        LL_DMA_ClearFlag_HT1
2054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
2056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
2057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT1(DMA_TypeDef *DMAx)
2058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
2059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF1);
2060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
2061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
2062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
2063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 2  half transfer flag.
2064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF2        LL_DMA_ClearFlag_HT2
2065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
2067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
2068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT2(DMA_TypeDef *DMAx)
2069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
2070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF2);
2071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
2072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
2073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
2074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 3  half transfer flag.
2075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF3        LL_DMA_ClearFlag_HT3
2076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
2078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
2079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT3(DMA_TypeDef *DMAx)
2080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
2081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF3);
2082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
2083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
2084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 230


2085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 4  half transfer flag.
2086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF4        LL_DMA_ClearFlag_HT4
2087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
2089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
2090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT4(DMA_TypeDef *DMAx)
2091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
2092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF4);
2093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
2094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
2095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
2096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 5  half transfer flag.
2097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF5        LL_DMA_ClearFlag_HT5
2098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
2100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
2101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT5(DMA_TypeDef *DMAx)
2102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
2103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF5);
2104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
2105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
2106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
2107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 6  half transfer flag.
2108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF6        LL_DMA_ClearFlag_HT6
2109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
2111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
2112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT6(DMA_TypeDef *DMAx)
2113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
2114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF6);
2115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
2116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
2117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
2118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 7  half transfer flag.
2119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF7        LL_DMA_ClearFlag_HT7
2120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
2122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
2123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT7(DMA_TypeDef *DMAx)
2124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
2125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF7);
2126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
2127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
2128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
2129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 1 transfer error flag.
2130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF1        LL_DMA_ClearFlag_TE1
2131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
2133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
2134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE1(DMA_TypeDef *DMAx)
2135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
2136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF1);
2137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
2138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
2139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
2140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 2 transfer error flag.
2141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF2        LL_DMA_ClearFlag_TE2
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 231


2142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
2144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
2145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE2(DMA_TypeDef *DMAx)
2146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
2147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF2);
2148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
2149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
2150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
2151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 3 transfer error flag.
2152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF3        LL_DMA_ClearFlag_TE3
2153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
2155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
2156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE3(DMA_TypeDef *DMAx)
2157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
2158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF3);
2159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
2160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
2161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
2162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 4 transfer error flag.
2163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF4        LL_DMA_ClearFlag_TE4
2164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
2166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
2167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE4(DMA_TypeDef *DMAx)
2168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
2169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF4);
2170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
2171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
2172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
2173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 5 transfer error flag.
2174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF5        LL_DMA_ClearFlag_TE5
2175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
2177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
2178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE5(DMA_TypeDef *DMAx)
2179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
2180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF5);
2181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
2182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
2183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
2184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 6 transfer error flag.
2185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF6        LL_DMA_ClearFlag_TE6
2186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
2188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
2189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE6(DMA_TypeDef *DMAx)
2190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
2191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF6);
2192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
2193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
2194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
2195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 7 transfer error flag.
2196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF7        LL_DMA_ClearFlag_TE7
2197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 232


2199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
2200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE7(DMA_TypeDef *DMAx)
2201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
2202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF7);
2203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
2204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
2205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
2206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @}
2207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
2208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
2209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EF_IT_Management IT_Management
2210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @{
2211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
2212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
2213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Enable Transfer complete interrupt.
2214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          TCIE          LL_DMA_EnableIT_TC
2215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
2217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
2218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
2219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
2220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
2221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
2222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
2223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
2224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
2225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
2226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_EnableIT_TC(DMA_TypeDef *DMAx, uint32_t Channel)
 536              		.loc 4 2226 22 view .LVU175
 537              	.LBB322:
2227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
2228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;    
 538              		.loc 4 2228 3 view .LVU176
2229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   SET_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_TCIE
 539              		.loc 4 2229 3 view .LVU177
 540 0158 5A6C     		ldr	r2, [r3, #68]
 541 015a 0A43     		orrs	r2, r2, r1
 542 015c 5A64     		str	r2, [r3, #68]
 543              	.LVL34:
 544              		.loc 4 2229 3 is_stmt 0 view .LVU178
 545              	.LBE322:
 546              	.LBE321:
  90:Core/Src/usart.c ****     LL_DMA_EnableIT_HT(DMA1, LL_DMA_CHANNEL_5);
 547              		.loc 1 90 5 is_stmt 1 view .LVU179
 548              	.LBB323:
 549              	.LBI323:
2230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
2231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
2232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
2233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Enable Half transfer interrupt.
2234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          HTIE          LL_DMA_EnableIT_HT
2235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
2237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
2238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
2239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
2240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 233


2241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
2242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
2243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
2244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
2245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
2246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_EnableIT_HT(DMA_TypeDef *DMAx, uint32_t Channel)
 550              		.loc 4 2246 22 view .LVU180
 551              	.LBB324:
2247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
2248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 552              		.loc 4 2248 3 view .LVU181
2249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   SET_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_HTIE
 553              		.loc 4 2249 3 view .LVU182
 554 015e 9A6D     		ldr	r2, [r3, #88]
 555 0160 42F00402 		orr	r2, r2, #4
 556 0164 9A65     		str	r2, [r3, #88]
 557              	.LVL35:
 558              		.loc 4 2249 3 is_stmt 0 view .LVU183
 559              	.LBE324:
 560              	.LBE323:
  91:Core/Src/usart.c ****     LL_DMA_EnableIT_TC(DMA1, LL_DMA_CHANNEL_5);
 561              		.loc 1 91 5 is_stmt 1 view .LVU184
 562              	.LBB325:
 563              	.LBI325:
2226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 564              		.loc 4 2226 22 view .LVU185
 565              	.LBB326:
2228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   SET_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_TCIE
 566              		.loc 4 2228 3 view .LVU186
2229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 567              		.loc 4 2229 3 view .LVU187
 568 0166 9A6D     		ldr	r2, [r3, #88]
 569 0168 0A43     		orrs	r2, r2, r1
 570 016a 9A65     		str	r2, [r3, #88]
 571              	.LVL36:
2229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 572              		.loc 4 2229 3 is_stmt 0 view .LVU188
 573              	.LBE326:
 574              	.LBE325:
  92:Core/Src/usart.c **** 
  93:Core/Src/usart.c ****     USART_InitStruct.BaudRate = 115200;
 575              		.loc 1 93 5 is_stmt 1 view .LVU189
 576              		.loc 1 93 31 is_stmt 0 view .LVU190
 577 016c 4FF4E133 		mov	r3, #115200
 578 0170 0993     		str	r3, [sp, #36]
  94:Core/Src/usart.c ****     USART_InitStruct.DataWidth = LL_USART_DATAWIDTH_8B;
 579              		.loc 1 94 5 is_stmt 1 view .LVU191
 580              		.loc 1 94 32 is_stmt 0 view .LVU192
 581 0172 0023     		movs	r3, #0
 582 0174 0A93     		str	r3, [sp, #40]
  95:Core/Src/usart.c ****     USART_InitStruct.StopBits = LL_USART_STOPBITS_1;
 583              		.loc 1 95 5 is_stmt 1 view .LVU193
 584              		.loc 1 95 31 is_stmt 0 view .LVU194
 585 0176 0B93     		str	r3, [sp, #44]
  96:Core/Src/usart.c ****     USART_InitStruct.Parity = LL_USART_PARITY_NONE;
 586              		.loc 1 96 5 is_stmt 1 view .LVU195
 587              		.loc 1 96 29 is_stmt 0 view .LVU196
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 234


 588 0178 0C93     		str	r3, [sp, #48]
  97:Core/Src/usart.c ****     USART_InitStruct.TransferDirection = LL_USART_DIRECTION_TX_RX;
 589              		.loc 1 97 5 is_stmt 1 view .LVU197
 590              		.loc 1 97 40 is_stmt 0 view .LVU198
 591 017a 0C22     		movs	r2, #12
 592 017c 0D92     		str	r2, [sp, #52]
  98:Core/Src/usart.c ****     USART_InitStruct.HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 593              		.loc 1 98 5 is_stmt 1 view .LVU199
 594              		.loc 1 98 42 is_stmt 0 view .LVU200
 595 017e 0E93     		str	r3, [sp, #56]
  99:Core/Src/usart.c ****     USART_InitStruct.OverSampling = LL_USART_OVERSAMPLING_16;
 596              		.loc 1 99 5 is_stmt 1 view .LVU201
 597              		.loc 1 99 35 is_stmt 0 view .LVU202
 598 0180 0F93     		str	r3, [sp, #60]
 100:Core/Src/usart.c ****     LL_USART_Init(USART1, &USART_InitStruct);
 599              		.loc 1 100 5 is_stmt 1 view .LVU203
 600 0182 244C     		ldr	r4, .L10+16
 601 0184 09A9     		add	r1, sp, #36
 602 0186 2046     		mov	r0, r4
 603 0188 FFF7FEFF 		bl	LL_USART_Init
 604              	.LVL37:
 101:Core/Src/usart.c ****     LL_USART_ConfigAsyncMode(USART1);
 605              		.loc 1 101 5 view .LVU204
 606              	.LBB327:
 607              	.LBI327:
2804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 608              		.loc 6 2804 22 view .LVU205
 609              	.LBB328:
2810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
 610              		.loc 6 2810 3 view .LVU206
 611 018c 6368     		ldr	r3, [r4, #4]
 612 018e 23F49043 		bic	r3, r3, #18432
 613 0192 6360     		str	r3, [r4, #4]
2811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 614              		.loc 6 2811 3 view .LVU207
 615 0194 A368     		ldr	r3, [r4, #8]
 616 0196 23F02A03 		bic	r3, r3, #42
 617 019a A360     		str	r3, [r4, #8]
 618              	.LVL38:
 619              	.L4:
2811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 620              		.loc 6 2811 3 is_stmt 0 view .LVU208
 621              	.LBE328:
 622              	.LBE327:
4412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 623              		.loc 6 4412 3 is_stmt 1 view .LVU209
 624              	.LBB329:
 625              	.LBB330:
4412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 626              		.loc 6 4412 3 view .LVU210
4412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 627              		.loc 6 4412 3 view .LVU211
4412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 628              		.loc 6 4412 3 view .LVU212
 629 019c 1E4B     		ldr	r3, .L10+20
 630              	.LVL39:
 631              	.LBB331:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 235


 632              	.LBI331:
1094:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1095:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1096:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1097:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1098:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1099:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1100:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1101:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
1103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
1104:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1105:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1106:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1107:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1108:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1109:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1110:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1111:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1112:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1113:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1114:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1115:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1116:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
1117:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1119:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1120:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1123:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1124:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
1125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1127:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
1130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1131:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1132:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1133:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1134:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
1135:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1136:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1137:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1138:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
1139:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1140:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1141:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1142:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1143:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1145:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
1148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 236


1150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 633              		.loc 5 1151 31 view .LVU213
 634              	.LBB332:
1152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1153:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 635              		.loc 5 1153 5 view .LVU214
1154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 636              		.loc 5 1155 4 view .LVU215
 637              		.syntax unified
 638              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 639 019e 53E8002F 		ldrex r2, [r3]
 640              	@ 0 "" 2
 641              	.LVL40:
1156:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 642              		.loc 5 1156 4 view .LVU216
 643              		.loc 5 1156 4 is_stmt 0 view .LVU217
 644              		.thumb
 645              		.syntax unified
 646              	.LBE332:
 647              	.LBE331:
4412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 648              		.loc 6 4412 3 view .LVU218
 649 01a2 42F04002 		orr	r2, r2, #64
 650              	.LVL41:
4412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 651              		.loc 6 4412 3 is_stmt 1 view .LVU219
 652              	.LBB333:
 653              	.LBI333:
1157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1160:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1161:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
1163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1165:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1166:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1167:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1168:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
1169:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1170:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1171:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1172:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1173:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1174:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1177:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
1179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
1180:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1181:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1182:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 237


1184:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1185:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1186:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1187:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1188:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1189:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1190:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1191:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1192:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1194:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1195:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
1196:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
1197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1198:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1199:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1200:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1201:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1202:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 654              		.loc 5 1202 31 view .LVU220
 655              	.LBB334:
1203:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1204:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 656              		.loc 5 1204 4 view .LVU221
1205:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 657              		.loc 5 1206 4 view .LVU222
 658              		.syntax unified
 659              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 660 01a6 43E80021 		strex r1, r2, [r3]
 661              	@ 0 "" 2
 662              	.LVL42:
1207:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 663              		.loc 5 1207 4 view .LVU223
 664              		.loc 5 1207 4 is_stmt 0 view .LVU224
 665              		.thumb
 666              		.syntax unified
 667              	.LBE334:
 668              	.LBE333:
4412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 669              		.loc 6 4412 3 view .LVU225
 670 01aa 0029     		cmp	r1, #0
 671 01ac F6D1     		bne	.L4
 672              	.LVL43:
 673              	.L5:
4412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 674              		.loc 6 4412 3 view .LVU226
 675              	.LBE330:
 676              	.LBE329:
4445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 677              		.loc 6 4445 3 is_stmt 1 view .LVU227
 678              	.LBB335:
 679              	.LBB336:
4445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 680              		.loc 6 4445 3 view .LVU228
4445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 681              		.loc 6 4445 3 view .LVU229
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 238


4445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 682              		.loc 6 4445 3 view .LVU230
 683              	.LBB337:
 684              	.LBI337:
1151:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 685              		.loc 5 1151 31 view .LVU231
 686              	.LBB338:
1153:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 687              		.loc 5 1153 5 view .LVU232
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 688              		.loc 5 1155 4 view .LVU233
 689              		.syntax unified
 690              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 691 01ae 53E8002F 		ldrex r2, [r3]
 692              	@ 0 "" 2
 693              	.LVL44:
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 694              		.loc 5 1156 4 view .LVU234
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695              		.loc 5 1156 4 is_stmt 0 view .LVU235
 696              		.thumb
 697              		.syntax unified
 698              	.LBE338:
 699              	.LBE337:
4445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 700              		.loc 6 4445 3 view .LVU236
 701 01b2 42F08002 		orr	r2, r2, #128
 702              	.LVL45:
4445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 703              		.loc 6 4445 3 is_stmt 1 view .LVU237
 704              	.LBB339:
 705              	.LBI339:
1202:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706              		.loc 5 1202 31 view .LVU238
 707              	.LBB340:
1204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 708              		.loc 5 1204 4 view .LVU239
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 709              		.loc 5 1206 4 view .LVU240
 710              		.syntax unified
 711              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 712 01b6 43E80021 		strex r1, r2, [r3]
 713              	@ 0 "" 2
 714              	.LVL46:
 715              		.loc 5 1207 4 view .LVU241
 716              		.loc 5 1207 4 is_stmt 0 view .LVU242
 717              		.thumb
 718              		.syntax unified
 719              	.LBE340:
 720              	.LBE339:
4445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 721              		.loc 6 4445 3 view .LVU243
 722 01ba 0029     		cmp	r1, #0
 723 01bc F7D1     		bne	.L5
 724              	.LVL47:
 725              	.L6:
4445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 239


 726              		.loc 6 4445 3 view .LVU244
 727              	.LBE336:
 728              	.LBE335:
3642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 729              		.loc 6 3642 3 is_stmt 1 view .LVU245
 730              	.LBB341:
 731              	.LBB342:
3642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 732              		.loc 6 3642 3 view .LVU246
3642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 733              		.loc 6 3642 3 view .LVU247
3642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 734              		.loc 6 3642 3 view .LVU248
 735 01be 154A     		ldr	r2, .L10+16
 736              	.LVL48:
 737              	.LBB343:
 738              	.LBI343:
1151:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 739              		.loc 5 1151 31 view .LVU249
 740              	.LBB344:
1153:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 741              		.loc 5 1153 5 view .LVU250
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 742              		.loc 5 1155 4 view .LVU251
 743              		.syntax unified
 744              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 745 01c0 52E8003F 		ldrex r3, [r2]
 746              	@ 0 "" 2
 747              	.LVL49:
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748              		.loc 5 1156 4 view .LVU252
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 749              		.loc 5 1156 4 is_stmt 0 view .LVU253
 750              		.thumb
 751              		.syntax unified
 752              	.LBE344:
 753              	.LBE343:
3642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 754              		.loc 6 3642 3 view .LVU254
 755 01c4 43F01003 		orr	r3, r3, #16
 756              	.LVL50:
3642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 757              		.loc 6 3642 3 is_stmt 1 view .LVU255
 758              	.LBB345:
 759              	.LBI345:
1202:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 760              		.loc 5 1202 31 view .LVU256
 761              	.LBB346:
1204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 762              		.loc 5 1204 4 view .LVU257
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 763              		.loc 5 1206 4 view .LVU258
 764              		.syntax unified
 765              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 766 01c8 42E80031 		strex r1, r3, [r2]
 767              	@ 0 "" 2
 768              	.LVL51:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 240


 769              		.loc 5 1207 4 view .LVU259
 770              		.loc 5 1207 4 is_stmt 0 view .LVU260
 771              		.thumb
 772              		.syntax unified
 773              	.LBE346:
 774              	.LBE345:
3642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 775              		.loc 6 3642 3 view .LVU261
 776 01cc 0029     		cmp	r1, #0
 777 01ce F6D1     		bne	.L6
 778              	.LBE342:
 779              	.LBE341:
3642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 780              		.loc 6 3642 3 is_stmt 1 view .LVU262
 781              	.LVL52:
 102:Core/Src/usart.c ****     LL_USART_EnableDMAReq_RX(USART1);
 103:Core/Src/usart.c ****     LL_USART_EnableDMAReq_TX(USART1);
 104:Core/Src/usart.c ****     LL_USART_EnableIT_IDLE(USART1);
 105:Core/Src/usart.c **** 
 106:Core/Src/usart.c ****     /* USART2 interrupt Init */
 107:Core/Src/usart.c ****     NVIC_SetPriority(USART1_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(), 0, 0));
 782              		.loc 1 107 5 view .LVU263
 783              	.LBB347:
 784              	.LBI347:
 785              		.file 7 "Drivers/CMSIS/Include/core_cm4.h"
   1:Drivers/CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:Drivers/CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm4.h ****  * @version  V5.1.0
   5:Drivers/CMSIS/Include/core_cm4.h ****  * @date     13. March 2019
   6:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm4.h **** /*
   8:Drivers/CMSIS/Include/core_cm4.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm4.h ****  *
  10:Drivers/CMSIS/Include/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm4.h ****  *
  12:Drivers/CMSIS/Include/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm4.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm4.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm4.h ****  *
  16:Drivers/CMSIS/Include/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm4.h ****  *
  18:Drivers/CMSIS/Include/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm4.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm4.h ****  */
  24:Drivers/CMSIS/Include/core_cm4.h **** 
  25:Drivers/CMSIS/Include/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm4.h **** #endif
  30:Drivers/CMSIS/Include/core_cm4.h **** 
  31:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 241


  33:Drivers/CMSIS/Include/core_cm4.h **** 
  34:Drivers/CMSIS/Include/core_cm4.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm4.h **** 
  36:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm4.h **** #endif
  39:Drivers/CMSIS/Include/core_cm4.h **** 
  40:Drivers/CMSIS/Include/core_cm4.h **** /**
  41:Drivers/CMSIS/Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm4.h **** 
  44:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm4.h **** 
  47:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm4.h **** 
  50:Drivers/CMSIS/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm4.h ****  */
  53:Drivers/CMSIS/Include/core_cm4.h **** 
  54:Drivers/CMSIS/Include/core_cm4.h **** 
  55:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm4.h **** /**
  59:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup Cortex_M4
  60:Drivers/CMSIS/Include/core_cm4.h ****   @{
  61:Drivers/CMSIS/Include/core_cm4.h ****  */
  62:Drivers/CMSIS/Include/core_cm4.h **** 
  63:Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm4.h **** 
  65:Drivers/CMSIS/Include/core_cm4.h **** /* CMSIS CM4 definitions */
  66:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:Drivers/CMSIS/Include/core_cm4.h **** 
  71:Drivers/CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm4.h **** 
  73:Drivers/CMSIS/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:Drivers/CMSIS/Include/core_cm4.h **** */
  76:Drivers/CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
  77:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  80:Drivers/CMSIS/Include/core_cm4.h ****     #else
  81:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  83:Drivers/CMSIS/Include/core_cm4.h ****     #endif
  84:Drivers/CMSIS/Include/core_cm4.h ****   #else
  85:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  86:Drivers/CMSIS/Include/core_cm4.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm4.h **** 
  88:Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARM_FP
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 242


  90:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  92:Drivers/CMSIS/Include/core_cm4.h ****     #else
  93:Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  95:Drivers/CMSIS/Include/core_cm4.h ****     #endif
  96:Drivers/CMSIS/Include/core_cm4.h ****   #else
  97:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  98:Drivers/CMSIS/Include/core_cm4.h ****   #endif
  99:Drivers/CMSIS/Include/core_cm4.h **** 
 100:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 101:Drivers/CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 104:Drivers/CMSIS/Include/core_cm4.h ****     #else
 105:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 107:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 108:Drivers/CMSIS/Include/core_cm4.h ****   #else
 109:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 110:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 111:Drivers/CMSIS/Include/core_cm4.h **** 
 112:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 114:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 116:Drivers/CMSIS/Include/core_cm4.h ****     #else
 117:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 119:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 120:Drivers/CMSIS/Include/core_cm4.h ****   #else
 121:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 122:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 123:Drivers/CMSIS/Include/core_cm4.h **** 
 124:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 128:Drivers/CMSIS/Include/core_cm4.h ****     #else
 129:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 131:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 132:Drivers/CMSIS/Include/core_cm4.h ****   #else
 133:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 134:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm4.h **** 
 136:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 137:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __FPU_VFP__
 138:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 140:Drivers/CMSIS/Include/core_cm4.h ****     #else
 141:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 143:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 144:Drivers/CMSIS/Include/core_cm4.h ****   #else
 145:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 146:Drivers/CMSIS/Include/core_cm4.h ****   #endif
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 243


 147:Drivers/CMSIS/Include/core_cm4.h **** 
 148:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 149:Drivers/CMSIS/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 152:Drivers/CMSIS/Include/core_cm4.h ****     #else
 153:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 155:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 156:Drivers/CMSIS/Include/core_cm4.h ****   #else
 157:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 158:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 159:Drivers/CMSIS/Include/core_cm4.h **** 
 160:Drivers/CMSIS/Include/core_cm4.h **** #endif
 161:Drivers/CMSIS/Include/core_cm4.h **** 
 162:Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:Drivers/CMSIS/Include/core_cm4.h **** 
 164:Drivers/CMSIS/Include/core_cm4.h **** 
 165:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 166:Drivers/CMSIS/Include/core_cm4.h **** }
 167:Drivers/CMSIS/Include/core_cm4.h **** #endif
 168:Drivers/CMSIS/Include/core_cm4.h **** 
 169:Drivers/CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:Drivers/CMSIS/Include/core_cm4.h **** 
 171:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:Drivers/CMSIS/Include/core_cm4.h **** 
 173:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:Drivers/CMSIS/Include/core_cm4.h **** 
 176:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 177:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
 178:Drivers/CMSIS/Include/core_cm4.h **** #endif
 179:Drivers/CMSIS/Include/core_cm4.h **** 
 180:Drivers/CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 181:Drivers/CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 183:Drivers/CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 186:Drivers/CMSIS/Include/core_cm4.h **** 
 187:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 191:Drivers/CMSIS/Include/core_cm4.h **** 
 192:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:Drivers/CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 196:Drivers/CMSIS/Include/core_cm4.h **** 
 197:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:Drivers/CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 199:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 201:Drivers/CMSIS/Include/core_cm4.h **** 
 202:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 203:Drivers/CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 244


 204:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 206:Drivers/CMSIS/Include/core_cm4.h **** #endif
 207:Drivers/CMSIS/Include/core_cm4.h **** 
 208:Drivers/CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:Drivers/CMSIS/Include/core_cm4.h **** /**
 210:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:Drivers/CMSIS/Include/core_cm4.h **** 
 212:Drivers/CMSIS/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:Drivers/CMSIS/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 214:Drivers/CMSIS/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:Drivers/CMSIS/Include/core_cm4.h **** */
 216:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 217:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 218:Drivers/CMSIS/Include/core_cm4.h **** #else
 219:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 220:Drivers/CMSIS/Include/core_cm4.h **** #endif
 221:Drivers/CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 222:Drivers/CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 223:Drivers/CMSIS/Include/core_cm4.h **** 
 224:Drivers/CMSIS/Include/core_cm4.h **** /* following defines should be used for structure members */
 225:Drivers/CMSIS/Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 226:Drivers/CMSIS/Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 227:Drivers/CMSIS/Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 228:Drivers/CMSIS/Include/core_cm4.h **** 
 229:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 230:Drivers/CMSIS/Include/core_cm4.h **** 
 231:Drivers/CMSIS/Include/core_cm4.h **** 
 232:Drivers/CMSIS/Include/core_cm4.h **** 
 233:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
 234:Drivers/CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 235:Drivers/CMSIS/Include/core_cm4.h ****   Core Register contain:
 236:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register
 237:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 238:Drivers/CMSIS/Include/core_cm4.h ****   - Core SCB Register
 239:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 240:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Register
 241:Drivers/CMSIS/Include/core_cm4.h ****   - Core MPU Register
 242:Drivers/CMSIS/Include/core_cm4.h ****   - Core FPU Register
 243:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 244:Drivers/CMSIS/Include/core_cm4.h **** /**
 245:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 246:Drivers/CMSIS/Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 247:Drivers/CMSIS/Include/core_cm4.h **** */
 248:Drivers/CMSIS/Include/core_cm4.h **** 
 249:Drivers/CMSIS/Include/core_cm4.h **** /**
 250:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 251:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 252:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Core Register type definitions.
 253:Drivers/CMSIS/Include/core_cm4.h ****   @{
 254:Drivers/CMSIS/Include/core_cm4.h ****  */
 255:Drivers/CMSIS/Include/core_cm4.h **** 
 256:Drivers/CMSIS/Include/core_cm4.h **** /**
 257:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 258:Drivers/CMSIS/Include/core_cm4.h ****  */
 259:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 260:Drivers/CMSIS/Include/core_cm4.h **** {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 245


 261:Drivers/CMSIS/Include/core_cm4.h ****   struct
 262:Drivers/CMSIS/Include/core_cm4.h ****   {
 263:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 264:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 265:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 266:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 267:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 268:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 269:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 270:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 271:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 272:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 273:Drivers/CMSIS/Include/core_cm4.h **** } APSR_Type;
 274:Drivers/CMSIS/Include/core_cm4.h **** 
 275:Drivers/CMSIS/Include/core_cm4.h **** /* APSR Register Definitions */
 276:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 277:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 278:Drivers/CMSIS/Include/core_cm4.h **** 
 279:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 280:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 281:Drivers/CMSIS/Include/core_cm4.h **** 
 282:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 283:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 284:Drivers/CMSIS/Include/core_cm4.h **** 
 285:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 286:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 287:Drivers/CMSIS/Include/core_cm4.h **** 
 288:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 289:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 290:Drivers/CMSIS/Include/core_cm4.h **** 
 291:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 292:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 293:Drivers/CMSIS/Include/core_cm4.h **** 
 294:Drivers/CMSIS/Include/core_cm4.h **** 
 295:Drivers/CMSIS/Include/core_cm4.h **** /**
 296:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 297:Drivers/CMSIS/Include/core_cm4.h ****  */
 298:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 299:Drivers/CMSIS/Include/core_cm4.h **** {
 300:Drivers/CMSIS/Include/core_cm4.h ****   struct
 301:Drivers/CMSIS/Include/core_cm4.h ****   {
 302:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 303:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 304:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 305:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:Drivers/CMSIS/Include/core_cm4.h **** } IPSR_Type;
 307:Drivers/CMSIS/Include/core_cm4.h **** 
 308:Drivers/CMSIS/Include/core_cm4.h **** /* IPSR Register Definitions */
 309:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 310:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 311:Drivers/CMSIS/Include/core_cm4.h **** 
 312:Drivers/CMSIS/Include/core_cm4.h **** 
 313:Drivers/CMSIS/Include/core_cm4.h **** /**
 314:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 315:Drivers/CMSIS/Include/core_cm4.h ****  */
 316:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 317:Drivers/CMSIS/Include/core_cm4.h **** {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 246


 318:Drivers/CMSIS/Include/core_cm4.h ****   struct
 319:Drivers/CMSIS/Include/core_cm4.h ****   {
 320:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 321:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 322:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 323:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 324:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 325:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 326:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 327:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 328:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 329:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 330:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 331:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 332:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 333:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 334:Drivers/CMSIS/Include/core_cm4.h **** } xPSR_Type;
 335:Drivers/CMSIS/Include/core_cm4.h **** 
 336:Drivers/CMSIS/Include/core_cm4.h **** /* xPSR Register Definitions */
 337:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 338:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 339:Drivers/CMSIS/Include/core_cm4.h **** 
 340:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 341:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 342:Drivers/CMSIS/Include/core_cm4.h **** 
 343:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 344:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 345:Drivers/CMSIS/Include/core_cm4.h **** 
 346:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 347:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 348:Drivers/CMSIS/Include/core_cm4.h **** 
 349:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 350:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 351:Drivers/CMSIS/Include/core_cm4.h **** 
 352:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 353:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 354:Drivers/CMSIS/Include/core_cm4.h **** 
 355:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 356:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 357:Drivers/CMSIS/Include/core_cm4.h **** 
 358:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 359:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 360:Drivers/CMSIS/Include/core_cm4.h **** 
 361:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 362:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 363:Drivers/CMSIS/Include/core_cm4.h **** 
 364:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 365:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 366:Drivers/CMSIS/Include/core_cm4.h **** 
 367:Drivers/CMSIS/Include/core_cm4.h **** 
 368:Drivers/CMSIS/Include/core_cm4.h **** /**
 369:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 370:Drivers/CMSIS/Include/core_cm4.h ****  */
 371:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 372:Drivers/CMSIS/Include/core_cm4.h **** {
 373:Drivers/CMSIS/Include/core_cm4.h ****   struct
 374:Drivers/CMSIS/Include/core_cm4.h ****   {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 247


 375:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 376:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 377:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 378:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 379:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 380:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 381:Drivers/CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 382:Drivers/CMSIS/Include/core_cm4.h **** 
 383:Drivers/CMSIS/Include/core_cm4.h **** /* CONTROL Register Definitions */
 384:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 385:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 386:Drivers/CMSIS/Include/core_cm4.h **** 
 387:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 388:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 389:Drivers/CMSIS/Include/core_cm4.h **** 
 390:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 391:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 392:Drivers/CMSIS/Include/core_cm4.h **** 
 393:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 394:Drivers/CMSIS/Include/core_cm4.h **** 
 395:Drivers/CMSIS/Include/core_cm4.h **** 
 396:Drivers/CMSIS/Include/core_cm4.h **** /**
 397:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 398:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 399:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 400:Drivers/CMSIS/Include/core_cm4.h ****   @{
 401:Drivers/CMSIS/Include/core_cm4.h ****  */
 402:Drivers/CMSIS/Include/core_cm4.h **** 
 403:Drivers/CMSIS/Include/core_cm4.h **** /**
 404:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 405:Drivers/CMSIS/Include/core_cm4.h ****  */
 406:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 407:Drivers/CMSIS/Include/core_cm4.h **** {
 408:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 409:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 410:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 411:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[24U];
 412:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 413:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[24U];
 414:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 415:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 416:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 417:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 418:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 419:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 420:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 421:Drivers/CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 422:Drivers/CMSIS/Include/core_cm4.h **** 
 423:Drivers/CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 424:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 425:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 426:Drivers/CMSIS/Include/core_cm4.h **** 
 427:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 428:Drivers/CMSIS/Include/core_cm4.h **** 
 429:Drivers/CMSIS/Include/core_cm4.h **** 
 430:Drivers/CMSIS/Include/core_cm4.h **** /**
 431:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 248


 432:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 433:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 434:Drivers/CMSIS/Include/core_cm4.h ****   @{
 435:Drivers/CMSIS/Include/core_cm4.h ****  */
 436:Drivers/CMSIS/Include/core_cm4.h **** 
 437:Drivers/CMSIS/Include/core_cm4.h **** /**
 438:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 439:Drivers/CMSIS/Include/core_cm4.h ****  */
 440:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 441:Drivers/CMSIS/Include/core_cm4.h **** {
 442:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 443:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 444:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 445:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 446:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 447:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 448:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 449:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 450:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 451:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 452:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 453:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 454:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 455:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 456:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 457:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 458:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 459:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 460:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 461:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 462:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 463:Drivers/CMSIS/Include/core_cm4.h **** } SCB_Type;
 464:Drivers/CMSIS/Include/core_cm4.h **** 
 465:Drivers/CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 466:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 467:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 468:Drivers/CMSIS/Include/core_cm4.h **** 
 469:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 470:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 471:Drivers/CMSIS/Include/core_cm4.h **** 
 472:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 473:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 474:Drivers/CMSIS/Include/core_cm4.h **** 
 475:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 476:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 477:Drivers/CMSIS/Include/core_cm4.h **** 
 478:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 479:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 480:Drivers/CMSIS/Include/core_cm4.h **** 
 481:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 482:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 483:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 484:Drivers/CMSIS/Include/core_cm4.h **** 
 485:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 486:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 487:Drivers/CMSIS/Include/core_cm4.h **** 
 488:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 249


 489:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 490:Drivers/CMSIS/Include/core_cm4.h **** 
 491:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 492:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 493:Drivers/CMSIS/Include/core_cm4.h **** 
 494:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 495:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 496:Drivers/CMSIS/Include/core_cm4.h **** 
 497:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 498:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 499:Drivers/CMSIS/Include/core_cm4.h **** 
 500:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 501:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 502:Drivers/CMSIS/Include/core_cm4.h **** 
 503:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 504:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 505:Drivers/CMSIS/Include/core_cm4.h **** 
 506:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 507:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 508:Drivers/CMSIS/Include/core_cm4.h **** 
 509:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 510:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 511:Drivers/CMSIS/Include/core_cm4.h **** 
 512:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 513:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 514:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm4.h **** 
 516:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 517:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 518:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 519:Drivers/CMSIS/Include/core_cm4.h **** 
 520:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 521:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 522:Drivers/CMSIS/Include/core_cm4.h **** 
 523:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 524:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 525:Drivers/CMSIS/Include/core_cm4.h **** 
 526:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 527:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 528:Drivers/CMSIS/Include/core_cm4.h **** 
 529:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 530:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 531:Drivers/CMSIS/Include/core_cm4.h **** 
 532:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 533:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 534:Drivers/CMSIS/Include/core_cm4.h **** 
 535:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 537:Drivers/CMSIS/Include/core_cm4.h **** 
 538:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 539:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 540:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm4.h **** 
 542:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 543:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 544:Drivers/CMSIS/Include/core_cm4.h **** 
 545:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 250


 546:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 547:Drivers/CMSIS/Include/core_cm4.h **** 
 548:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 549:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 550:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm4.h **** 
 552:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 553:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 554:Drivers/CMSIS/Include/core_cm4.h **** 
 555:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 556:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 557:Drivers/CMSIS/Include/core_cm4.h **** 
 558:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 559:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 560:Drivers/CMSIS/Include/core_cm4.h **** 
 561:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 562:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 563:Drivers/CMSIS/Include/core_cm4.h **** 
 564:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 565:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 566:Drivers/CMSIS/Include/core_cm4.h **** 
 567:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 568:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 569:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm4.h **** 
 571:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 572:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 573:Drivers/CMSIS/Include/core_cm4.h **** 
 574:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 575:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 576:Drivers/CMSIS/Include/core_cm4.h **** 
 577:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 579:Drivers/CMSIS/Include/core_cm4.h **** 
 580:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 582:Drivers/CMSIS/Include/core_cm4.h **** 
 583:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 585:Drivers/CMSIS/Include/core_cm4.h **** 
 586:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 588:Drivers/CMSIS/Include/core_cm4.h **** 
 589:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 591:Drivers/CMSIS/Include/core_cm4.h **** 
 592:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 593:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 594:Drivers/CMSIS/Include/core_cm4.h **** 
 595:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 596:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 597:Drivers/CMSIS/Include/core_cm4.h **** 
 598:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 599:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 600:Drivers/CMSIS/Include/core_cm4.h **** 
 601:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 602:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 251


 603:Drivers/CMSIS/Include/core_cm4.h **** 
 604:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 605:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 606:Drivers/CMSIS/Include/core_cm4.h **** 
 607:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 609:Drivers/CMSIS/Include/core_cm4.h **** 
 610:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 611:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 612:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 613:Drivers/CMSIS/Include/core_cm4.h **** 
 614:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 615:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 616:Drivers/CMSIS/Include/core_cm4.h **** 
 617:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 619:Drivers/CMSIS/Include/core_cm4.h **** 
 620:Drivers/CMSIS/Include/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 621:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 622:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm4.h **** 
 624:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 625:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 626:Drivers/CMSIS/Include/core_cm4.h **** 
 627:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 628:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 629:Drivers/CMSIS/Include/core_cm4.h **** 
 630:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 631:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 632:Drivers/CMSIS/Include/core_cm4.h **** 
 633:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 634:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 635:Drivers/CMSIS/Include/core_cm4.h **** 
 636:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 637:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 638:Drivers/CMSIS/Include/core_cm4.h **** 
 639:Drivers/CMSIS/Include/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 640:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 641:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 642:Drivers/CMSIS/Include/core_cm4.h **** 
 643:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 644:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 645:Drivers/CMSIS/Include/core_cm4.h **** 
 646:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 647:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 648:Drivers/CMSIS/Include/core_cm4.h **** 
 649:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 650:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 651:Drivers/CMSIS/Include/core_cm4.h **** 
 652:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 653:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 654:Drivers/CMSIS/Include/core_cm4.h **** 
 655:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 656:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 657:Drivers/CMSIS/Include/core_cm4.h **** 
 658:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 659:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 252


 660:Drivers/CMSIS/Include/core_cm4.h **** 
 661:Drivers/CMSIS/Include/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 662:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 663:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 664:Drivers/CMSIS/Include/core_cm4.h **** 
 665:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 666:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 667:Drivers/CMSIS/Include/core_cm4.h **** 
 668:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 669:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 670:Drivers/CMSIS/Include/core_cm4.h **** 
 671:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 672:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 673:Drivers/CMSIS/Include/core_cm4.h **** 
 674:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 675:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 676:Drivers/CMSIS/Include/core_cm4.h **** 
 677:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 678:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 679:Drivers/CMSIS/Include/core_cm4.h **** 
 680:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 681:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 682:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 683:Drivers/CMSIS/Include/core_cm4.h **** 
 684:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 685:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 686:Drivers/CMSIS/Include/core_cm4.h **** 
 687:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 688:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 689:Drivers/CMSIS/Include/core_cm4.h **** 
 690:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 691:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 692:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 693:Drivers/CMSIS/Include/core_cm4.h **** 
 694:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 695:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 696:Drivers/CMSIS/Include/core_cm4.h **** 
 697:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 698:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 699:Drivers/CMSIS/Include/core_cm4.h **** 
 700:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 701:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 702:Drivers/CMSIS/Include/core_cm4.h **** 
 703:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 704:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 705:Drivers/CMSIS/Include/core_cm4.h **** 
 706:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 707:Drivers/CMSIS/Include/core_cm4.h **** 
 708:Drivers/CMSIS/Include/core_cm4.h **** 
 709:Drivers/CMSIS/Include/core_cm4.h **** /**
 710:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 711:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 712:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 713:Drivers/CMSIS/Include/core_cm4.h ****   @{
 714:Drivers/CMSIS/Include/core_cm4.h ****  */
 715:Drivers/CMSIS/Include/core_cm4.h **** 
 716:Drivers/CMSIS/Include/core_cm4.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 253


 717:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 718:Drivers/CMSIS/Include/core_cm4.h ****  */
 719:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 720:Drivers/CMSIS/Include/core_cm4.h **** {
 721:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 722:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 723:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 724:Drivers/CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 725:Drivers/CMSIS/Include/core_cm4.h **** 
 726:Drivers/CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 727:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 728:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 729:Drivers/CMSIS/Include/core_cm4.h **** 
 730:Drivers/CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 731:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 732:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 733:Drivers/CMSIS/Include/core_cm4.h **** 
 734:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 735:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 736:Drivers/CMSIS/Include/core_cm4.h **** 
 737:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 738:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 739:Drivers/CMSIS/Include/core_cm4.h **** 
 740:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 741:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 742:Drivers/CMSIS/Include/core_cm4.h **** 
 743:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 744:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 745:Drivers/CMSIS/Include/core_cm4.h **** 
 746:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 747:Drivers/CMSIS/Include/core_cm4.h **** 
 748:Drivers/CMSIS/Include/core_cm4.h **** 
 749:Drivers/CMSIS/Include/core_cm4.h **** /**
 750:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 751:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 752:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 753:Drivers/CMSIS/Include/core_cm4.h ****   @{
 754:Drivers/CMSIS/Include/core_cm4.h ****  */
 755:Drivers/CMSIS/Include/core_cm4.h **** 
 756:Drivers/CMSIS/Include/core_cm4.h **** /**
 757:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 758:Drivers/CMSIS/Include/core_cm4.h ****  */
 759:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 760:Drivers/CMSIS/Include/core_cm4.h **** {
 761:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 762:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 763:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 764:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 765:Drivers/CMSIS/Include/core_cm4.h **** } SysTick_Type;
 766:Drivers/CMSIS/Include/core_cm4.h **** 
 767:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 768:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 769:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 770:Drivers/CMSIS/Include/core_cm4.h **** 
 771:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 772:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 773:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 254


 774:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 775:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 776:Drivers/CMSIS/Include/core_cm4.h **** 
 777:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 778:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 779:Drivers/CMSIS/Include/core_cm4.h **** 
 780:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 781:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 782:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 783:Drivers/CMSIS/Include/core_cm4.h **** 
 784:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 785:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 786:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 787:Drivers/CMSIS/Include/core_cm4.h **** 
 788:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 789:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 790:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 791:Drivers/CMSIS/Include/core_cm4.h **** 
 792:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 793:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 794:Drivers/CMSIS/Include/core_cm4.h **** 
 795:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 796:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 797:Drivers/CMSIS/Include/core_cm4.h **** 
 798:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 799:Drivers/CMSIS/Include/core_cm4.h **** 
 800:Drivers/CMSIS/Include/core_cm4.h **** 
 801:Drivers/CMSIS/Include/core_cm4.h **** /**
 802:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 803:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 804:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 805:Drivers/CMSIS/Include/core_cm4.h ****   @{
 806:Drivers/CMSIS/Include/core_cm4.h ****  */
 807:Drivers/CMSIS/Include/core_cm4.h **** 
 808:Drivers/CMSIS/Include/core_cm4.h **** /**
 809:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 810:Drivers/CMSIS/Include/core_cm4.h ****  */
 811:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 812:Drivers/CMSIS/Include/core_cm4.h **** {
 813:Drivers/CMSIS/Include/core_cm4.h ****   __OM  union
 814:Drivers/CMSIS/Include/core_cm4.h ****   {
 815:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 816:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 817:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 818:Drivers/CMSIS/Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 819:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[864U];
 820:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 821:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 822:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 823:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[15U];
 824:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 825:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[32U];
 826:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[43U];
 827:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 828:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 829:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[6U];
 830:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 255


 831:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 832:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 833:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 834:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 835:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 836:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 837:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 838:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 839:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 840:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 841:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 842:Drivers/CMSIS/Include/core_cm4.h **** } ITM_Type;
 843:Drivers/CMSIS/Include/core_cm4.h **** 
 844:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 845:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 846:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 847:Drivers/CMSIS/Include/core_cm4.h **** 
 848:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 849:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 850:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 851:Drivers/CMSIS/Include/core_cm4.h **** 
 852:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 853:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 854:Drivers/CMSIS/Include/core_cm4.h **** 
 855:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 856:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 857:Drivers/CMSIS/Include/core_cm4.h **** 
 858:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 859:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 860:Drivers/CMSIS/Include/core_cm4.h **** 
 861:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 862:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 863:Drivers/CMSIS/Include/core_cm4.h **** 
 864:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 865:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 866:Drivers/CMSIS/Include/core_cm4.h **** 
 867:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 868:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 869:Drivers/CMSIS/Include/core_cm4.h **** 
 870:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 871:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 872:Drivers/CMSIS/Include/core_cm4.h **** 
 873:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 874:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 875:Drivers/CMSIS/Include/core_cm4.h **** 
 876:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:Drivers/CMSIS/Include/core_cm4.h **** 
 880:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:Drivers/CMSIS/Include/core_cm4.h **** 
 883:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:Drivers/CMSIS/Include/core_cm4.h **** 
 886:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 256


 888:Drivers/CMSIS/Include/core_cm4.h **** 
 889:Drivers/CMSIS/Include/core_cm4.h **** /**
 890:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 891:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:Drivers/CMSIS/Include/core_cm4.h ****   @{
 894:Drivers/CMSIS/Include/core_cm4.h ****  */
 895:Drivers/CMSIS/Include/core_cm4.h **** 
 896:Drivers/CMSIS/Include/core_cm4.h **** /**
 897:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:Drivers/CMSIS/Include/core_cm4.h ****  */
 899:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 900:Drivers/CMSIS/Include/core_cm4.h **** {
 901:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 913:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[1U];
 917:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 921:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:Drivers/CMSIS/Include/core_cm4.h **** } DWT_Type;
 925:Drivers/CMSIS/Include/core_cm4.h **** 
 926:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Control Register Definitions */
 927:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:Drivers/CMSIS/Include/core_cm4.h **** 
 930:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:Drivers/CMSIS/Include/core_cm4.h **** 
 933:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:Drivers/CMSIS/Include/core_cm4.h **** 
 936:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:Drivers/CMSIS/Include/core_cm4.h **** 
 939:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:Drivers/CMSIS/Include/core_cm4.h **** 
 942:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 257


 945:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:Drivers/CMSIS/Include/core_cm4.h **** 
 948:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:Drivers/CMSIS/Include/core_cm4.h **** 
 951:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:Drivers/CMSIS/Include/core_cm4.h **** 
 954:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:Drivers/CMSIS/Include/core_cm4.h **** 
 957:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:Drivers/CMSIS/Include/core_cm4.h **** 
 960:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:Drivers/CMSIS/Include/core_cm4.h **** 
 963:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:Drivers/CMSIS/Include/core_cm4.h **** 
 966:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:Drivers/CMSIS/Include/core_cm4.h **** 
 969:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:Drivers/CMSIS/Include/core_cm4.h **** 
 972:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:Drivers/CMSIS/Include/core_cm4.h **** 
 975:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:Drivers/CMSIS/Include/core_cm4.h **** 
 978:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:Drivers/CMSIS/Include/core_cm4.h **** 
 981:Drivers/CMSIS/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:Drivers/CMSIS/Include/core_cm4.h **** 
 985:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:Drivers/CMSIS/Include/core_cm4.h **** 
 989:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:Drivers/CMSIS/Include/core_cm4.h **** 
 993:Drivers/CMSIS/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:Drivers/CMSIS/Include/core_cm4.h **** 
 997:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:Drivers/CMSIS/Include/core_cm4.h **** 
1001:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 258


1002:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:Drivers/CMSIS/Include/core_cm4.h **** 
1005:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:Drivers/CMSIS/Include/core_cm4.h **** 
1009:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:Drivers/CMSIS/Include/core_cm4.h **** 
1012:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:Drivers/CMSIS/Include/core_cm4.h **** 
1015:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:Drivers/CMSIS/Include/core_cm4.h **** 
1018:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:Drivers/CMSIS/Include/core_cm4.h **** 
1021:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:Drivers/CMSIS/Include/core_cm4.h **** 
1024:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:Drivers/CMSIS/Include/core_cm4.h **** 
1027:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:Drivers/CMSIS/Include/core_cm4.h **** 
1030:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:Drivers/CMSIS/Include/core_cm4.h **** 
1033:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:Drivers/CMSIS/Include/core_cm4.h **** 
1035:Drivers/CMSIS/Include/core_cm4.h **** 
1036:Drivers/CMSIS/Include/core_cm4.h **** /**
1037:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1038:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:Drivers/CMSIS/Include/core_cm4.h ****   @{
1041:Drivers/CMSIS/Include/core_cm4.h ****  */
1042:Drivers/CMSIS/Include/core_cm4.h **** 
1043:Drivers/CMSIS/Include/core_cm4.h **** /**
1044:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:Drivers/CMSIS/Include/core_cm4.h ****  */
1046:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1047:Drivers/CMSIS/Include/core_cm4.h **** {
1048:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1051:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[55U];
1053:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1055:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[759U];
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 259


1059:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1060:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1063:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[39U];
1067:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1070:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:Drivers/CMSIS/Include/core_cm4.h **** } TPI_Type;
1073:Drivers/CMSIS/Include/core_cm4.h **** 
1074:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:Drivers/CMSIS/Include/core_cm4.h **** 
1078:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:Drivers/CMSIS/Include/core_cm4.h **** 
1082:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:Drivers/CMSIS/Include/core_cm4.h **** 
1086:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:Drivers/CMSIS/Include/core_cm4.h **** 
1089:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:Drivers/CMSIS/Include/core_cm4.h **** 
1092:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:Drivers/CMSIS/Include/core_cm4.h **** 
1095:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:Drivers/CMSIS/Include/core_cm4.h **** 
1099:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:Drivers/CMSIS/Include/core_cm4.h **** 
1102:Drivers/CMSIS/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:Drivers/CMSIS/Include/core_cm4.h **** 
1106:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:Drivers/CMSIS/Include/core_cm4.h **** 
1110:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:Drivers/CMSIS/Include/core_cm4.h **** 
1113:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 260


1116:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:Drivers/CMSIS/Include/core_cm4.h **** 
1119:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:Drivers/CMSIS/Include/core_cm4.h **** 
1122:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:Drivers/CMSIS/Include/core_cm4.h **** 
1125:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:Drivers/CMSIS/Include/core_cm4.h **** 
1128:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1130:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1131:Drivers/CMSIS/Include/core_cm4.h **** 
1132:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1133:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1134:Drivers/CMSIS/Include/core_cm4.h **** 
1135:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1136:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1137:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1138:Drivers/CMSIS/Include/core_cm4.h **** 
1139:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1140:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1141:Drivers/CMSIS/Include/core_cm4.h **** 
1142:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1143:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1144:Drivers/CMSIS/Include/core_cm4.h **** 
1145:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1146:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1147:Drivers/CMSIS/Include/core_cm4.h **** 
1148:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1149:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1150:Drivers/CMSIS/Include/core_cm4.h **** 
1151:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1152:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1153:Drivers/CMSIS/Include/core_cm4.h **** 
1154:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1155:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1156:Drivers/CMSIS/Include/core_cm4.h **** 
1157:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1158:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1159:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1160:Drivers/CMSIS/Include/core_cm4.h **** 
1161:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1162:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1163:Drivers/CMSIS/Include/core_cm4.h **** 
1164:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1165:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1166:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1167:Drivers/CMSIS/Include/core_cm4.h **** 
1168:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1169:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1170:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1171:Drivers/CMSIS/Include/core_cm4.h **** 
1172:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 261


1173:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1174:Drivers/CMSIS/Include/core_cm4.h **** 
1175:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1176:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1177:Drivers/CMSIS/Include/core_cm4.h **** 
1178:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1179:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1180:Drivers/CMSIS/Include/core_cm4.h **** 
1181:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1182:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1183:Drivers/CMSIS/Include/core_cm4.h **** 
1184:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1185:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1186:Drivers/CMSIS/Include/core_cm4.h **** 
1187:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1188:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1189:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1190:Drivers/CMSIS/Include/core_cm4.h **** 
1191:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1192:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1193:Drivers/CMSIS/Include/core_cm4.h **** 
1194:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1195:Drivers/CMSIS/Include/core_cm4.h **** 
1196:Drivers/CMSIS/Include/core_cm4.h **** 
1197:Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1198:Drivers/CMSIS/Include/core_cm4.h **** /**
1199:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1200:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1201:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1202:Drivers/CMSIS/Include/core_cm4.h ****   @{
1203:Drivers/CMSIS/Include/core_cm4.h ****  */
1204:Drivers/CMSIS/Include/core_cm4.h **** 
1205:Drivers/CMSIS/Include/core_cm4.h **** /**
1206:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1207:Drivers/CMSIS/Include/core_cm4.h ****  */
1208:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1209:Drivers/CMSIS/Include/core_cm4.h **** {
1210:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1211:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1212:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1213:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1214:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1215:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1216:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1217:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1218:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1219:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1220:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1221:Drivers/CMSIS/Include/core_cm4.h **** } MPU_Type;
1222:Drivers/CMSIS/Include/core_cm4.h **** 
1223:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1224:Drivers/CMSIS/Include/core_cm4.h **** 
1225:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Type Register Definitions */
1226:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1227:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1228:Drivers/CMSIS/Include/core_cm4.h **** 
1229:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 262


1230:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1231:Drivers/CMSIS/Include/core_cm4.h **** 
1232:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1233:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1234:Drivers/CMSIS/Include/core_cm4.h **** 
1235:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Control Register Definitions */
1236:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1237:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1238:Drivers/CMSIS/Include/core_cm4.h **** 
1239:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1240:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1241:Drivers/CMSIS/Include/core_cm4.h **** 
1242:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1243:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1244:Drivers/CMSIS/Include/core_cm4.h **** 
1245:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1246:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1247:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1248:Drivers/CMSIS/Include/core_cm4.h **** 
1249:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1250:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1251:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1252:Drivers/CMSIS/Include/core_cm4.h **** 
1253:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1254:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1255:Drivers/CMSIS/Include/core_cm4.h **** 
1256:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1257:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1258:Drivers/CMSIS/Include/core_cm4.h **** 
1259:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1260:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1261:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1262:Drivers/CMSIS/Include/core_cm4.h **** 
1263:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1264:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1265:Drivers/CMSIS/Include/core_cm4.h **** 
1266:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1267:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1268:Drivers/CMSIS/Include/core_cm4.h **** 
1269:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1270:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1271:Drivers/CMSIS/Include/core_cm4.h **** 
1272:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1273:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1274:Drivers/CMSIS/Include/core_cm4.h **** 
1275:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1276:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1277:Drivers/CMSIS/Include/core_cm4.h **** 
1278:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1279:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1280:Drivers/CMSIS/Include/core_cm4.h **** 
1281:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1282:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1283:Drivers/CMSIS/Include/core_cm4.h **** 
1284:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1285:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1286:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 263


1287:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1288:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1289:Drivers/CMSIS/Include/core_cm4.h **** 
1290:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1291:Drivers/CMSIS/Include/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1292:Drivers/CMSIS/Include/core_cm4.h **** 
1293:Drivers/CMSIS/Include/core_cm4.h **** 
1294:Drivers/CMSIS/Include/core_cm4.h **** /**
1295:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1296:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1297:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1298:Drivers/CMSIS/Include/core_cm4.h ****   @{
1299:Drivers/CMSIS/Include/core_cm4.h ****  */
1300:Drivers/CMSIS/Include/core_cm4.h **** 
1301:Drivers/CMSIS/Include/core_cm4.h **** /**
1302:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1303:Drivers/CMSIS/Include/core_cm4.h ****  */
1304:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1305:Drivers/CMSIS/Include/core_cm4.h **** {
1306:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1307:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1308:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1309:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1310:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1311:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1312:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1313:Drivers/CMSIS/Include/core_cm4.h **** } FPU_Type;
1314:Drivers/CMSIS/Include/core_cm4.h **** 
1315:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1316:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1317:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1318:Drivers/CMSIS/Include/core_cm4.h **** 
1319:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1320:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1321:Drivers/CMSIS/Include/core_cm4.h **** 
1322:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1323:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1324:Drivers/CMSIS/Include/core_cm4.h **** 
1325:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1326:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1327:Drivers/CMSIS/Include/core_cm4.h **** 
1328:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1329:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1330:Drivers/CMSIS/Include/core_cm4.h **** 
1331:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1332:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1333:Drivers/CMSIS/Include/core_cm4.h **** 
1334:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1335:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1336:Drivers/CMSIS/Include/core_cm4.h **** 
1337:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1338:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1339:Drivers/CMSIS/Include/core_cm4.h **** 
1340:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1341:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1342:Drivers/CMSIS/Include/core_cm4.h **** 
1343:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 264


1344:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1345:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1346:Drivers/CMSIS/Include/core_cm4.h **** 
1347:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1348:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1349:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1350:Drivers/CMSIS/Include/core_cm4.h **** 
1351:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1352:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1353:Drivers/CMSIS/Include/core_cm4.h **** 
1354:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1355:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1356:Drivers/CMSIS/Include/core_cm4.h **** 
1357:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1358:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1359:Drivers/CMSIS/Include/core_cm4.h **** 
1360:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1361:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1362:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1363:Drivers/CMSIS/Include/core_cm4.h **** 
1364:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1365:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1366:Drivers/CMSIS/Include/core_cm4.h **** 
1367:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1368:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1369:Drivers/CMSIS/Include/core_cm4.h **** 
1370:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1371:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1372:Drivers/CMSIS/Include/core_cm4.h **** 
1373:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1374:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1375:Drivers/CMSIS/Include/core_cm4.h **** 
1376:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1377:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1378:Drivers/CMSIS/Include/core_cm4.h **** 
1379:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1380:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1381:Drivers/CMSIS/Include/core_cm4.h **** 
1382:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1383:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1384:Drivers/CMSIS/Include/core_cm4.h **** 
1385:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1386:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1387:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1388:Drivers/CMSIS/Include/core_cm4.h **** 
1389:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1390:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1391:Drivers/CMSIS/Include/core_cm4.h **** 
1392:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1393:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1394:Drivers/CMSIS/Include/core_cm4.h **** 
1395:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1396:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1397:Drivers/CMSIS/Include/core_cm4.h **** 
1398:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1399:Drivers/CMSIS/Include/core_cm4.h **** 
1400:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 265


1401:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1402:Drivers/CMSIS/Include/core_cm4.h **** 
1403:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1404:Drivers/CMSIS/Include/core_cm4.h **** 
1405:Drivers/CMSIS/Include/core_cm4.h **** 
1406:Drivers/CMSIS/Include/core_cm4.h **** /**
1407:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1408:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1409:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1410:Drivers/CMSIS/Include/core_cm4.h ****   @{
1411:Drivers/CMSIS/Include/core_cm4.h ****  */
1412:Drivers/CMSIS/Include/core_cm4.h **** 
1413:Drivers/CMSIS/Include/core_cm4.h **** /**
1414:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1415:Drivers/CMSIS/Include/core_cm4.h ****  */
1416:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1417:Drivers/CMSIS/Include/core_cm4.h **** {
1418:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1419:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1420:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1421:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1422:Drivers/CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
1423:Drivers/CMSIS/Include/core_cm4.h **** 
1424:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1425:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1426:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1427:Drivers/CMSIS/Include/core_cm4.h **** 
1428:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1429:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1430:Drivers/CMSIS/Include/core_cm4.h **** 
1431:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1432:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1433:Drivers/CMSIS/Include/core_cm4.h **** 
1434:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1435:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1436:Drivers/CMSIS/Include/core_cm4.h **** 
1437:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1438:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1439:Drivers/CMSIS/Include/core_cm4.h **** 
1440:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1441:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1442:Drivers/CMSIS/Include/core_cm4.h **** 
1443:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1444:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1445:Drivers/CMSIS/Include/core_cm4.h **** 
1446:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1447:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1448:Drivers/CMSIS/Include/core_cm4.h **** 
1449:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1450:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1451:Drivers/CMSIS/Include/core_cm4.h **** 
1452:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1453:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1454:Drivers/CMSIS/Include/core_cm4.h **** 
1455:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1456:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1457:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 266


1458:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1459:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1460:Drivers/CMSIS/Include/core_cm4.h **** 
1461:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1462:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1463:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1464:Drivers/CMSIS/Include/core_cm4.h **** 
1465:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1466:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1467:Drivers/CMSIS/Include/core_cm4.h **** 
1468:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1469:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1470:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1471:Drivers/CMSIS/Include/core_cm4.h **** 
1472:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1473:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1474:Drivers/CMSIS/Include/core_cm4.h **** 
1475:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1476:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1477:Drivers/CMSIS/Include/core_cm4.h **** 
1478:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1479:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1480:Drivers/CMSIS/Include/core_cm4.h **** 
1481:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1482:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1483:Drivers/CMSIS/Include/core_cm4.h **** 
1484:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1485:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1486:Drivers/CMSIS/Include/core_cm4.h **** 
1487:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1488:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1489:Drivers/CMSIS/Include/core_cm4.h **** 
1490:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1491:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1492:Drivers/CMSIS/Include/core_cm4.h **** 
1493:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1494:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1495:Drivers/CMSIS/Include/core_cm4.h **** 
1496:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1497:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1498:Drivers/CMSIS/Include/core_cm4.h **** 
1499:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1500:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1501:Drivers/CMSIS/Include/core_cm4.h **** 
1502:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1503:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1504:Drivers/CMSIS/Include/core_cm4.h **** 
1505:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1506:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1507:Drivers/CMSIS/Include/core_cm4.h **** 
1508:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1509:Drivers/CMSIS/Include/core_cm4.h **** 
1510:Drivers/CMSIS/Include/core_cm4.h **** 
1511:Drivers/CMSIS/Include/core_cm4.h **** /**
1512:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1513:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1514:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 267


1515:Drivers/CMSIS/Include/core_cm4.h ****   @{
1516:Drivers/CMSIS/Include/core_cm4.h ****  */
1517:Drivers/CMSIS/Include/core_cm4.h **** 
1518:Drivers/CMSIS/Include/core_cm4.h **** /**
1519:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1520:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1521:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1522:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted value.
1523:Drivers/CMSIS/Include/core_cm4.h **** */
1524:Drivers/CMSIS/Include/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1525:Drivers/CMSIS/Include/core_cm4.h **** 
1526:Drivers/CMSIS/Include/core_cm4.h **** /**
1527:Drivers/CMSIS/Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1528:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1529:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1530:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1531:Drivers/CMSIS/Include/core_cm4.h **** */
1532:Drivers/CMSIS/Include/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1533:Drivers/CMSIS/Include/core_cm4.h **** 
1534:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1535:Drivers/CMSIS/Include/core_cm4.h **** 
1536:Drivers/CMSIS/Include/core_cm4.h **** 
1537:Drivers/CMSIS/Include/core_cm4.h **** /**
1538:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1539:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1540:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1541:Drivers/CMSIS/Include/core_cm4.h ****   @{
1542:Drivers/CMSIS/Include/core_cm4.h ****  */
1543:Drivers/CMSIS/Include/core_cm4.h **** 
1544:Drivers/CMSIS/Include/core_cm4.h **** /* Memory mapping of Core Hardware */
1545:Drivers/CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1546:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1547:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1548:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1549:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1550:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1551:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1552:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1553:Drivers/CMSIS/Include/core_cm4.h **** 
1554:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1555:Drivers/CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1556:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1557:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1558:Drivers/CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1559:Drivers/CMSIS/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1560:Drivers/CMSIS/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1561:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1562:Drivers/CMSIS/Include/core_cm4.h **** 
1563:Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1564:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1565:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1566:Drivers/CMSIS/Include/core_cm4.h **** #endif
1567:Drivers/CMSIS/Include/core_cm4.h **** 
1568:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1569:Drivers/CMSIS/Include/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1570:Drivers/CMSIS/Include/core_cm4.h **** 
1571:Drivers/CMSIS/Include/core_cm4.h **** /*@} */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 268


1572:Drivers/CMSIS/Include/core_cm4.h **** 
1573:Drivers/CMSIS/Include/core_cm4.h **** 
1574:Drivers/CMSIS/Include/core_cm4.h **** 
1575:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
1576:Drivers/CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1577:Drivers/CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1578:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1579:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1580:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1581:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
1582:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1583:Drivers/CMSIS/Include/core_cm4.h **** /**
1584:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1585:Drivers/CMSIS/Include/core_cm4.h **** */
1586:Drivers/CMSIS/Include/core_cm4.h **** 
1587:Drivers/CMSIS/Include/core_cm4.h **** 
1588:Drivers/CMSIS/Include/core_cm4.h **** 
1589:Drivers/CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1590:Drivers/CMSIS/Include/core_cm4.h **** /**
1591:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1592:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1593:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1594:Drivers/CMSIS/Include/core_cm4.h ****   @{
1595:Drivers/CMSIS/Include/core_cm4.h ****  */
1596:Drivers/CMSIS/Include/core_cm4.h **** 
1597:Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1598:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1599:Drivers/CMSIS/Include/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1600:Drivers/CMSIS/Include/core_cm4.h ****   #endif
1601:Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1602:Drivers/CMSIS/Include/core_cm4.h **** #else
1603:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1604:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1605:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1606:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1607:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1608:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1609:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1610:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1611:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1612:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1613:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1614:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1615:Drivers/CMSIS/Include/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1616:Drivers/CMSIS/Include/core_cm4.h **** 
1617:Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1618:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1619:Drivers/CMSIS/Include/core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1620:Drivers/CMSIS/Include/core_cm4.h ****   #endif
1621:Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1622:Drivers/CMSIS/Include/core_cm4.h **** #else
1623:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1624:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1625:Drivers/CMSIS/Include/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1626:Drivers/CMSIS/Include/core_cm4.h **** 
1627:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1628:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 269


1629:Drivers/CMSIS/Include/core_cm4.h **** 
1630:Drivers/CMSIS/Include/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1631:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1632:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1633:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1634:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1635:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1636:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1637:Drivers/CMSIS/Include/core_cm4.h **** 
1638:Drivers/CMSIS/Include/core_cm4.h **** 
1639:Drivers/CMSIS/Include/core_cm4.h **** /**
1640:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Priority Grouping
1641:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1642:Drivers/CMSIS/Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1643:Drivers/CMSIS/Include/core_cm4.h ****            Only values from 0..7 are used.
1644:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1645:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1646:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1647:Drivers/CMSIS/Include/core_cm4.h ****  */
1648:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1649:Drivers/CMSIS/Include/core_cm4.h **** {
1650:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
1651:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1652:Drivers/CMSIS/Include/core_cm4.h **** 
1653:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1654:Drivers/CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1655:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
1656:Drivers/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1657:Drivers/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1658:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1659:Drivers/CMSIS/Include/core_cm4.h **** }
1660:Drivers/CMSIS/Include/core_cm4.h **** 
1661:Drivers/CMSIS/Include/core_cm4.h **** 
1662:Drivers/CMSIS/Include/core_cm4.h **** /**
1663:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Priority Grouping
1664:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1665:Drivers/CMSIS/Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1666:Drivers/CMSIS/Include/core_cm4.h ****  */
1667:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
 786              		.loc 7 1667 26 view .LVU264
 787              	.LBB348:
1668:Drivers/CMSIS/Include/core_cm4.h **** {
1669:Drivers/CMSIS/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 788              		.loc 7 1669 3 view .LVU265
 789              		.loc 7 1669 26 is_stmt 0 view .LVU266
 790 01d0 124B     		ldr	r3, .L10+24
 791 01d2 DB68     		ldr	r3, [r3, #12]
 792              	.LVL53:
 793              		.loc 7 1669 26 view .LVU267
 794              	.LBE348:
 795              	.LBE347:
 796              	.LBB349:
 797              	.LBI349:
1670:Drivers/CMSIS/Include/core_cm4.h **** }
1671:Drivers/CMSIS/Include/core_cm4.h **** 
1672:Drivers/CMSIS/Include/core_cm4.h **** 
1673:Drivers/CMSIS/Include/core_cm4.h **** /**
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 270


1674:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Enable Interrupt
1675:Drivers/CMSIS/Include/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1676:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1677:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1678:Drivers/CMSIS/Include/core_cm4.h ****  */
1679:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1680:Drivers/CMSIS/Include/core_cm4.h **** {
1681:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1682:Drivers/CMSIS/Include/core_cm4.h ****   {
1683:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
1684:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1685:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
1686:Drivers/CMSIS/Include/core_cm4.h ****   }
1687:Drivers/CMSIS/Include/core_cm4.h **** }
1688:Drivers/CMSIS/Include/core_cm4.h **** 
1689:Drivers/CMSIS/Include/core_cm4.h **** 
1690:Drivers/CMSIS/Include/core_cm4.h **** /**
1691:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Enable status
1692:Drivers/CMSIS/Include/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1693:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1694:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt is not enabled.
1695:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt is enabled.
1696:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1697:Drivers/CMSIS/Include/core_cm4.h ****  */
1698:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1699:Drivers/CMSIS/Include/core_cm4.h **** {
1700:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1701:Drivers/CMSIS/Include/core_cm4.h ****   {
1702:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1703:Drivers/CMSIS/Include/core_cm4.h ****   }
1704:Drivers/CMSIS/Include/core_cm4.h ****   else
1705:Drivers/CMSIS/Include/core_cm4.h ****   {
1706:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1707:Drivers/CMSIS/Include/core_cm4.h ****   }
1708:Drivers/CMSIS/Include/core_cm4.h **** }
1709:Drivers/CMSIS/Include/core_cm4.h **** 
1710:Drivers/CMSIS/Include/core_cm4.h **** 
1711:Drivers/CMSIS/Include/core_cm4.h **** /**
1712:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Disable Interrupt
1713:Drivers/CMSIS/Include/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1714:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1715:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1716:Drivers/CMSIS/Include/core_cm4.h ****  */
1717:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1718:Drivers/CMSIS/Include/core_cm4.h **** {
1719:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1720:Drivers/CMSIS/Include/core_cm4.h ****   {
1721:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1722:Drivers/CMSIS/Include/core_cm4.h ****     __DSB();
1723:Drivers/CMSIS/Include/core_cm4.h ****     __ISB();
1724:Drivers/CMSIS/Include/core_cm4.h ****   }
1725:Drivers/CMSIS/Include/core_cm4.h **** }
1726:Drivers/CMSIS/Include/core_cm4.h **** 
1727:Drivers/CMSIS/Include/core_cm4.h **** 
1728:Drivers/CMSIS/Include/core_cm4.h **** /**
1729:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Pending Interrupt
1730:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 271


1731:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1732:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not pending.
1733:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is pending.
1734:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1735:Drivers/CMSIS/Include/core_cm4.h ****  */
1736:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1737:Drivers/CMSIS/Include/core_cm4.h **** {
1738:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1739:Drivers/CMSIS/Include/core_cm4.h ****   {
1740:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1741:Drivers/CMSIS/Include/core_cm4.h ****   }
1742:Drivers/CMSIS/Include/core_cm4.h ****   else
1743:Drivers/CMSIS/Include/core_cm4.h ****   {
1744:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1745:Drivers/CMSIS/Include/core_cm4.h ****   }
1746:Drivers/CMSIS/Include/core_cm4.h **** }
1747:Drivers/CMSIS/Include/core_cm4.h **** 
1748:Drivers/CMSIS/Include/core_cm4.h **** 
1749:Drivers/CMSIS/Include/core_cm4.h **** /**
1750:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Pending Interrupt
1751:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1752:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1753:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1754:Drivers/CMSIS/Include/core_cm4.h ****  */
1755:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1756:Drivers/CMSIS/Include/core_cm4.h **** {
1757:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1758:Drivers/CMSIS/Include/core_cm4.h ****   {
1759:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1760:Drivers/CMSIS/Include/core_cm4.h ****   }
1761:Drivers/CMSIS/Include/core_cm4.h **** }
1762:Drivers/CMSIS/Include/core_cm4.h **** 
1763:Drivers/CMSIS/Include/core_cm4.h **** 
1764:Drivers/CMSIS/Include/core_cm4.h **** /**
1765:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Clear Pending Interrupt
1766:Drivers/CMSIS/Include/core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1767:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1768:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1769:Drivers/CMSIS/Include/core_cm4.h ****  */
1770:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1771:Drivers/CMSIS/Include/core_cm4.h **** {
1772:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1773:Drivers/CMSIS/Include/core_cm4.h ****   {
1774:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1775:Drivers/CMSIS/Include/core_cm4.h ****   }
1776:Drivers/CMSIS/Include/core_cm4.h **** }
1777:Drivers/CMSIS/Include/core_cm4.h **** 
1778:Drivers/CMSIS/Include/core_cm4.h **** 
1779:Drivers/CMSIS/Include/core_cm4.h **** /**
1780:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Active Interrupt
1781:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1782:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1783:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not active.
1784:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is active.
1785:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1786:Drivers/CMSIS/Include/core_cm4.h ****  */
1787:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 272


1788:Drivers/CMSIS/Include/core_cm4.h **** {
1789:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1790:Drivers/CMSIS/Include/core_cm4.h ****   {
1791:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1792:Drivers/CMSIS/Include/core_cm4.h ****   }
1793:Drivers/CMSIS/Include/core_cm4.h ****   else
1794:Drivers/CMSIS/Include/core_cm4.h ****   {
1795:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1796:Drivers/CMSIS/Include/core_cm4.h ****   }
1797:Drivers/CMSIS/Include/core_cm4.h **** }
1798:Drivers/CMSIS/Include/core_cm4.h **** 
1799:Drivers/CMSIS/Include/core_cm4.h **** 
1800:Drivers/CMSIS/Include/core_cm4.h **** /**
1801:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Priority
1802:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1803:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1804:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1805:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1806:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]  priority  Priority to set.
1807:Drivers/CMSIS/Include/core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1808:Drivers/CMSIS/Include/core_cm4.h ****  */
1809:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1810:Drivers/CMSIS/Include/core_cm4.h **** {
1811:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1812:Drivers/CMSIS/Include/core_cm4.h ****   {
1813:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1814:Drivers/CMSIS/Include/core_cm4.h ****   }
1815:Drivers/CMSIS/Include/core_cm4.h ****   else
1816:Drivers/CMSIS/Include/core_cm4.h ****   {
1817:Drivers/CMSIS/Include/core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1818:Drivers/CMSIS/Include/core_cm4.h ****   }
1819:Drivers/CMSIS/Include/core_cm4.h **** }
1820:Drivers/CMSIS/Include/core_cm4.h **** 
1821:Drivers/CMSIS/Include/core_cm4.h **** 
1822:Drivers/CMSIS/Include/core_cm4.h **** /**
1823:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Priority
1824:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1825:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1826:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1827:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1828:Drivers/CMSIS/Include/core_cm4.h ****   \return             Interrupt Priority.
1829:Drivers/CMSIS/Include/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1830:Drivers/CMSIS/Include/core_cm4.h ****  */
1831:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1832:Drivers/CMSIS/Include/core_cm4.h **** {
1833:Drivers/CMSIS/Include/core_cm4.h **** 
1834:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1835:Drivers/CMSIS/Include/core_cm4.h ****   {
1836:Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1837:Drivers/CMSIS/Include/core_cm4.h ****   }
1838:Drivers/CMSIS/Include/core_cm4.h ****   else
1839:Drivers/CMSIS/Include/core_cm4.h ****   {
1840:Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1841:Drivers/CMSIS/Include/core_cm4.h ****   }
1842:Drivers/CMSIS/Include/core_cm4.h **** }
1843:Drivers/CMSIS/Include/core_cm4.h **** 
1844:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 273


1845:Drivers/CMSIS/Include/core_cm4.h **** /**
1846:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Encode Priority
1847:Drivers/CMSIS/Include/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1848:Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value, and subpriority value.
1849:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1850:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1851:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1852:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1853:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1854:Drivers/CMSIS/Include/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1855:Drivers/CMSIS/Include/core_cm4.h ****  */
1856:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
 798              		.loc 7 1856 26 is_stmt 1 view .LVU268
 799              	.LBB350:
1857:Drivers/CMSIS/Include/core_cm4.h **** {
1858:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 800              		.loc 7 1858 3 view .LVU269
1859:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 801              		.loc 7 1859 3 view .LVU270
1860:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
 802              		.loc 7 1860 3 view .LVU271
1861:Drivers/CMSIS/Include/core_cm4.h **** 
1862:Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 803              		.loc 7 1862 3 view .LVU272
1863:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 804              		.loc 7 1863 3 view .LVU273
1864:Drivers/CMSIS/Include/core_cm4.h **** 
1865:Drivers/CMSIS/Include/core_cm4.h ****   return (
 805              		.loc 7 1865 3 view .LVU274
 806              		.loc 7 1865 3 is_stmt 0 view .LVU275
 807              	.LBE350:
 808              	.LBE349:
 809              	.LBB351:
 810              	.LBI351:
1809:Drivers/CMSIS/Include/core_cm4.h **** {
 811              		.loc 7 1809 22 is_stmt 1 view .LVU276
 812              	.LBB352:
1811:Drivers/CMSIS/Include/core_cm4.h ****   {
 813              		.loc 7 1811 3 view .LVU277
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 814              		.loc 7 1813 5 view .LVU278
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 815              		.loc 7 1813 46 is_stmt 0 view .LVU279
 816 01d4 124B     		ldr	r3, .L10+28
 817 01d6 0022     		movs	r2, #0
 818 01d8 83F82523 		strb	r2, [r3, #805]
 819              	.LVL54:
1813:Drivers/CMSIS/Include/core_cm4.h ****   }
 820              		.loc 7 1813 46 view .LVU280
 821              	.LBE352:
 822              	.LBE351:
 108:Core/Src/usart.c ****     NVIC_EnableIRQ(USART1_IRQn);
 823              		.loc 1 108 5 is_stmt 1 view .LVU281
 824              	.LBB353:
 825              	.LBI353:
1679:Drivers/CMSIS/Include/core_cm4.h **** {
 826              		.loc 7 1679 22 view .LVU282
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 274


 827              	.LBB354:
1681:Drivers/CMSIS/Include/core_cm4.h ****   {
 828              		.loc 7 1681 3 view .LVU283
1683:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 829              		.loc 7 1683 5 view .LVU284
1684:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 830              		.loc 7 1684 5 view .LVU285
1684:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 831              		.loc 7 1684 43 is_stmt 0 view .LVU286
 832 01dc 2022     		movs	r2, #32
 833 01de 5A60     		str	r2, [r3, #4]
1685:Drivers/CMSIS/Include/core_cm4.h ****   }
 834              		.loc 7 1685 5 is_stmt 1 view .LVU287
 835              	.LVL55:
1685:Drivers/CMSIS/Include/core_cm4.h ****   }
 836              		.loc 7 1685 5 is_stmt 0 view .LVU288
 837              	.LBE354:
 838              	.LBE353:
 109:Core/Src/usart.c **** 
 110:Core/Src/usart.c ****     LL_DMA_EnableChannel(DMA1, LL_DMA_CHANNEL_5);
 839              		.loc 1 110 5 is_stmt 1 view .LVU289
 840              	.LBB355:
 841              	.LBI355:
 552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 842              		.loc 4 552 22 view .LVU290
 843              	.LBB356:
 554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   SET_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_EN);
 844              		.loc 4 554 3 view .LVU291
 555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 845              		.loc 4 555 3 view .LVU292
 846 01e0 084A     		ldr	r2, .L10
 847 01e2 936D     		ldr	r3, [r2, #88]
 848 01e4 43F00103 		orr	r3, r3, #1
 849 01e8 9365     		str	r3, [r2, #88]
 850              	.LVL56:
 555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 851              		.loc 4 555 3 is_stmt 0 view .LVU293
 852              	.LBE356:
 853              	.LBE355:
 111:Core/Src/usart.c ****     LL_USART_Enable(USART1);
 854              		.loc 1 111 5 is_stmt 1 view .LVU294
 855              	.LBB357:
 856              	.LBI357:
 687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 857              		.loc 6 687 22 view .LVU295
 858              	.LBB358:
 689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 859              		.loc 6 689 3 view .LVU296
 860 01ea A2F54842 		sub	r2, r2, #51200
 861 01ee 1368     		ldr	r3, [r2]
 862 01f0 43F00103 		orr	r3, r3, #1
 863 01f4 1360     		str	r3, [r2]
 864              	.LVL57:
 689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 865              		.loc 6 689 3 is_stmt 0 view .LVU297
 866              	.LBE358:
 867              	.LBE357:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 275


 112:Core/Src/usart.c **** }
 868              		.loc 1 112 1 view .LVU298
 869 01f6 10B0     		add	sp, sp, #64
 870              		.cfi_remember_state
 871              		.cfi_def_cfa_offset 8
 872              		@ sp needed
 873 01f8 10BD     		pop	{r4, pc}
 874              	.LVL58:
 875              	.L7:
 876              		.cfi_restore_state
 877              	.LBB359:
 878              	.LBB271:
 879              	.LBB270:
 880              	.LBB269:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 881              		.loc 5 1091 12 view .LVU299
 882 01fa 2023     		movs	r3, #32
 883              	.LVL59:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 884              		.loc 5 1091 12 view .LVU300
 885 01fc 48E7     		b	.L2
 886              	.LVL60:
 887              	.L8:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 888              		.loc 5 1091 12 view .LVU301
 889              	.LBE269:
 890              	.LBE270:
 891              	.LBE271:
 892              	.LBE359:
 893              	.LBB360:
 894              	.LBB302:
 895              	.LBB301:
 896              	.LBB300:
 897 01fe 2023     		movs	r3, #32
 898              	.LVL61:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 899              		.loc 5 1091 12 view .LVU302
 900 0200 81E7     		b	.L3
 901              	.L11:
 902 0202 00BF     		.align	2
 903              	.L10:
 904 0204 00000240 		.word	1073872896
 905 0208 24380140 		.word	1073821732
 906 020c 00000000 		.word	Buffs
 907 0210 28380140 		.word	1073821736
 908 0214 00380140 		.word	1073821696
 909 0218 08380140 		.word	1073821704
 910 021c 00ED00E0 		.word	-536810240
 911 0220 00E100E0 		.word	-536813312
 912              	.LBE300:
 913              	.LBE301:
 914              	.LBE302:
 915              	.LBE360:
 916              		.cfi_endproc
 917              	.LFE1155:
 919              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 920              		.align	1
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 276


 921              		.global	MX_USART2_UART_Init
 922              		.syntax unified
 923              		.thumb
 924              		.thumb_func
 925              		.fpu fpv4-sp-d16
 927              	MX_USART2_UART_Init:
 928              	.LFB1156:
 113:Core/Src/usart.c **** 
 114:Core/Src/usart.c **** /* USART2 init function */
 115:Core/Src/usart.c **** 
 116:Core/Src/usart.c **** void MX_USART2_UART_Init(void)
 117:Core/Src/usart.c **** {
 929              		.loc 1 117 1 is_stmt 1 view -0
 930              		.cfi_startproc
 931              		@ args = 0, pretend = 0, frame = 64
 932              		@ frame_needed = 0, uses_anonymous_args = 0
 933 0000 70B5     		push	{r4, r5, r6, lr}
 934              		.cfi_def_cfa_offset 16
 935              		.cfi_offset 4, -16
 936              		.cfi_offset 5, -12
 937              		.cfi_offset 6, -8
 938              		.cfi_offset 14, -4
 939 0002 90B0     		sub	sp, sp, #64
 940              		.cfi_def_cfa_offset 80
 118:Core/Src/usart.c **** 
 119:Core/Src/usart.c ****     /* USER CODE BEGIN USART2_Init 0 */
 120:Core/Src/usart.c **** 
 121:Core/Src/usart.c ****     /* USER CODE END USART2_Init 0 */
 122:Core/Src/usart.c **** 
 123:Core/Src/usart.c ****     LL_USART_InitTypeDef USART_InitStruct = {0};
 941              		.loc 1 123 5 view .LVU304
 942              		.loc 1 123 26 is_stmt 0 view .LVU305
 943 0004 0024     		movs	r4, #0
 944 0006 0994     		str	r4, [sp, #36]
 945 0008 0A94     		str	r4, [sp, #40]
 946 000a 0B94     		str	r4, [sp, #44]
 947 000c 0C94     		str	r4, [sp, #48]
 948 000e 0D94     		str	r4, [sp, #52]
 949 0010 0E94     		str	r4, [sp, #56]
 950 0012 0F94     		str	r4, [sp, #60]
 124:Core/Src/usart.c **** 
 125:Core/Src/usart.c ****     LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 951              		.loc 1 125 5 is_stmt 1 view .LVU306
 952              		.loc 1 125 25 is_stmt 0 view .LVU307
 953 0014 0394     		str	r4, [sp, #12]
 954 0016 0494     		str	r4, [sp, #16]
 955 0018 0594     		str	r4, [sp, #20]
 956 001a 0694     		str	r4, [sp, #24]
 957 001c 0794     		str	r4, [sp, #28]
 958 001e 0894     		str	r4, [sp, #32]
 126:Core/Src/usart.c **** 
 127:Core/Src/usart.c ****     LL_RCC_SetUSARTClockSource(LL_RCC_USART2_CLKSOURCE_PCLK1);
 959              		.loc 1 127 5 is_stmt 1 view .LVU308
 960              	.LVL62:
 961              	.LBB361:
 962              	.LBI361:
2950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_rcc.h **** {
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 277


 963              		.loc 2 2950 22 view .LVU309
 964              	.LBB362:
 965              		.loc 2 2952 3 view .LVU310
 966 0020 274B     		ldr	r3, .L14
 967 0022 D3F88820 		ldr	r2, [r3, #136]
 968 0026 22F00C02 		bic	r2, r2, #12
 969 002a C3F88820 		str	r2, [r3, #136]
 970              	.LVL63:
 971              		.loc 2 2952 3 is_stmt 0 view .LVU311
 972              	.LBE362:
 973              	.LBE361:
 128:Core/Src/usart.c **** 
 129:Core/Src/usart.c ****     /* Peripheral clock enable */
 130:Core/Src/usart.c ****     LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_USART2);
 974              		.loc 1 130 5 is_stmt 1 view .LVU312
 975              	.LBB363:
 976              	.LBI363:
1087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 977              		.loc 3 1087 22 view .LVU313
 978              	.LBB364:
1089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR1, Periphs);
 979              		.loc 3 1089 3 view .LVU314
1090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 980              		.loc 3 1090 3 view .LVU315
 981 002e 9A6D     		ldr	r2, [r3, #88]
 982 0030 42F40032 		orr	r2, r2, #131072
 983 0034 9A65     		str	r2, [r3, #88]
1092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
 984              		.loc 3 1092 3 view .LVU316
1092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
 985              		.loc 3 1092 12 is_stmt 0 view .LVU317
 986 0036 9A6D     		ldr	r2, [r3, #88]
 987 0038 02F40032 		and	r2, r2, #131072
1092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
 988              		.loc 3 1092 10 view .LVU318
 989 003c 0292     		str	r2, [sp, #8]
1093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 990              		.loc 3 1093 3 is_stmt 1 view .LVU319
 991 003e 029A     		ldr	r2, [sp, #8]
 992              	.LVL64:
1093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 993              		.loc 3 1093 3 is_stmt 0 view .LVU320
 994              	.LBE364:
 995              	.LBE363:
 131:Core/Src/usart.c **** 
 132:Core/Src/usart.c ****     LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOA);
 996              		.loc 1 132 5 is_stmt 1 view .LVU321
 997              	.LBB365:
 998              	.LBI365:
 563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** {
 999              		.loc 3 563 22 view .LVU322
 1000              	.LBB366:
 565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 1001              		.loc 3 565 3 view .LVU323
 566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 1002              		.loc 3 566 3 view .LVU324
 1003 0040 DA6C     		ldr	r2, [r3, #76]
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 278


 1004 0042 42F00102 		orr	r2, r2, #1
 1005 0046 DA64     		str	r2, [r3, #76]
 568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
 1006              		.loc 3 568 3 view .LVU325
 568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
 1007              		.loc 3 568 12 is_stmt 0 view .LVU326
 1008 0048 DB6C     		ldr	r3, [r3, #76]
 1009 004a 03F00103 		and	r3, r3, #1
 568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h ****   (void)tmpreg;
 1010              		.loc 3 568 10 view .LVU327
 1011 004e 0193     		str	r3, [sp, #4]
 569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 1012              		.loc 3 569 3 is_stmt 1 view .LVU328
 1013 0050 019B     		ldr	r3, [sp, #4]
 1014              	.LVL65:
 569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_bus.h **** }
 1015              		.loc 3 569 3 is_stmt 0 view .LVU329
 1016              	.LBE366:
 1017              	.LBE365:
 133:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 134:Core/Src/usart.c ****     PA2   ------> USART2_TX
 135:Core/Src/usart.c ****     PA15 (JTDI)   ------> USART2_RX
 136:Core/Src/usart.c ****     */
 137:Core/Src/usart.c ****     GPIO_InitStruct.Pin = LL_GPIO_PIN_2;
 1018              		.loc 1 137 5 is_stmt 1 view .LVU330
 1019              		.loc 1 137 25 is_stmt 0 view .LVU331
 1020 0052 0423     		movs	r3, #4
 1021 0054 0393     		str	r3, [sp, #12]
 138:Core/Src/usart.c ****     GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 1022              		.loc 1 138 5 is_stmt 1 view .LVU332
 1023              		.loc 1 138 26 is_stmt 0 view .LVU333
 1024 0056 0226     		movs	r6, #2
 1025 0058 0496     		str	r6, [sp, #16]
 139:Core/Src/usart.c ****     GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_VERY_HIGH;
 1026              		.loc 1 139 5 is_stmt 1 view .LVU334
 1027              		.loc 1 139 27 is_stmt 0 view .LVU335
 1028 005a 0325     		movs	r5, #3
 1029 005c 0595     		str	r5, [sp, #20]
 140:Core/Src/usart.c ****     GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 1030              		.loc 1 140 5 is_stmt 1 view .LVU336
 141:Core/Src/usart.c ****     GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 1031              		.loc 1 141 5 view .LVU337
 142:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = LL_GPIO_AF_7;
 1032              		.loc 1 142 5 view .LVU338
 1033              		.loc 1 142 31 is_stmt 0 view .LVU339
 1034 005e 0723     		movs	r3, #7
 1035 0060 0893     		str	r3, [sp, #32]
 143:Core/Src/usart.c ****     LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1036              		.loc 1 143 5 is_stmt 1 view .LVU340
 1037 0062 03A9     		add	r1, sp, #12
 1038 0064 4FF09040 		mov	r0, #1207959552
 1039 0068 FFF7FEFF 		bl	LL_GPIO_Init
 1040              	.LVL66:
 144:Core/Src/usart.c **** 
 145:Core/Src/usart.c ****     GPIO_InitStruct.Pin = LL_GPIO_PIN_15;
 1041              		.loc 1 145 5 view .LVU341
 1042              		.loc 1 145 25 is_stmt 0 view .LVU342
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 279


 1043 006c 4FF40043 		mov	r3, #32768
 1044 0070 0393     		str	r3, [sp, #12]
 146:Core/Src/usart.c ****     GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 1045              		.loc 1 146 5 is_stmt 1 view .LVU343
 1046              		.loc 1 146 26 is_stmt 0 view .LVU344
 1047 0072 0496     		str	r6, [sp, #16]
 147:Core/Src/usart.c ****     GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_VERY_HIGH;
 1048              		.loc 1 147 5 is_stmt 1 view .LVU345
 1049              		.loc 1 147 27 is_stmt 0 view .LVU346
 1050 0074 0595     		str	r5, [sp, #20]
 148:Core/Src/usart.c ****     GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 1051              		.loc 1 148 5 is_stmt 1 view .LVU347
 1052              		.loc 1 148 32 is_stmt 0 view .LVU348
 1053 0076 0694     		str	r4, [sp, #24]
 149:Core/Src/usart.c ****     GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 1054              		.loc 1 149 5 is_stmt 1 view .LVU349
 1055              		.loc 1 149 26 is_stmt 0 view .LVU350
 1056 0078 0794     		str	r4, [sp, #28]
 150:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = LL_GPIO_AF_3;
 1057              		.loc 1 150 5 is_stmt 1 view .LVU351
 1058              		.loc 1 150 31 is_stmt 0 view .LVU352
 1059 007a 0895     		str	r5, [sp, #32]
 151:Core/Src/usart.c ****     LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1060              		.loc 1 151 5 is_stmt 1 view .LVU353
 1061 007c 03A9     		add	r1, sp, #12
 1062 007e 4FF09040 		mov	r0, #1207959552
 1063 0082 FFF7FEFF 		bl	LL_GPIO_Init
 1064              	.LVL67:
 152:Core/Src/usart.c **** 
 153:Core/Src/usart.c ****     /* USER CODE BEGIN USART2_Init 1 */
 154:Core/Src/usart.c **** 
 155:Core/Src/usart.c ****     /* USER CODE END USART2_Init 1 */
 156:Core/Src/usart.c ****     USART_InitStruct.BaudRate = 115200;
 1065              		.loc 1 156 5 view .LVU354
 1066              		.loc 1 156 31 is_stmt 0 view .LVU355
 1067 0086 4FF4E133 		mov	r3, #115200
 1068 008a 0993     		str	r3, [sp, #36]
 157:Core/Src/usart.c ****     USART_InitStruct.DataWidth = LL_USART_DATAWIDTH_8B;
 1069              		.loc 1 157 5 is_stmt 1 view .LVU356
 1070              		.loc 1 157 32 is_stmt 0 view .LVU357
 1071 008c 0A94     		str	r4, [sp, #40]
 158:Core/Src/usart.c ****     USART_InitStruct.StopBits = LL_USART_STOPBITS_1;
 1072              		.loc 1 158 5 is_stmt 1 view .LVU358
 1073              		.loc 1 158 31 is_stmt 0 view .LVU359
 1074 008e 0B94     		str	r4, [sp, #44]
 159:Core/Src/usart.c ****     USART_InitStruct.Parity = LL_USART_PARITY_NONE;
 1075              		.loc 1 159 5 is_stmt 1 view .LVU360
 1076              		.loc 1 159 29 is_stmt 0 view .LVU361
 1077 0090 0C94     		str	r4, [sp, #48]
 160:Core/Src/usart.c ****     USART_InitStruct.TransferDirection = LL_USART_DIRECTION_TX_RX;
 1078              		.loc 1 160 5 is_stmt 1 view .LVU362
 1079              		.loc 1 160 40 is_stmt 0 view .LVU363
 1080 0092 0C23     		movs	r3, #12
 1081 0094 0D93     		str	r3, [sp, #52]
 161:Core/Src/usart.c ****     USART_InitStruct.HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 1082              		.loc 1 161 5 is_stmt 1 view .LVU364
 1083              		.loc 1 161 42 is_stmt 0 view .LVU365
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 280


 1084 0096 0E94     		str	r4, [sp, #56]
 162:Core/Src/usart.c ****     USART_InitStruct.OverSampling = LL_USART_OVERSAMPLING_16;
 1085              		.loc 1 162 5 is_stmt 1 view .LVU366
 1086              		.loc 1 162 35 is_stmt 0 view .LVU367
 1087 0098 0F94     		str	r4, [sp, #60]
 163:Core/Src/usart.c ****     LL_USART_Init(USART2, &USART_InitStruct);
 1088              		.loc 1 163 5 is_stmt 1 view .LVU368
 1089 009a 0A4C     		ldr	r4, .L14+4
 1090 009c 09A9     		add	r1, sp, #36
 1091 009e 2046     		mov	r0, r4
 1092 00a0 FFF7FEFF 		bl	LL_USART_Init
 1093              	.LVL68:
 164:Core/Src/usart.c ****     LL_USART_ConfigAsyncMode(USART2);
 1094              		.loc 1 164 5 view .LVU369
 1095              	.LBB367:
 1096              	.LBI367:
2804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 1097              		.loc 6 2804 22 view .LVU370
 1098              	.LBB368:
2810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
 1099              		.loc 6 2810 3 view .LVU371
 1100 00a4 6368     		ldr	r3, [r4, #4]
 1101 00a6 23F49043 		bic	r3, r3, #18432
 1102 00aa 6360     		str	r3, [r4, #4]
2811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 1103              		.loc 6 2811 3 view .LVU372
 1104 00ac A368     		ldr	r3, [r4, #8]
 1105 00ae 23F02A03 		bic	r3, r3, #42
 1106 00b2 A360     		str	r3, [r4, #8]
 1107              	.LVL69:
2811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 1108              		.loc 6 2811 3 is_stmt 0 view .LVU373
 1109              	.LBE368:
 1110              	.LBE367:
 165:Core/Src/usart.c ****     LL_USART_Enable(USART2);
 1111              		.loc 1 165 5 is_stmt 1 view .LVU374
 1112              	.LBB369:
 1113              	.LBI369:
 687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 1114              		.loc 6 687 22 view .LVU375
 1115              	.LBB370:
 689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 1116              		.loc 6 689 3 view .LVU376
 1117 00b4 2368     		ldr	r3, [r4]
 1118 00b6 43F00103 		orr	r3, r3, #1
 1119 00ba 2360     		str	r3, [r4]
 1120              	.LVL70:
 689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 1121              		.loc 6 689 3 is_stmt 0 view .LVU377
 1122              	.LBE370:
 1123              	.LBE369:
 166:Core/Src/usart.c ****     /* USER CODE BEGIN USART2_Init 2 */
 167:Core/Src/usart.c **** 
 168:Core/Src/usart.c ****     /* USER CODE END USART2_Init 2 */
 169:Core/Src/usart.c **** }
 1124              		.loc 1 169 1 view .LVU378
 1125 00bc 10B0     		add	sp, sp, #64
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 281


 1126              		.cfi_def_cfa_offset 16
 1127              		@ sp needed
 1128 00be 70BD     		pop	{r4, r5, r6, pc}
 1129              	.L15:
 1130              		.align	2
 1131              	.L14:
 1132 00c0 00100240 		.word	1073876992
 1133 00c4 00440040 		.word	1073759232
 1134              		.cfi_endproc
 1135              	.LFE1156:
 1137              		.section	.text.serialWrite,"ax",%progbits
 1138              		.align	1
 1139              		.global	serialWrite
 1140              		.syntax unified
 1141              		.thumb
 1142              		.thumb_func
 1143              		.fpu fpv4-sp-d16
 1145              	serialWrite:
 1146              	.LFB1157:
 170:Core/Src/usart.c **** 
 171:Core/Src/usart.c **** /** @brief Uses polling to write data to the transmit buffer.
 172:Core/Src/usart.c ****  *
 173:Core/Src/usart.c ****  *  @param ch The character to send.
 174:Core/Src/usart.c ****  *  @return Void.
 175:Core/Src/usart.c ****  */
 176:Core/Src/usart.c **** void serialWrite(uint8_t ch)
 177:Core/Src/usart.c **** {
 1147              		.loc 1 177 1 is_stmt 1 view -0
 1148              		.cfi_startproc
 1149              		@ args = 0, pretend = 0, frame = 0
 1150              		@ frame_needed = 0, uses_anonymous_args = 0
 1151              		@ link register save eliminated.
 1152              	.LVL71:
 1153              	.L17:
 178:Core/Src/usart.c ****     while (!(USART2->ISR & USART_ISR_TXE))
 179:Core/Src/usart.c ****         ;             // waits for TX buffer to become empty
 1154              		.loc 1 179 9 discriminator 1 view .LVU380
 178:Core/Src/usart.c ****     while (!(USART2->ISR & USART_ISR_TXE))
 1155              		.loc 1 178 11 discriminator 1 view .LVU381
 178:Core/Src/usart.c ****     while (!(USART2->ISR & USART_ISR_TXE))
 1156              		.loc 1 178 20 is_stmt 0 discriminator 1 view .LVU382
 1157 0000 044B     		ldr	r3, .L18
 1158 0002 DB69     		ldr	r3, [r3, #28]
 178:Core/Src/usart.c ****     while (!(USART2->ISR & USART_ISR_TXE))
 1159              		.loc 1 178 11 discriminator 1 view .LVU383
 1160 0004 13F0800F 		tst	r3, #128
 1161 0008 FAD0     		beq	.L17
 180:Core/Src/usart.c ****     USART2->TDR = ch; // transfers the value of the data register into ch
 1162              		.loc 1 180 5 is_stmt 1 view .LVU384
 1163              		.loc 1 180 17 is_stmt 0 view .LVU385
 1164 000a 80B2     		uxth	r0, r0
 1165              	.LVL72:
 1166              		.loc 1 180 17 view .LVU386
 1167 000c 014B     		ldr	r3, .L18
 1168 000e 1885     		strh	r0, [r3, #40]	@ movhi
 181:Core/Src/usart.c **** }
 1169              		.loc 1 181 1 view .LVU387
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 282


 1170 0010 7047     		bx	lr
 1171              	.L19:
 1172 0012 00BF     		.align	2
 1173              	.L18:
 1174 0014 00440040 		.word	1073759232
 1175              		.cfi_endproc
 1176              	.LFE1157:
 1178              		.section	.text.serialRead,"ax",%progbits
 1179              		.align	1
 1180              		.global	serialRead
 1181              		.syntax unified
 1182              		.thumb
 1183              		.thumb_func
 1184              		.fpu fpv4-sp-d16
 1186              	serialRead:
 1187              	.LFB1158:
 182:Core/Src/usart.c **** 
 183:Core/Src/usart.c **** char serialRead(void)
 184:Core/Src/usart.c **** {
 1188              		.loc 1 184 1 is_stmt 1 view -0
 1189              		.cfi_startproc
 1190              		@ args = 0, pretend = 0, frame = 0
 1191              		@ frame_needed = 0, uses_anonymous_args = 0
 1192              		@ link register save eliminated.
 1193              	.L21:
 185:Core/Src/usart.c ****     char ch = '\0';
 186:Core/Src/usart.c ****     while (!(USART2->ISR & USART_ISR_RXNE))
 187:Core/Src/usart.c ****         ;
 1194              		.loc 1 187 9 discriminator 1 view .LVU389
 186:Core/Src/usart.c ****         ;
 1195              		.loc 1 186 11 discriminator 1 view .LVU390
 186:Core/Src/usart.c ****         ;
 1196              		.loc 1 186 20 is_stmt 0 discriminator 1 view .LVU391
 1197 0000 044B     		ldr	r3, .L22
 1198 0002 DB69     		ldr	r3, [r3, #28]
 186:Core/Src/usart.c ****         ;
 1199              		.loc 1 186 11 discriminator 1 view .LVU392
 1200 0004 13F0200F 		tst	r3, #32
 1201 0008 FAD0     		beq	.L21
 188:Core/Src/usart.c ****     return ch = (char)USART2->RDR;
 1202              		.loc 1 188 5 is_stmt 1 view .LVU393
 1203              		.loc 1 188 29 is_stmt 0 view .LVU394
 1204 000a 024B     		ldr	r3, .L22
 1205 000c 988C     		ldrh	r0, [r3, #36]
 1206              	.LVL73:
 189:Core/Src/usart.c **** }
 1207              		.loc 1 189 1 view .LVU395
 1208 000e C0B2     		uxtb	r0, r0
 1209              		.loc 1 189 1 view .LVU396
 1210 0010 7047     		bx	lr
 1211              	.L23:
 1212 0012 00BF     		.align	2
 1213              	.L22:
 1214 0014 00440040 		.word	1073759232
 1215              		.cfi_endproc
 1216              	.LFE1158:
 1218              		.section	.text.usart_process_data,"ax",%progbits
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 283


 1219              		.align	1
 1220              		.global	usart_process_data
 1221              		.syntax unified
 1222              		.thumb
 1223              		.thumb_func
 1224              		.fpu fpv4-sp-d16
 1226              	usart_process_data:
 1227              	.LVL74:
 1228              	.LFB1160:
 190:Core/Src/usart.c **** 
 191:Core/Src/usart.c **** /**
 192:Core/Src/usart.c ****  * \brief           Check for new data received with DMA
 193:Core/Src/usart.c ****  *
 194:Core/Src/usart.c ****  * User must select context to call this function from:
 195:Core/Src/usart.c ****  * - Only interrupts (DMA HT, DMA TC, UART IDLE) with same preemption priority level
 196:Core/Src/usart.c ****  * - Only thread context (outside interrupts)
 197:Core/Src/usart.c ****  *
 198:Core/Src/usart.c ****  * If called from both context-es, exclusive access protection must be implemented
 199:Core/Src/usart.c ****  * This mode is not advised as it usually means architecture design problems
 200:Core/Src/usart.c ****  *
 201:Core/Src/usart.c ****  * When IDLE interrupt is not present, application must rely only on thread context,
 202:Core/Src/usart.c ****  * by manually calling function as quickly as possible, to make sure
 203:Core/Src/usart.c ****  * data are read from raw buffer and processed.
 204:Core/Src/usart.c ****  *
 205:Core/Src/usart.c ****  * Not doing reads fast enough may cause DMA to overflow unread received bytes,
 206:Core/Src/usart.c ****  * hence application will lost useful data.
 207:Core/Src/usart.c ****  *
 208:Core/Src/usart.c ****  * Solutions to this are:
 209:Core/Src/usart.c ****  * - Improve architecture design to achieve faster reads
 210:Core/Src/usart.c ****  * - Increase raw buffer size and allow DMA to write more data before this function is called
 211:Core/Src/usart.c ****  */
 212:Core/Src/usart.c **** void usart_rx_check(void)
 213:Core/Src/usart.c **** {
 214:Core/Src/usart.c ****     static size_t old_pos;
 215:Core/Src/usart.c ****     size_t pos;
 216:Core/Src/usart.c **** 
 217:Core/Src/usart.c ****     /* Calculate current position in buffer and check for new data available */
 218:Core/Src/usart.c ****     pos = ARRAY_LEN(Buffs.RxBuffer_DMA) - LL_DMA_GetDataLength(DMA1, LL_DMA_CHANNEL_5);
 219:Core/Src/usart.c ****     if (pos != old_pos)
 220:Core/Src/usart.c ****     { /* Check change in received data */
 221:Core/Src/usart.c ****         if (pos > old_pos)
 222:Core/Src/usart.c ****         { /* Current position is over previous one */
 223:Core/Src/usart.c ****             /*
 224:Core/Src/usart.c ****              * Processing is done in "linear" mode.
 225:Core/Src/usart.c ****              *
 226:Core/Src/usart.c ****              * Application processing is fast with single data block,
 227:Core/Src/usart.c ****              * length is simply calculated by subtracting pointers
 228:Core/Src/usart.c ****              *
 229:Core/Src/usart.c ****              * [   0   ]
 230:Core/Src/usart.c ****              * [   1   ] <- old_pos |------------------------------------|
 231:Core/Src/usart.c ****              * [   2   ]            |                                    |
 232:Core/Src/usart.c ****              * [   3   ]            | Single block (len = pos - old_pos) |
 233:Core/Src/usart.c ****              * [   4   ]            |                                    |
 234:Core/Src/usart.c ****              * [   5   ]            |------------------------------------|
 235:Core/Src/usart.c ****              * [   6   ] <- pos
 236:Core/Src/usart.c ****              * [   7   ]
 237:Core/Src/usart.c ****              * [ N - 1 ]
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 284


 238:Core/Src/usart.c ****              */
 239:Core/Src/usart.c ****             usart_process_data(&Buffs.RxBuffer_DMA[old_pos], pos - old_pos);
 240:Core/Src/usart.c ****         }
 241:Core/Src/usart.c ****         else
 242:Core/Src/usart.c ****         {
 243:Core/Src/usart.c ****             /*
 244:Core/Src/usart.c ****              * Processing is done in "overflow" mode..
 245:Core/Src/usart.c ****              *
 246:Core/Src/usart.c ****              * Application must process data twice,
 247:Core/Src/usart.c ****              * since there are 2 linear memory blocks to handle
 248:Core/Src/usart.c ****              *
 249:Core/Src/usart.c ****              * [   0   ]            |---------------------------------|
 250:Core/Src/usart.c ****              * [   1   ]            | Second block (len = pos)        |
 251:Core/Src/usart.c ****              * [   2   ]            |---------------------------------|
 252:Core/Src/usart.c ****              * [   3   ] <- pos
 253:Core/Src/usart.c ****              * [   4   ] <- old_pos |---------------------------------|
 254:Core/Src/usart.c ****              * [   5   ]            |                                 |
 255:Core/Src/usart.c ****              * [   6   ]            | First block (len = N - old_pos) |
 256:Core/Src/usart.c ****              * [   7   ]            |                                 |
 257:Core/Src/usart.c ****              * [ N - 1 ]            |---------------------------------|
 258:Core/Src/usart.c ****              */
 259:Core/Src/usart.c ****             usart_process_data(&Buffs.RxBuffer_DMA[old_pos], ARRAY_LEN(Buffs.RxBuffer_DMA) - old_po
 260:Core/Src/usart.c ****             if (pos > 0)
 261:Core/Src/usart.c ****             {
 262:Core/Src/usart.c ****                 usart_process_data(&Buffs.RxBuffer_DMA[0], pos);
 263:Core/Src/usart.c ****             }
 264:Core/Src/usart.c ****         }
 265:Core/Src/usart.c ****         old_pos = pos; /* Save current position as old for next transfers */
 266:Core/Src/usart.c ****     }
 267:Core/Src/usart.c **** }
 268:Core/Src/usart.c **** 
 269:Core/Src/usart.c **** /**
 270:Core/Src/usart.c ****  * \brief           Process received data over UART
 271:Core/Src/usart.c ****  * \note            Either process them directly or copy to other bigger buffer
 272:Core/Src/usart.c ****  * \param[in]       data: Data to process
 273:Core/Src/usart.c ****  * \param[in]       len: Length in units of bytes
 274:Core/Src/usart.c ****  */
 275:Core/Src/usart.c **** void usart_process_data(const void *data, size_t len)
 276:Core/Src/usart.c **** {
 1229              		.loc 1 276 1 is_stmt 1 view -0
 1230              		.cfi_startproc
 1231              		@ args = 0, pretend = 0, frame = 0
 1232              		@ frame_needed = 0, uses_anonymous_args = 0
 1233              		.loc 1 276 1 is_stmt 0 view .LVU398
 1234 0000 08B5     		push	{r3, lr}
 1235              		.cfi_def_cfa_offset 8
 1236              		.cfi_offset 3, -8
 1237              		.cfi_offset 14, -4
 1238 0002 0A46     		mov	r2, r1
 277:Core/Src/usart.c ****     /* Write data to buffer */
 278:Core/Src/usart.c ****     lwrb_write(&Buffs.RxBuffer, data, len);
 1239              		.loc 1 278 5 is_stmt 1 view .LVU399
 1240 0004 0146     		mov	r1, r0
 1241              	.LVL75:
 1242              		.loc 1 278 5 is_stmt 0 view .LVU400
 1243 0006 0248     		ldr	r0, .L26
 1244              	.LVL76:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 285


 1245              		.loc 1 278 5 view .LVU401
 1246 0008 FFF7FEFF 		bl	lwrb_write
 1247              	.LVL77:
 279:Core/Src/usart.c **** }
 1248              		.loc 1 279 1 view .LVU402
 1249 000c 08BD     		pop	{r3, pc}
 1250              	.L27:
 1251 000e 00BF     		.align	2
 1252              	.L26:
 1253 0010 00080000 		.word	Buffs+2048
 1254              		.cfi_endproc
 1255              	.LFE1160:
 1257              		.section	.text.usart_rx_check,"ax",%progbits
 1258              		.align	1
 1259              		.global	usart_rx_check
 1260              		.syntax unified
 1261              		.thumb
 1262              		.thumb_func
 1263              		.fpu fpv4-sp-d16
 1265              	usart_rx_check:
 1266              	.LFB1159:
 213:Core/Src/usart.c ****     static size_t old_pos;
 1267              		.loc 1 213 1 is_stmt 1 view -0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 0
 1270              		@ frame_needed = 0, uses_anonymous_args = 0
 1271 0000 10B5     		push	{r4, lr}
 1272              		.cfi_def_cfa_offset 8
 1273              		.cfi_offset 4, -8
 1274              		.cfi_offset 14, -4
 214:Core/Src/usart.c ****     size_t pos;
 1275              		.loc 1 214 5 view .LVU404
 215:Core/Src/usart.c **** 
 1276              		.loc 1 215 5 view .LVU405
 218:Core/Src/usart.c ****     if (pos != old_pos)
 1277              		.loc 1 218 5 view .LVU406
 1278              	.LVL78:
 1279              	.LBB371:
 1280              	.LBI371:
1019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 1281              		.loc 4 1019 26 view .LVU407
 1282              	.LBB372:
1021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CNDTR,
 1283              		.loc 4 1021 3 view .LVU408
1022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                    DMA_CNDTR_NDT));
 1284              		.loc 4 1022 3 view .LVU409
1022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                    DMA_CNDTR_NDT));
 1285              		.loc 4 1022 11 is_stmt 0 view .LVU410
 1286 0002 0F4B     		ldr	r3, .L33
 1287 0004 DC6D     		ldr	r4, [r3, #92]
 1288 0006 A4B2     		uxth	r4, r4
 1289              	.LVL79:
1022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                    DMA_CNDTR_NDT));
 1290              		.loc 4 1022 11 view .LVU411
 1291              	.LBE372:
 1292              	.LBE371:
 218:Core/Src/usart.c ****     if (pos != old_pos)
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 286


 1293              		.loc 1 218 9 view .LVU412
 1294 0008 C4F50064 		rsb	r4, r4, #2048
 1295              	.LVL80:
 219:Core/Src/usart.c ****     { /* Check change in received data */
 1296              		.loc 1 219 5 is_stmt 1 view .LVU413
 219:Core/Src/usart.c ****     { /* Check change in received data */
 1297              		.loc 1 219 13 is_stmt 0 view .LVU414
 1298 000c 0D4B     		ldr	r3, .L33+4
 1299 000e 1B68     		ldr	r3, [r3]
 219:Core/Src/usart.c ****     { /* Check change in received data */
 1300              		.loc 1 219 8 view .LVU415
 1301 0010 A342     		cmp	r3, r4
 1302 0012 07D0     		beq	.L28
 221:Core/Src/usart.c ****         { /* Current position is over previous one */
 1303              		.loc 1 221 9 is_stmt 1 view .LVU416
 221:Core/Src/usart.c ****         { /* Current position is over previous one */
 1304              		.loc 1 221 12 is_stmt 0 view .LVU417
 1305 0014 07D2     		bcs	.L30
 239:Core/Src/usart.c ****         }
 1306              		.loc 1 239 13 is_stmt 1 view .LVU418
 1307 0016 E11A     		subs	r1, r4, r3
 1308 0018 0B48     		ldr	r0, .L33+8
 1309 001a 1844     		add	r0, r0, r3
 1310 001c FFF7FEFF 		bl	usart_process_data
 1311              	.LVL81:
 1312              	.L31:
 265:Core/Src/usart.c ****     }
 1313              		.loc 1 265 9 view .LVU419
 265:Core/Src/usart.c ****     }
 1314              		.loc 1 265 17 is_stmt 0 view .LVU420
 1315 0020 084B     		ldr	r3, .L33+4
 1316 0022 1C60     		str	r4, [r3]
 1317              	.L28:
 267:Core/Src/usart.c **** 
 1318              		.loc 1 267 1 view .LVU421
 1319 0024 10BD     		pop	{r4, pc}
 1320              	.LVL82:
 1321              	.L30:
 259:Core/Src/usart.c ****             if (pos > 0)
 1322              		.loc 1 259 13 is_stmt 1 view .LVU422
 1323 0026 C3F50061 		rsb	r1, r3, #2048
 1324 002a 0748     		ldr	r0, .L33+8
 1325 002c 1844     		add	r0, r0, r3
 1326 002e FFF7FEFF 		bl	usart_process_data
 1327              	.LVL83:
 260:Core/Src/usart.c ****             {
 1328              		.loc 1 260 13 view .LVU423
 260:Core/Src/usart.c ****             {
 1329              		.loc 1 260 16 is_stmt 0 view .LVU424
 1330 0032 002C     		cmp	r4, #0
 1331 0034 F4D0     		beq	.L31
 262:Core/Src/usart.c ****             }
 1332              		.loc 1 262 17 is_stmt 1 view .LVU425
 1333 0036 2146     		mov	r1, r4
 1334 0038 0348     		ldr	r0, .L33+8
 1335 003a FFF7FEFF 		bl	usart_process_data
 1336              	.LVL84:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 287


 1337 003e EFE7     		b	.L31
 1338              	.L34:
 1339              		.align	2
 1340              	.L33:
 1341 0040 00000240 		.word	1073872896
 1342 0044 00000000 		.word	.LANCHOR0
 1343 0048 00000000 		.word	Buffs
 1344              		.cfi_endproc
 1345              	.LFE1159:
 1347              		.section	.text.usart_transmit_dma,"ax",%progbits
 1348              		.align	1
 1349              		.global	usart_transmit_dma
 1350              		.syntax unified
 1351              		.thumb
 1352              		.thumb_func
 1353              		.fpu fpv4-sp-d16
 1355              	usart_transmit_dma:
 1356              	.LVL85:
 1357              	.LFB1161:
 280:Core/Src/usart.c **** 
 281:Core/Src/usart.c **** /**
 282:Core/Src/usart.c ****  * \brief           Send string to USART
 283:Core/Src/usart.c ****  * \param[in]       str: String to send
 284:Core/Src/usart.c ****  */
 285:Core/Src/usart.c **** void usart_transmit_dma(const char *str)
 286:Core/Src/usart.c **** {
 1358              		.loc 1 286 1 view -0
 1359              		.cfi_startproc
 1360              		@ args = 0, pretend = 0, frame = 0
 1361              		@ frame_needed = 0, uses_anonymous_args = 0
 1362              		.loc 1 286 1 is_stmt 0 view .LVU427
 1363 0000 10B5     		push	{r4, lr}
 1364              		.cfi_def_cfa_offset 8
 1365              		.cfi_offset 4, -8
 1366              		.cfi_offset 14, -4
 1367 0002 0446     		mov	r4, r0
 287:Core/Src/usart.c ****     size_t size = strlen(str);
 1368              		.loc 1 287 5 is_stmt 1 view .LVU428
 1369              		.loc 1 287 19 is_stmt 0 view .LVU429
 1370 0004 FFF7FEFF 		bl	strlen
 1371              	.LVL86:
 288:Core/Src/usart.c ****     DMA1_Channel4->CCR &= ~DMA_CCR_EN;
 1372              		.loc 1 288 5 is_stmt 1 view .LVU430
 1373              		.loc 1 288 24 is_stmt 0 view .LVU431
 1374 0008 114A     		ldr	r2, .L40
 1375 000a 536C     		ldr	r3, [r2, #68]
 1376 000c 23F00103 		bic	r3, r3, #1
 1377 0010 5364     		str	r3, [r2, #68]
 289:Core/Src/usart.c ****     while (DMA1_Channel4->CCR & DMA_CCR_EN)
 1378              		.loc 1 289 5 is_stmt 1 view .LVU432
 1379              	.L36:
 290:Core/Src/usart.c ****         ;
 1380              		.loc 1 290 9 discriminator 1 view .LVU433
 289:Core/Src/usart.c ****     while (DMA1_Channel4->CCR & DMA_CCR_EN)
 1381              		.loc 1 289 11 discriminator 1 view .LVU434
 289:Core/Src/usart.c ****     while (DMA1_Channel4->CCR & DMA_CCR_EN)
 1382              		.loc 1 289 25 is_stmt 0 discriminator 1 view .LVU435
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 288


 1383 0012 0F4B     		ldr	r3, .L40
 1384 0014 5B6C     		ldr	r3, [r3, #68]
 289:Core/Src/usart.c ****     while (DMA1_Channel4->CCR & DMA_CCR_EN)
 1385              		.loc 1 289 11 discriminator 1 view .LVU436
 1386 0016 13F0010F 		tst	r3, #1
 1387 001a FAD1     		bne	.L36
 291:Core/Src/usart.c ****     DMA1_Channel4->CNDTR = size;
 1388              		.loc 1 291 5 is_stmt 1 view .LVU437
 1389              		.loc 1 291 26 is_stmt 0 view .LVU438
 1390 001c 0C4B     		ldr	r3, .L40
 1391 001e 9864     		str	r0, [r3, #72]
 292:Core/Src/usart.c ****     DMA1_Channel4->CMAR = (uint32_t)str;
 1392              		.loc 1 292 5 is_stmt 1 view .LVU439
 1393              		.loc 1 292 25 is_stmt 0 view .LVU440
 1394 0020 1C65     		str	r4, [r3, #80]
 293:Core/Src/usart.c **** 
 294:Core/Src/usart.c ****     LL_USART_EnableDMAReq_TX(USART1);
 1395              		.loc 1 294 5 is_stmt 1 view .LVU441
 1396              	.LVL87:
 1397              	.LBB373:
 1398              	.LBI373:
4443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 1399              		.loc 6 4443 22 view .LVU442
 1400              	.L37:
4443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 1401              		.loc 6 4443 22 is_stmt 0 view .LVU443
 1402              	.LBE373:
4445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 1403              		.loc 6 4445 3 is_stmt 1 view .LVU444
 1404              	.LBB379:
 1405              	.LBB374:
4445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 1406              		.loc 6 4445 3 view .LVU445
4445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 1407              		.loc 6 4445 3 view .LVU446
4445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 1408              		.loc 6 4445 3 view .LVU447
 1409 0022 0C4A     		ldr	r2, .L40+4
 1410              	.LVL88:
 1411              	.LBB375:
 1412              	.LBI375:
1151:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1413              		.loc 5 1151 31 view .LVU448
 1414              	.LBB376:
1153:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1415              		.loc 5 1153 5 view .LVU449
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1416              		.loc 5 1155 4 view .LVU450
 1417              		.syntax unified
 1418              	@ 1155 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1419 0024 52E8003F 		ldrex r3, [r2]
 1420              	@ 0 "" 2
 1421              	.LVL89:
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1422              		.loc 5 1156 4 view .LVU451
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1423              		.loc 5 1156 4 is_stmt 0 view .LVU452
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 289


 1424              		.thumb
 1425              		.syntax unified
 1426              	.LBE376:
 1427              	.LBE375:
4445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 1428              		.loc 6 4445 3 view .LVU453
 1429 0028 43F08003 		orr	r3, r3, #128
 1430              	.LVL90:
4445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 1431              		.loc 6 4445 3 is_stmt 1 view .LVU454
 1432              	.LBB377:
 1433              	.LBI377:
1202:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1434              		.loc 5 1202 31 view .LVU455
 1435              	.LBB378:
1204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1436              		.loc 5 1204 4 view .LVU456
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1437              		.loc 5 1206 4 view .LVU457
 1438              		.syntax unified
 1439              	@ 1206 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1440 002c 42E80031 		strex r1, r3, [r2]
 1441              	@ 0 "" 2
 1442              	.LVL91:
 1443              		.loc 5 1207 4 view .LVU458
 1444              		.loc 5 1207 4 is_stmt 0 view .LVU459
 1445              		.thumb
 1446              		.syntax unified
 1447              	.LBE378:
 1448              	.LBE377:
4445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 1449              		.loc 6 4445 3 view .LVU460
 1450 0030 0029     		cmp	r1, #0
 1451 0032 F6D1     		bne	.L37
 1452              	.LBE374:
 1453              	.LBE379:
4445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 1454              		.loc 6 4445 3 is_stmt 1 view .LVU461
 1455              	.LVL92:
 295:Core/Src/usart.c **** 
 296:Core/Src/usart.c ****     DMA1_Channel4->CCR |= DMA_CCR_EN;
 1456              		.loc 1 296 5 view .LVU462
 1457              		.loc 1 296 24 is_stmt 0 view .LVU463
 1458 0034 064A     		ldr	r2, .L40
 1459 0036 536C     		ldr	r3, [r2, #68]
 1460 0038 43F00103 		orr	r3, r3, #1
 1461 003c 5364     		str	r3, [r2, #68]
 297:Core/Src/usart.c **** 
 298:Core/Src/usart.c ****     while (!utx_finished)
 1462              		.loc 1 298 5 is_stmt 1 view .LVU464
 1463              	.L38:
 299:Core/Src/usart.c ****         ;
 1464              		.loc 1 299 9 discriminator 1 view .LVU465
 298:Core/Src/usart.c ****         ;
 1465              		.loc 1 298 11 discriminator 1 view .LVU466
 298:Core/Src/usart.c ****         ;
 1466              		.loc 1 298 12 is_stmt 0 discriminator 1 view .LVU467
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 290


 1467 003e 064B     		ldr	r3, .L40+8
 1468 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 298:Core/Src/usart.c ****         ;
 1469              		.loc 1 298 11 discriminator 1 view .LVU468
 1470 0042 002B     		cmp	r3, #0
 1471 0044 FBD0     		beq	.L38
 300:Core/Src/usart.c ****     utx_finished = false;
 1472              		.loc 1 300 5 is_stmt 1 view .LVU469
 1473              		.loc 1 300 18 is_stmt 0 view .LVU470
 1474 0046 044B     		ldr	r3, .L40+8
 1475 0048 0022     		movs	r2, #0
 1476 004a 1A70     		strb	r2, [r3]
 301:Core/Src/usart.c **** }
 1477              		.loc 1 301 1 view .LVU471
 1478 004c 10BD     		pop	{r4, pc}
 1479              	.LVL93:
 1480              	.L41:
 1481              		.loc 1 301 1 view .LVU472
 1482 004e 00BF     		.align	2
 1483              	.L40:
 1484 0050 00000240 		.word	1073872896
 1485 0054 08380140 		.word	1073821704
 1486 0058 00000000 		.word	.LANCHOR1
 1487              		.cfi_endproc
 1488              	.LFE1161:
 1490              		.section	.text.__io_putchar,"ax",%progbits
 1491              		.align	1
 1492              		.global	__io_putchar
 1493              		.syntax unified
 1494              		.thumb
 1495              		.thumb_func
 1496              		.fpu fpv4-sp-d16
 1498              	__io_putchar:
 1499              	.LVL94:
 1500              	.LFB1162:
 302:Core/Src/usart.c **** 
 303:Core/Src/usart.c **** /*	This is required to use printf											*/
 304:Core/Src/usart.c **** /*	This basically tells the compiler what to do when it encounters printf	*/
 305:Core/Src/usart.c **** /*	I honestly can't fully explain what is going on but it works			*/
 306:Core/Src/usart.c **** #ifdef __GNUC__
 307:Core/Src/usart.c **** #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
 308:Core/Src/usart.c **** //	#define GETCHAR_PROTOTYPE int __io_getchar (void)
 309:Core/Src/usart.c **** #else
 310:Core/Src/usart.c **** #define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
 311:Core/Src/usart.c **** //	#define GETCHAR_PROTOTYPE int fgetc(FILE * f)
 312:Core/Src/usart.c **** #endif
 313:Core/Src/usart.c **** 
 314:Core/Src/usart.c **** PUTCHAR_PROTOTYPE
 315:Core/Src/usart.c **** {
 1501              		.loc 1 315 1 is_stmt 1 view -0
 1502              		.cfi_startproc
 1503              		@ args = 0, pretend = 0, frame = 0
 1504              		@ frame_needed = 0, uses_anonymous_args = 0
 1505              		.loc 1 315 1 is_stmt 0 view .LVU474
 1506 0000 10B5     		push	{r4, lr}
 1507              		.cfi_def_cfa_offset 8
 1508              		.cfi_offset 4, -8
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 291


 1509              		.cfi_offset 14, -4
 1510 0002 0446     		mov	r4, r0
 316:Core/Src/usart.c ****     serialWrite(ch);
 1511              		.loc 1 316 5 is_stmt 1 view .LVU475
 1512 0004 C0B2     		uxtb	r0, r0
 1513              	.LVL95:
 1514              		.loc 1 316 5 is_stmt 0 view .LVU476
 1515 0006 FFF7FEFF 		bl	serialWrite
 1516              	.LVL96:
 317:Core/Src/usart.c ****     return ch;
 1517              		.loc 1 317 5 is_stmt 1 view .LVU477
 318:Core/Src/usart.c **** }
 1518              		.loc 1 318 1 is_stmt 0 view .LVU478
 1519 000a 2046     		mov	r0, r4
 1520 000c 10BD     		pop	{r4, pc}
 1521              		.loc 1 318 1 view .LVU479
 1522              		.cfi_endproc
 1523              	.LFE1162:
 1525              		.section	.text.USART1_IRQHandler,"ax",%progbits
 1526              		.align	1
 1527              		.global	USART1_IRQHandler
 1528              		.syntax unified
 1529              		.thumb
 1530              		.thumb_func
 1531              		.fpu fpv4-sp-d16
 1533              	USART1_IRQHandler:
 1534              	.LFB1163:
 319:Core/Src/usart.c **** 
 320:Core/Src/usart.c **** void USART1_IRQHandler(void)
 321:Core/Src/usart.c **** {
 1535              		.loc 1 321 1 is_stmt 1 view -0
 1536              		.cfi_startproc
 1537              		@ args = 0, pretend = 0, frame = 0
 1538              		@ frame_needed = 0, uses_anonymous_args = 0
 1539 0000 08B5     		push	{r3, lr}
 1540              		.cfi_def_cfa_offset 8
 1541              		.cfi_offset 3, -8
 1542              		.cfi_offset 14, -4
 322:Core/Src/usart.c ****     if (LL_USART_IsEnabledIT_IDLE(USART1) && LL_USART_IsActiveFlag_IDLE(USART1))
 1543              		.loc 1 322 5 view .LVU481
 1544              	.LVL97:
 1545              	.LBB380:
 1546              	.LBI380:
4150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 1547              		.loc 6 4150 26 view .LVU482
 1548              	.LBB381:
4152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 1549              		.loc 6 4152 3 view .LVU483
4152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 1550              		.loc 6 4152 12 is_stmt 0 view .LVU484
 1551 0002 0D4B     		ldr	r3, .L48
 1552 0004 1B68     		ldr	r3, [r3]
4152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 1553              		.loc 6 4152 81 view .LVU485
 1554 0006 13F0100F 		tst	r3, #16
 1555 000a 09D0     		beq	.L45
 1556              	.LVL98:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 292


4152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 1557              		.loc 6 4152 81 view .LVU486
 1558              	.LBE381:
 1559              	.LBE380:
 1560              	.LBB382:
 1561              	.LBI382:
3113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 1562              		.loc 6 3113 26 is_stmt 1 view .LVU487
 1563              	.LBB383:
3115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 1564              		.loc 6 3115 3 view .LVU488
3115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 1565              		.loc 6 3115 12 is_stmt 0 view .LVU489
 1566 000c 0A4B     		ldr	r3, .L48
 1567 000e DB69     		ldr	r3, [r3, #28]
3115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 1568              		.loc 6 3115 77 view .LVU490
 1569 0010 13F0100F 		tst	r3, #16
 1570 0014 04D0     		beq	.L45
 1571              	.LVL99:
3115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 1572              		.loc 6 3115 77 view .LVU491
 1573              	.LBE383:
 1574              	.LBE382:
 323:Core/Src/usart.c ****     {
 324:Core/Src/usart.c ****         LL_USART_ClearFlag_IDLE(USART1); /* Clear IDLE line flag */
 1575              		.loc 1 324 9 is_stmt 1 view .LVU492
 1576              	.LBB384:
 1577              	.LBI384:
3492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** {
 1578              		.loc 6 3492 22 view .LVU493
 1579              	.LBB385:
3494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 1580              		.loc 6 3494 3 view .LVU494
 1581 0016 084B     		ldr	r3, .L48
 1582 0018 1022     		movs	r2, #16
 1583 001a 1A62     		str	r2, [r3, #32]
 1584              	.LVL100:
3494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_usart.h **** }
 1585              		.loc 6 3494 3 is_stmt 0 view .LVU495
 1586              	.LBE385:
 1587              	.LBE384:
 325:Core/Src/usart.c ****         usart_rx_check();                /* Check for data to process */
 1588              		.loc 1 325 9 is_stmt 1 view .LVU496
 1589 001c FFF7FEFF 		bl	usart_rx_check
 1590              	.LVL101:
 1591              	.L45:
 326:Core/Src/usart.c ****     }
 327:Core/Src/usart.c ****     if (USART1->ISR & USART_ISR_ORE)
 1592              		.loc 1 327 5 view .LVU497
 1593              		.loc 1 327 15 is_stmt 0 view .LVU498
 1594 0020 054B     		ldr	r3, .L48
 1595 0022 DB69     		ldr	r3, [r3, #28]
 1596              		.loc 1 327 8 view .LVU499
 1597 0024 13F0080F 		tst	r3, #8
 1598 0028 04D0     		beq	.L44
 328:Core/Src/usart.c ****         USART1->ICR |= USART_ICR_ORECF;
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 293


 1599              		.loc 1 328 9 is_stmt 1 view .LVU500
 1600              		.loc 1 328 21 is_stmt 0 view .LVU501
 1601 002a 034A     		ldr	r2, .L48
 1602 002c 136A     		ldr	r3, [r2, #32]
 1603 002e 43F00803 		orr	r3, r3, #8
 1604 0032 1362     		str	r3, [r2, #32]
 1605              	.L44:
 329:Core/Src/usart.c **** }
 1606              		.loc 1 329 1 view .LVU502
 1607 0034 08BD     		pop	{r3, pc}
 1608              	.L49:
 1609 0036 00BF     		.align	2
 1610              	.L48:
 1611 0038 00380140 		.word	1073821696
 1612              		.cfi_endproc
 1613              	.LFE1163:
 1615              		.section	.text.DMA1_Channel4_IRQHandler,"ax",%progbits
 1616              		.align	1
 1617              		.global	DMA1_Channel4_IRQHandler
 1618              		.syntax unified
 1619              		.thumb
 1620              		.thumb_func
 1621              		.fpu fpv4-sp-d16
 1623              	DMA1_Channel4_IRQHandler:
 1624              	.LFB1164:
 330:Core/Src/usart.c **** 
 331:Core/Src/usart.c **** /**
 332:Core/Src/usart.c ****  * @brief This function handles DMA1 channel4 global interrupt for USART TX.
 333:Core/Src/usart.c ****  */
 334:Core/Src/usart.c **** void DMA1_Channel4_IRQHandler(void)
 335:Core/Src/usart.c **** {
 1625              		.loc 1 335 1 is_stmt 1 view -0
 1626              		.cfi_startproc
 1627              		@ args = 0, pretend = 0, frame = 0
 1628              		@ frame_needed = 0, uses_anonymous_args = 0
 1629              		@ link register save eliminated.
 336:Core/Src/usart.c ****     if (LL_DMA_IsEnabledIT_TC(DMA1, LL_DMA_CHANNEL_4) && LL_DMA_IsActiveFlag_TC4(DMA1))
 1630              		.loc 1 336 5 view .LVU504
 1631              	.LVL102:
 1632              	.LBB386:
 1633              	.LBI386:
2250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
2251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
2252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
2253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Enable Transfer error interrupt.
2254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          TEIE          LL_DMA_EnableIT_TE
2255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
2257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
2258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
2259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
2260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
2261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
2262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
2263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
2264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
2265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 294


2266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_EnableIT_TE(DMA_TypeDef *DMAx, uint32_t Channel)
2267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
2268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
2269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   SET_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_TEIE
2270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
2271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
2272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
2273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Disable Transfer complete interrupt.
2274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          TCIE          LL_DMA_DisableIT_TC
2275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
2277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
2278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
2279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
2280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
2281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
2282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
2283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
2284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
2285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
2286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_DisableIT_TC(DMA_TypeDef *DMAx, uint32_t Channel)
2287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
2288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
2289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   CLEAR_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_TC
2290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
2291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
2292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
2293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Disable Half transfer interrupt.
2294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          HTIE          LL_DMA_DisableIT_HT
2295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
2297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
2298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
2299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
2300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
2301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
2302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
2303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
2304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
2305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
2306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_DisableIT_HT(DMA_TypeDef *DMAx, uint32_t Channel)
2307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
2308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
2309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   CLEAR_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_HT
2310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
2311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
2312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
2313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Disable Transfer error interrupt.
2314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          TEIE          LL_DMA_DisableIT_TE
2315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
2317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
2318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
2319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
2320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
2321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
2322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 295


2323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
2324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval None
2325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
2326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_DisableIT_TE(DMA_TypeDef *DMAx, uint32_t Channel)
2327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
2328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
2329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   CLEAR_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_TE
2330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
2331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
2332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
2333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Check if Transfer complete Interrupt is enabled.
2334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          TCIE          LL_DMA_IsEnabledIT_TC
2335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
2337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
2338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
2339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
2340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
2341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
2342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
2343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
2344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
2345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
2346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsEnabledIT_TC(DMA_TypeDef *DMAx, uint32_t Channel)
 1634              		.loc 4 2346 26 view .LVU505
 1635              	.LBB387:
2347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
2348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 1636              		.loc 4 2348 3 view .LVU506
2349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 1637              		.loc 4 2349 3 view .LVU507
 1638              		.loc 4 2349 12 is_stmt 0 view .LVU508
 1639 0000 084B     		ldr	r3, .L52
 1640 0002 5B6C     		ldr	r3, [r3, #68]
2350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                    DMA_CCR_TCIE) == (DMA_CCR_TCIE)) ? 1UL : 0UL);
 1641              		.loc 4 2350 59 view .LVU509
 1642 0004 13F0020F 		tst	r3, #2
 1643 0008 0BD0     		beq	.L50
 1644              	.LVL103:
 1645              		.loc 4 2350 59 view .LVU510
 1646              	.LBE387:
 1647              	.LBE386:
 1648              	.LBB388:
 1649              	.LBI388:
1677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 1650              		.loc 4 1677 26 is_stmt 1 view .LVU511
 1651              	.LBB389:
1679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 1652              		.loc 4 1679 3 view .LVU512
1679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 1653              		.loc 4 1679 12 is_stmt 0 view .LVU513
 1654 000a 064B     		ldr	r3, .L52
 1655 000c 1B68     		ldr	r3, [r3]
1679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 1656              		.loc 4 1679 73 view .LVU514
 1657 000e 13F4005F 		tst	r3, #8192
 1658 0012 06D0     		beq	.L50
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 296


 1659              	.LVL104:
1679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 1660              		.loc 4 1679 73 view .LVU515
 1661              	.LBE389:
 1662              	.LBE388:
 337:Core/Src/usart.c ****     {
 338:Core/Src/usart.c ****         LL_DMA_ClearFlag_TC4(DMA1);                        /* Clear transfer complete flag */
 1663              		.loc 1 338 9 is_stmt 1 view .LVU516
 1664              	.LBB390:
 1665              	.LBI390:
2013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 1666              		.loc 4 2013 22 view .LVU517
 1667              	.LBB391:
2015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 1668              		.loc 4 2015 3 view .LVU518
 1669 0014 034B     		ldr	r3, .L52
 1670 0016 4FF40052 		mov	r2, #8192
 1671 001a 5A60     		str	r2, [r3, #4]
 1672              	.LVL105:
2015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 1673              		.loc 4 2015 3 is_stmt 0 view .LVU519
 1674              	.LBE391:
 1675              	.LBE390:
 339:Core/Src/usart.c ****         utx_finished = true;
 1676              		.loc 1 339 9 is_stmt 1 view .LVU520
 1677              		.loc 1 339 22 is_stmt 0 view .LVU521
 1678 001c 024B     		ldr	r3, .L52+4
 1679 001e 0122     		movs	r2, #1
 1680 0020 1A70     		strb	r2, [r3]
 1681              	.L50:
 340:Core/Src/usart.c ****     }
 341:Core/Src/usart.c **** }
 1682              		.loc 1 341 1 view .LVU522
 1683 0022 7047     		bx	lr
 1684              	.L53:
 1685              		.align	2
 1686              	.L52:
 1687 0024 00000240 		.word	1073872896
 1688 0028 00000000 		.word	.LANCHOR1
 1689              		.cfi_endproc
 1690              	.LFE1164:
 1692              		.section	.text.DMA1_Channel5_IRQHandler,"ax",%progbits
 1693              		.align	1
 1694              		.global	DMA1_Channel5_IRQHandler
 1695              		.syntax unified
 1696              		.thumb
 1697              		.thumb_func
 1698              		.fpu fpv4-sp-d16
 1700              	DMA1_Channel5_IRQHandler:
 1701              	.LFB1165:
 342:Core/Src/usart.c **** 
 343:Core/Src/usart.c **** /**
 344:Core/Src/usart.c ****  * @brief This function handles DMA1 channel5 global interrupt for USART RX.
 345:Core/Src/usart.c ****  */
 346:Core/Src/usart.c **** void DMA1_Channel5_IRQHandler(void)
 347:Core/Src/usart.c **** {
 1702              		.loc 1 347 1 is_stmt 1 view -0
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 297


 1703              		.cfi_startproc
 1704              		@ args = 0, pretend = 0, frame = 0
 1705              		@ frame_needed = 0, uses_anonymous_args = 0
 1706 0000 08B5     		push	{r3, lr}
 1707              		.cfi_def_cfa_offset 8
 1708              		.cfi_offset 3, -8
 1709              		.cfi_offset 14, -4
 348:Core/Src/usart.c ****     /* Check half-transfer complete interrupt */
 349:Core/Src/usart.c ****     if (LL_DMA_IsEnabledIT_HT(DMA1, LL_DMA_CHANNEL_5) && LL_DMA_IsActiveFlag_HT5(DMA1))
 1710              		.loc 1 349 5 view .LVU524
 1711              	.LVL106:
 1712              	.LBB392:
 1713              	.LBI392:
2351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
2352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** 
2353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** /**
2354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @brief  Check if Half transfer Interrupt is enabled.
2355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          HTIE          LL_DMA_IsEnabledIT_HT
2356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
2357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
2358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
2359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
2360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
2361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
2362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
2363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
2364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
2365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
2366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   */
2367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsEnabledIT_HT(DMA_TypeDef *DMAx, uint32_t Channel)
 1714              		.loc 4 2367 26 view .LVU525
 1715              	.LBB393:
2368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
2369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 1716              		.loc 4 2369 3 view .LVU526
2370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 1717              		.loc 4 2370 3 view .LVU527
 1718              		.loc 4 2370 12 is_stmt 0 view .LVU528
 1719 0002 104B     		ldr	r3, .L58
 1720 0004 9B6D     		ldr	r3, [r3, #88]
2371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                    DMA_CCR_HTIE) == (DMA_CCR_HTIE)) ? 1UL : 0UL);
 1721              		.loc 4 2371 59 view .LVU529
 1722 0006 13F0040F 		tst	r3, #4
 1723 000a 0AD0     		beq	.L55
 1724              	.LVL107:
 1725              		.loc 4 2371 59 view .LVU530
 1726              	.LBE393:
 1727              	.LBE392:
 1728              	.LBB394:
 1729              	.LBI394:
1765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 1730              		.loc 4 1765 26 is_stmt 1 view .LVU531
 1731              	.LBB395:
1767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 1732              		.loc 4 1767 3 view .LVU532
1767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 1733              		.loc 4 1767 12 is_stmt 0 view .LVU533
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 298


 1734 000c 0D4B     		ldr	r3, .L58
 1735 000e 1B68     		ldr	r3, [r3]
1767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 1736              		.loc 4 1767 73 view .LVU534
 1737 0010 13F4802F 		tst	r3, #262144
 1738 0014 05D0     		beq	.L55
 1739              	.LVL108:
1767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 1740              		.loc 4 1767 73 view .LVU535
 1741              	.LBE395:
 1742              	.LBE394:
 350:Core/Src/usart.c ****     {
 351:Core/Src/usart.c ****         LL_DMA_ClearFlag_HT5(DMA1); /* Clear half-transfer complete flag */
 1743              		.loc 1 351 9 is_stmt 1 view .LVU536
 1744              	.LBB396:
 1745              	.LBI396:
2101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 1746              		.loc 4 2101 22 view .LVU537
 1747              	.LBB397:
2103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 1748              		.loc 4 2103 3 view .LVU538
 1749 0016 0B4B     		ldr	r3, .L58
 1750 0018 4FF48022 		mov	r2, #262144
 1751 001c 5A60     		str	r2, [r3, #4]
 1752              	.LVL109:
2103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 1753              		.loc 4 2103 3 is_stmt 0 view .LVU539
 1754              	.LBE397:
 1755              	.LBE396:
 352:Core/Src/usart.c ****         usart_rx_check();           /* Check for data to process */
 1756              		.loc 1 352 9 is_stmt 1 view .LVU540
 1757 001e FFF7FEFF 		bl	usart_rx_check
 1758              	.LVL110:
 1759              	.L55:
 353:Core/Src/usart.c ****     }
 354:Core/Src/usart.c **** 
 355:Core/Src/usart.c ****     /* Check transfer-complete interrupt */
 356:Core/Src/usart.c ****     if (LL_DMA_IsEnabledIT_TC(DMA1, LL_DMA_CHANNEL_5) && LL_DMA_IsActiveFlag_TC5(DMA1))
 1760              		.loc 1 356 5 view .LVU541
 1761              	.LBB398:
 1762              	.LBI398:
2346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 1763              		.loc 4 2346 26 view .LVU542
 1764              	.LBB399:
2348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****   return ((READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 1765              		.loc 4 2348 3 view .LVU543
2349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                    DMA_CCR_TCIE) == (DMA_CCR_TCIE)) ? 1UL : 0UL);
 1766              		.loc 4 2349 3 view .LVU544
2349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h ****                    DMA_CCR_TCIE) == (DMA_CCR_TCIE)) ? 1UL : 0UL);
 1767              		.loc 4 2349 12 is_stmt 0 view .LVU545
 1768 0022 084B     		ldr	r3, .L58
 1769 0024 9B6D     		ldr	r3, [r3, #88]
2350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 1770              		.loc 4 2350 59 view .LVU546
 1771 0026 13F0020F 		tst	r3, #2
 1772 002a 0AD0     		beq	.L54
 1773              	.LVL111:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 299


2350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 1774              		.loc 4 2350 59 view .LVU547
 1775              	.LBE399:
 1776              	.LBE398:
 1777              	.LBB400:
 1778              	.LBI400:
1688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 1779              		.loc 4 1688 26 is_stmt 1 view .LVU548
 1780              	.LBB401:
1690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 1781              		.loc 4 1690 3 view .LVU549
1690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 1782              		.loc 4 1690 12 is_stmt 0 view .LVU550
 1783 002c 054B     		ldr	r3, .L58
 1784 002e 1B68     		ldr	r3, [r3]
1690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 1785              		.loc 4 1690 73 view .LVU551
 1786 0030 13F4003F 		tst	r3, #131072
 1787 0034 05D0     		beq	.L54
 1788              	.LVL112:
1690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 1789              		.loc 4 1690 73 view .LVU552
 1790              	.LBE401:
 1791              	.LBE400:
 357:Core/Src/usart.c ****     {
 358:Core/Src/usart.c ****         LL_DMA_ClearFlag_TC5(DMA1); /* Clear transfer complete flag */
 1792              		.loc 1 358 9 is_stmt 1 view .LVU553
 1793              	.LBB402:
 1794              	.LBI402:
2024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** {
 1795              		.loc 4 2024 22 view .LVU554
 1796              	.LBB403:
2026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 1797              		.loc 4 2026 3 view .LVU555
 1798 0036 034B     		ldr	r3, .L58
 1799 0038 4FF40032 		mov	r2, #131072
 1800 003c 5A60     		str	r2, [r3, #4]
 1801              	.LVL113:
2026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h **** }
 1802              		.loc 4 2026 3 is_stmt 0 view .LVU556
 1803              	.LBE403:
 1804              	.LBE402:
 359:Core/Src/usart.c ****         usart_rx_check();           /* Check for data to process */
 1805              		.loc 1 359 9 is_stmt 1 view .LVU557
 1806 003e FFF7FEFF 		bl	usart_rx_check
 1807              	.LVL114:
 1808              	.L54:
 360:Core/Src/usart.c ****     }
 361:Core/Src/usart.c **** }
 1809              		.loc 1 361 1 is_stmt 0 view .LVU558
 1810 0042 08BD     		pop	{r3, pc}
 1811              	.L59:
 1812              		.align	2
 1813              	.L58:
 1814 0044 00000240 		.word	1073872896
 1815              		.cfi_endproc
 1816              	.LFE1165:
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 300


 1818              		.global	Buffs
 1819              		.global	utx_finished
 1820              		.section	.bss.Buffs,"aw",%nobits
 1821              		.align	2
 1824              	Buffs:
 1825 0000 00000000 		.space	4116
 1825      00000000 
 1825      00000000 
 1825      00000000 
 1825      00000000 
 1826              		.section	.bss.old_pos.0,"aw",%nobits
 1827              		.align	2
 1828              		.set	.LANCHOR0,. + 0
 1831              	old_pos.0:
 1832 0000 00000000 		.space	4
 1833              		.section	.bss.utx_finished,"aw",%nobits
 1834              		.set	.LANCHOR1,. + 0
 1837              	utx_finished:
 1838 0000 00       		.space	1
 1839              		.text
 1840              	.Letext0:
 1841              		.file 8 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 1842              		.file 9 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/machine/_de
 1843              		.file 10 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_stdin
 1844              		.file 11 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/lib/gcc/arm-none-eabi/10.3.1/inc
 1845              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h"
 1846              		.file 13 "Middlewares/Third_Party/lwrb/../lwrb/lwrb.h"
 1847              		.file 14 "Core/Inc/usart.h"
 1848              		.file 15 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/string.h"
ARM GAS  /var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s 			page 301


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:18     .text.MX_USART1_UART_Init:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:26     .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:904    .text.MX_USART1_UART_Init:0000000000000204 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1824   .bss.Buffs:0000000000000000 Buffs
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:920    .text.MX_USART2_UART_Init:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:927    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1132   .text.MX_USART2_UART_Init:00000000000000c0 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1138   .text.serialWrite:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1145   .text.serialWrite:0000000000000000 serialWrite
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1174   .text.serialWrite:0000000000000014 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1179   .text.serialRead:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1186   .text.serialRead:0000000000000000 serialRead
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1214   .text.serialRead:0000000000000014 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1219   .text.usart_process_data:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1226   .text.usart_process_data:0000000000000000 usart_process_data
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1253   .text.usart_process_data:0000000000000010 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1258   .text.usart_rx_check:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1265   .text.usart_rx_check:0000000000000000 usart_rx_check
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1341   .text.usart_rx_check:0000000000000040 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1348   .text.usart_transmit_dma:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1355   .text.usart_transmit_dma:0000000000000000 usart_transmit_dma
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1484   .text.usart_transmit_dma:0000000000000050 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1491   .text.__io_putchar:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1498   .text.__io_putchar:0000000000000000 __io_putchar
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1526   .text.USART1_IRQHandler:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1533   .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1611   .text.USART1_IRQHandler:0000000000000038 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1616   .text.DMA1_Channel4_IRQHandler:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1623   .text.DMA1_Channel4_IRQHandler:0000000000000000 DMA1_Channel4_IRQHandler
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1687   .text.DMA1_Channel4_IRQHandler:0000000000000024 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1693   .text.DMA1_Channel5_IRQHandler:0000000000000000 $t
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1700   .text.DMA1_Channel5_IRQHandler:0000000000000000 DMA1_Channel5_IRQHandler
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1814   .text.DMA1_Channel5_IRQHandler:0000000000000044 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1837   .bss.utx_finished:0000000000000000 utx_finished
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1821   .bss.Buffs:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1827   .bss.old_pos.0:0000000000000000 $d
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1831   .bss.old_pos.0:0000000000000000 old_pos.0
/var/folders/9y/n02fl3g16gnf7ppy14xghdy80000gn/T//cccgErMQ.s:1838   .bss.utx_finished:0000000000000000 $d

UNDEFINED SYMBOLS
LL_GPIO_Init
LL_USART_Init
lwrb_write
strlen
